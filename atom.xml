<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M@tr1xの日常</title>
  
  
  <link href="https://www.blog.hackerjerry.top/atom.xml" rel="self"/>
  
  <link href="https://www.blog.hackerjerry.top/"/>
  <updated>2020-11-28T13:40:38.166Z</updated>
  <id>https://www.blog.hackerjerry.top/</id>
  
  <author>
    <name>M@tr1x</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Interesting-Things</title>
    <link href="https://www.blog.hackerjerry.top/2020/11/28/Interesting-Things_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/11/28/Interesting-Things_new/</id>
    <published>2020-11-28T11:33:52.000Z</published>
    <updated>2020-11-28T13:40:38.166Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>宜家真是太厚道了……我之前买了个家具 3600，放在那边一直没装，现在调价 2800 了……我觉得好不爽，但是也认了……<br>结果和店员吐槽这个事情，店员说半年可退换啊，你直接拿来退就好。我说算了，好大个东西，搬来搬去太麻烦。<br>结果店员说你以前发票还在不在？在的话你下次带来再买一个新的，然后用过去的发票来我这退新的就好，卧槽，好机智。<br>回帖：这个思路我用过，之前淘宝买衣服，尺码不合适，偏偏没买运费险。我就和客服说好，又买了尺码合适的，这回买运费险，收货后把第一件退回去。双方都皆大欢喜。</p><blockquote><p>作者：莞尔<br>链接：<a href="https://www.zhihu.com/question/431045341/answer/1593782118">https://www.zhihu.com/question/431045341/answer/1593782118</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Interesting-Things-1.png#align=left&display=inline&height=135&margin=%5Bobject%20Object%5D&name=image.png&originHeight=201&originWidth=677&size=161800&status=done&style=none&width=456" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h1&gt;&lt;p&gt;宜家真是太厚道了……我之前买了个家具 3600，放在那边一直没装，现在调价 2800 了……我觉得好不爽，但是</summary>
      
    
    
    
    
    <category term="生活" scheme="https://www.blog.hackerjerry.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="杂谈" scheme="https://www.blog.hackerjerry.top/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Tricks-in-python</title>
    <link href="https://www.blog.hackerjerry.top/2020/11/28/Tricks-in-python_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/11/28/Tricks-in-python_new/</id>
    <published>2020-11-28T09:43:42.000Z</published>
    <updated>2020-11-28T13:39:52.409Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="装饰器-classmethod-和-staticmethod"><a href="#装饰器-classmethod-和-staticmethod" class="headerlink" title="装饰器-@classmethod 和@staticmethod"></a>装饰器-@classmethod 和@staticmethod</h1><p>将方法定义成类方法和静态方法。</p><p><a href="https://zhuanlan.zhihu.com/p/28010894">https://zhuanlan.zhihu.com/p/28010894</a><br>可以看看这篇文章</p><h1 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h1><h2 id="通过函数方式创建"><a href="#通过函数方式创建" class="headerlink" title="通过函数方式创建"></a>通过函数方式创建</h2><p>通过<code>yield</code>关键字将一个函数变成<code>generator</code>。例如：<br>函数的定义：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">max</span>):</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        print(b)</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;done&#x27;</span></span><br></pre></td></tr></table></figure><p>生成器的定义：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">max</span>):</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        <span class="keyword">yield</span> b</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;done&#x27;</span></span><br></pre></td></tr></table></figure><p>两者的差别在于生成器将函数的<code>print(b)</code>改为<code>yield b</code>。<code>yield</code>可以翻译为<code>生成</code>，即基于某次计算生成某个元素，而不是提前存储了该元素。<br>函数式的<code>generator</code>一般采用<code>for</code>循环来获取元素，也可以通过<code>next()</code>来获取下一个元素的值，例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> n <span class="keyword">in</span> fib(<span class="number">6</span>):</span><br><span class="line"><span class="meta">... </span>    print(n)</span><br><span class="line">...</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><p>如果要获取<code>return</code>的内容，可以捕获<code>StopIteration</code>错误，返回值包含在<code>StopIteration</code>的<code>value</code>中。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = fib(<span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>        x = next(g)</span><br><span class="line"><span class="meta">... </span>        print(<span class="string">&#x27;g:&#x27;</span>, x)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">except</span> StopIteration <span class="keyword">as</span> e:</span><br><span class="line"><span class="meta">... </span>        print(<span class="string">&#x27;Generator return value:&#x27;</span>, e.value)</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">break</span></span><br><span class="line">...</span><br><span class="line">g: <span class="number">1</span></span><br><span class="line">g: <span class="number">1</span></span><br><span class="line">g: <span class="number">2</span></span><br><span class="line">g: <span class="number">3</span></span><br><span class="line">g: <span class="number">5</span></span><br><span class="line">g: <span class="number">8</span></span><br><span class="line">Generator <span class="keyword">return</span> value: done</span><br></pre></td></tr></table></figure><h1 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h1><h2 id="访问限制"><a href="#访问限制" class="headerlink" title="访问限制"></a>访问限制</h2><p>实例的变量以<code>__xxx</code>双下划线开头，没有以<code>__</code>双下划线结尾的，则该变量为私有变量，外部一般无法访问。例如：<code>self.__name = name</code>。<br>如果变量名是双下划线开头、双下划线结尾，<code>__xxx__</code>是特殊变量而不是私有变量。私有变量的方式可以避免外部对实例内部数据的修改，可以做参数检查。<br>如果需要获取或修改内部的数据，可以增加<code>get</code>和<code>set</code>的方法。例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="comment">#构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, score</span>):</span></span><br><span class="line">        self.__name = name</span><br><span class="line">        self.__score = score</span><br><span class="line">    <span class="comment">#get方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_name</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_score</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__score</span><br><span class="line">     <span class="comment">#set方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_score</span>(<span class="params">self, score</span>):</span></span><br><span class="line">        <span class="comment">#参数检查</span></span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= score &lt;= <span class="number">100</span>:</span><br><span class="line">            self.__score = score</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;bad score&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;装饰器-classmethod-和-staticmethod&quot;&gt;&lt;a href=&quot;#装饰器-classmethod-和-staticmethod&quot; class=&quot;headerlink&quot; title=&quot;装饰器-@classmet</summary>
      
    
    
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/categories/python/"/>
    
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Bugs-in-python</title>
    <link href="https://www.blog.hackerjerry.top/2020/11/28/Bugs-in-python_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/11/28/Bugs-in-python_new/</id>
    <published>2020-11-28T08:07:24.000Z</published>
    <updated>2020-11-28T13:40:02.614Z</updated>
    
    <content type="html"><![CDATA[<p>记录在编写 python 程序中遇到的 bug 们。</p><a id="more"></a><h1 id="跨目录调用模块"><a href="#跨目录调用模块" class="headerlink" title="跨目录调用模块"></a>跨目录调用模块</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">project</span><br><span class="line">├── package1</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── module_11.py</span><br><span class="line">│   └── module_12.py</span><br><span class="line">├── package2</span><br><span class="line">│   ├── __init_.py</span><br><span class="line">│   ├── module_21.py</span><br><span class="line">│   └── module_22.py</span><br><span class="line">├── main.py</span><br><span class="line">└── tool.py</span><br></pre></td></tr></table></figure><p>对于这样一个目录结构的项目，我们需要知道：<br>Python 解析器对<strong>模块位置的搜索顺序</strong>：</p><ol><li><strong>当前目录</strong>。</li><li>PYTHONPATH 的每个目录。</li><li>查看 Python 安装时的默认包路径。例如：<code>/usr/lib64/python2.6/site-packages</code>。<blockquote><p>可以通过查询<code>sys.path</code>查看模块搜索路径。</p></blockquote></li></ol><h2 id="在子包（package-中引入根目录"><a href="#在子包（package-中引入根目录" class="headerlink" title="在子包（package)中引入根目录"></a>在子包（package)中引入根目录</h2><ul><li><p>将项目的根目录加到 PYTHONPATH 变量中</p></li><li><p>sys.path.append(“..”)</p></li></ul><h2 id="同级模块（module）引用"><a href="#同级模块（module）引用" class="headerlink" title="同级模块（module）引用"></a>同级模块（module）引用</h2><p><code>module_11.py</code>文件导入 module_12.py 模块</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> module_12</span><br></pre></td></tr></table></figure><h2 id="导入下级模块"><a href="#导入下级模块" class="headerlink" title="导入下级模块"></a>导入下级模块</h2><p><code>main.py</code>文件导入<code>module_12.py</code>模块</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from package1 import module_12</span><br><span class="line"># 或者</span><br><span class="line">import package1.module_12</span><br></pre></td></tr></table></figure><h2 id="导入上级模块"><a href="#导入上级模块" class="headerlink" title="  导入上级模块"></a>  导入上级模块</h2><p><code>module_11.py</code>导入上级目录的<code>tool.py</code>模块</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">sys.path.append(&quot;..&quot;)</span><br><span class="line">import tool</span><br></pre></td></tr></table></figure><p>相当于通过<code>sys.path.append(&quot;..&quot;)</code>进入上级目录，然后类似导入<code>同级目录</code>模块的方式导入。</p><h2 id="导入跨包下级模块"><a href="#导入跨包下级模块" class="headerlink" title="导入跨包下级模块"></a>导入跨包下级模块</h2><p><code>module_11.py</code>导入<code>package2</code>包的<code>module_21.py</code>模块</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">sys.path.append(&quot;..&quot;)</span><br><span class="line">from package2 import module_21</span><br></pre></td></tr></table></figure><p>相当于通过<code>sys.path.append(&quot;..&quot;)</code>进入上级目录，然后类似导入<code>下级目录</code>模块的方式导入。</p><blockquote><p>参考：<a href="https://www.huweihuang.com/python-notes/package/package-module.html">https://www.huweihuang.com/python-notes/package/package-module.html</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录在编写 python 程序中遇到的 bug 们。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/categories/python/"/>
    
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python-useful-skills</title>
    <link href="https://www.blog.hackerjerry.top/2020/11/10/python-useful-skills_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/11/10/python-useful-skills_new/</id>
    <published>2020-11-10T08:35:21.000Z</published>
    <updated>2020-11-28T13:40:15.686Z</updated>
    
    <content type="html"><![CDATA[<p>一些好用的 python 内置属性、函数、技巧。</p><a id="more"></a><h1 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h1><table><thead><tr><th>Built-in Functions</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://docs.python.org/3/library/functions.html#abs"><code>abs()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-dict"><code>dict()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#help"><code>help()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#min"><code>min()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#setattr"><code>setattr()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#all"><code>all()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#dir"><code>dir()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#hex"><code>hex()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#next"><code>next()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#slice"><code>slice()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#any"><code>any()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#divmod"><code>divmod()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#id"><code>id()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#object"><code>object()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#sorted"><code>sorted()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#ascii"><code>ascii()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#enumerate"><code>enumerate()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#input"><code>input()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#oct"><code>oct()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#staticmethod"><code>staticmethod()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#bin"><code>bin()</code></a></td><td><code>[eval()](https://docs.python.org/3/library/functions.html#eval)--执行字符串命令</code></td><td><a href="https://docs.python.org/3/library/functions.html#int"><code>int()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#open"><code>open()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-str"><code>str()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#bool"><code>bool()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#exec"><code>exec()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#isinstance"><code>isinstance()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#ord"><code>ord()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#sum"><code>sum()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#func-bytearray"><code>bytearray()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#filter"><code>filter()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#issubclass"><code>issubclass()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#pow"><code>pow()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#super"><code>super()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#func-bytes"><code>bytes()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#float"><code>float()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#iter"><code>iter()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#print"><code>print()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-tuple"><code>tuple()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#callable"><code>callable()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#format"><code>format()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#len"><code>len()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#property"><code>property()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#type"><code>type()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#chr"><code>chr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-frozenset"><code>frozenset()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-list"><code>list()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-range"><code>range()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#vars"><code>vars()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#classmethod"><code>classmethod()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#getattr"><code>getattr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#locals"><code>locals()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#repr"><code>repr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#zip"><code>zip()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#compile"><code>compile()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#globals"><code>globals()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#map"><code>map()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#reversed"><code>reversed()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#__import__"><code>__import__()</code></a></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#complex"><code>complex()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#hasattr"><code>hasattr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#max"><code>max()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#round"><code>round()</code></a></td><td></td></tr><tr><td><a href="https://docs.python.org/3/library/functions.html#delattr"><code>delattr()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#hash"><code>hash()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-memoryview"><code>memoryview()</code></a></td><td><a href="https://docs.python.org/3/library/functions.html#func-set"><code>set()</code></a></td><td></td></tr></tbody></table><h1 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h1><h2 id="字符串常量"><a href="#字符串常量" class="headerlink" title="字符串常量"></a>字符串常量</h2><p><code>string.ascii_letters</code></p><blockquote><p>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</p></blockquote><p><code>string.ascii_lowercase</code></p><blockquote><p>abcdefghijklmnopqrstuvwxyz</p></blockquote><p><code>string.digits</code></p><blockquote><p>0123456789</p></blockquote><p><code>string.punctuation</code></p><blockquote><p>!”#$%&amp;’()*+,-./:;&lt;=&gt;?@[]^_`{|}~</p></blockquote><p><code>string.whitespace</code></p><blockquote><p>\t\n\r\x0b\x0c</p></blockquote><h2 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;0&#125;&#123;1&#125;&#123;0&#125;&#x27;</span>.format(<span class="string">&#x27;abra&#x27;</span>, <span class="string">&#x27;cad&#x27;</span>)   <span class="comment"># arguments&#x27; indices can be repeated</span></span><br><span class="line"><span class="string">&#x27;abracadabra&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按名称访问参数:</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Coordinates: &#123;latitude&#125;, &#123;longitude&#125;&#x27;</span>.format(latitude=<span class="string">&#x27;37.24N&#x27;</span>, longitude=<span class="string">&#x27;-115.81W&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;Coordinates: 37.24N, -115.81W&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>coord = &#123;<span class="string">&#x27;latitude&#x27;</span>: <span class="string">&#x27;37.24N&#x27;</span>, <span class="string">&#x27;longitude&#x27;</span>: <span class="string">&#x27;-115.81W&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Coordinates: &#123;latitude&#125;, &#123;longitude&#125;&#x27;</span>.format(**coord)</span><br><span class="line"><span class="string">&#x27;Coordinates: 37.24N, -115.81W&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#对齐文本以及指定宽度:</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;:&lt;30&#125;&#x27;</span>.format(<span class="string">&#x27;left aligned&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;left aligned                  &#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;:&gt;30&#125;&#x27;</span>.format(<span class="string">&#x27;right aligned&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;                 right aligned&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;:^30&#125;&#x27;</span>.format(<span class="string">&#x27;centered&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;           centered           &#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;:*^30&#125;&#x27;</span>.format(<span class="string">&#x27;centered&#x27;</span>)  <span class="comment"># use &#x27;*&#x27; as a fill char</span></span><br><span class="line"><span class="string">&#x27;***********centered***********&#x27;</span></span><br><span class="line"><span class="comment">####################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>width = <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">5</span>,<span class="number">12</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> base <span class="keyword">in</span> <span class="string">&#x27;dXob&#x27;</span>:</span><br><span class="line"><span class="meta">... </span>        print(<span class="string">&#x27;&#123;0:&#123;width&#125;&#123;base&#125;&#125;&#x27;</span>.format(num, base=base, width=width), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    print()</span><br><span class="line">...</span><br><span class="line">    <span class="number">5</span>     <span class="number">5</span>     <span class="number">5</span>   <span class="number">101</span></span><br><span class="line">    <span class="number">6</span>     <span class="number">6</span>     <span class="number">6</span>   <span class="number">110</span></span><br><span class="line">    <span class="number">7</span>     <span class="number">7</span>     <span class="number">7</span>   <span class="number">111</span></span><br><span class="line">    <span class="number">8</span>     <span class="number">8</span>    <span class="number">10</span>  <span class="number">1000</span></span><br><span class="line">    <span class="number">9</span>     <span class="number">9</span>    <span class="number">11</span>  <span class="number">1001</span></span><br><span class="line">   <span class="number">10</span>     A    <span class="number">12</span>  <span class="number">1010</span></span><br><span class="line">   <span class="number">11</span>     B    <span class="number">13</span>  <span class="number">1011</span></span><br></pre></td></tr></table></figure><h2 id="内置函数-1"><a href="#内置函数-1" class="headerlink" title="内置函数"></a>内置函数</h2><ol><li><code>str.encode(encoding=&quot;utf-8&quot;, errors=&quot;strict&quot;)</code></li><li><code>str.find(sub[, start[, end]])</code></li></ol><p>返回子字符串  <em>sub</em>  在  <code>s[start:end]</code>  切片内被找到的最小索引。 可选参数  <em>start</em>  与  <em>end</em>  会被解读为切片表示法。 如果  <em>sub</em>  未被找到则返回  <code>-1</code>。</p><ol start="3"><li><code>str.isalnum``()</code></li></ol><p>如果字符串中的所有字符都是字母或数字且至少有一个字符，则返回  <code>True</code> ， 否则返回  <code>False</code> 。 如果  <code>c.isalpha()</code> ， <code>c.isdecimal()</code> ， <code>c.isdigit()</code> ，或  <code>c.isnumeric()</code>  之中有一个返回  <code>True</code> ，则字符<code>c</code>是字母或数字。</p><ol start="4"><li><code>str.isalpha()</code></li></ol><p>如果字符串中的所有字符都是字母，并且至少有一个字符，返回 <code>True</code> ，否则返回 <code>False</code> 。字母字符是指那些在 Unicode 字符数据库中定义为 “Letter” 的字符，即那些具有 “Lm”、”Lt”、”Lu”、”Ll” 或 “Lo” 之一的通用类别属性的字符。 注意，这与 Unicode 标准中定义的”字母”属性不同。</p><ol start="5"><li><code>str.isascii()</code></li></ol><p>如果字符串为空或字符串中的所有字符都是 ASCII ，返回 <code>True</code> ，否则返回 <code>False</code> 。ASCII 字符的码点范围是 U+0000-U+007F 。<br>_</p><ol start="6"><li><code>str.isdecimal()</code></li></ol><p>如果字符串中的所有字符都是十进制字符且该字符串至少有一个字符，则返回 <code>True</code> ， 否则返回 <code>False</code> 。十进制字符指那些可以用来组成 10 进制数字的字符，例如 U+0660 ，即阿拉伯字母数字 0 。 严格地讲，十进制字符是 Unicode 通用类别 “Nd” 中的一个字符。</p><ol start="7"><li><code>str.isdigit()</code></li></ol><p>如果字符串中的所有字符都是数字，并且至少有一个字符，返回 <code>True</code> ，否则返回 <code>False</code> 。 数字包括十进制字符和需要特殊处理的数字，如兼容性上标数字。这包括了不能用来组成 10 进制数的数字，如 Kharosthi 数。 严格地讲，数字是指属性值为 Numeric_Type=Digit 或 Numeric_Type=Decimal 的字符。</p><ol start="8"><li><code>str.isspace()</code></li></ol><p>如果字符串中只有空白字符且至少有一个字符则返回 <code>True</code> ，否则返回 <code>False</code> 。</p><ol start="9"><li><code>str.join(iterable)</code></li></ol><p>返回一个由 <em>iterable</em> 中的字符串拼接而成的字符串。 如果 <em>iterable</em> 中存在任何非字符串值包括 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes"><code>bytes</code></a> 对象则会引发 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#TypeError"><code>TypeError</code></a>。 调用该方法的字符串将作为元素之间的分隔。</p><ol start="10"><li><code>str.replace(old, new[, count])</code></li></ol><p>返回字符串的副本，其中出现的所有子字符串 <em>old</em> 都将被替换为 <em>new_。 如果给出了可选参数 _count_，则只替换前 _count</em> 次出现。</p><ol start="11"><li><code>str.rsplit(sep=None, maxsplit=-1)</code></li></ol><p>返回一个由字符串内单词组成的列表，使用 <em>sep</em> 作为分隔字符串。 如果给出了 <em>maxsplit_，则最多进行 _maxsplit</em> 次拆分，从 <em>最右边</em> 开始。 如果 <em>sep</em> 未指定或为 <code>None</code>，任何空白字符串都会被作为分隔符。 除了从右边开始拆分，<a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.rsplit"><code>rsplit()</code></a> 的其他行为都类似于下文所述的 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.split"><code>split()</code></a>。</p><ol start="12"><li><code>str.translate(table)</code></li></ol><p>返回原字符串的副本，其中每个字符按给定的转换表进行映射。 转换表必须是一个使用 <a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__getitem__"><code>__getitem__()</code></a> 来实现索引操作的对象，通常为 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-mapping">mapping</a> 或 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-sequence">sequence</a>。 当以 Unicode 码位序号（整数）为索引时，转换表对象可以做以下任何一种操作：返回 Unicode 序号或字符串，将字符映射为一个或多个字符；返回 <code>None</code>，将字符从结果字符串中删除；或引发 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#LookupError"><code>LookupError</code></a> 异常，将字符映射为其自身。<br>你可以使用 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.maketrans"><code>str.maketrans()</code></a> 基于不同格式的字符到字符映射来创建一个转换映射表。</p><h1 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h1><h2 id="hashlib-模块"><a href="#hashlib-模块" class="headerlink" title="hashlib 模块"></a>hashlib 模块</h2><p>可用的哈希算法构造器有  <code>sha1()</code>,<code> sha224()</code>, <code>sha256()</code>, <code>sha384()</code>, <code>sha512()</code>, <a href="https://docs.python.org/zh-cn/3/library/hashlib.html#hashlib.blake2b"><code>blake2b()</code></a>和  <a href="https://docs.python.org/zh-cn/3/library/hashlib.html#hashlib.blake2s"><code>blake2s()</code></a>、<code>md5()</code>通常也是可用的。<br>具体清单如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;blake2b&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;blake2s&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sha1&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sha224&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sha256&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sha384&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sha3_224&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sha3_256&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sha3_384&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sha3_512&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sha512&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;shake_128&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;shake_256&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>用法示例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hashlib.sha224(<span class="string">b&quot;Nobody inspects the spammish repetition&quot;</span>).hexdigest()</span><br><span class="line"><span class="comment">#&#x27;a4337bc45a8fc544c03f52dc550cd6e1e87021bc896588bd79e901e2&#x27;</span></span><br><span class="line"></span><br><span class="line">In []: hashlib.md5(<span class="string">b&#x27;1111&#x27;</span>).hexdigest()</span><br><span class="line">Out[]: <span class="string">&#x27;b59c67bf196a4758191e42f76670ceba&#x27;</span></span><br></pre></td></tr></table></figure><p>详细用法可参考：<a href="https://docs.python.org/zh-cn/3/library/hashlib.html">https://docs.python.org/zh-cn/3/library/hashlib.html</a></p><h1 id="二进制操作"><a href="#二进制操作" class="headerlink" title="二进制操作"></a>二进制操作</h1><p>操作二进制数据的核心内置类型是  <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes"><code>bytes</code></a>  和  <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#bytearray"><code>bytearray</code></a>。<br>bytes 对象是由整数构成的序列（类似于元组），但其实操作仍然类似于字符串，上面提到的函数在 byte 中仍然适用。<br>bytearray 对象是可变的，该对象除了  <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes-methods">bytes 和 bytearray 操作</a>  中所描述的 bytes 和 bytearray 共有操作之外，还支持  <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#typesseq-mutable">可变</a>  序列操作。</p><h1 id="内存视图"><a href="#内存视图" class="headerlink" title="内存视图"></a>内存视图</h1><p><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#memoryview"><code>memoryview</code></a>  对象允许 Python 代码访问一个对象的内部数据</p><p>创建一个引用  <em>obj</em>  的  <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#memoryview"><code>memoryview</code></a>。 <em>obj</em>  必须支持缓冲区协议。 支持缓冲区协议的内置对象包括  <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes"><code>bytes</code></a>  和  <code>[bytearray](https://docs.python.org/zh-cn/3/library/stdtypes.html#bytearray)</code>，<code>array</code>。</p><p><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#memoryview"><code>memoryview</code></a>  具有  <em>元素</em>  的概念，即由原始对象  <em>obj</em>  所处理的基本内存单元。 对于许多简单类型例如  <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes"><code>bytes</code></a>  和  <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#bytearray"><code>bytearray</code></a>  来说，一个元素就是一个字节，但是其他的类型例如  <a href="https://docs.python.org/zh-cn/3/library/array.html#array.array"><code>array.array</code></a>  可能有更大的元素。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>v = memoryview(<span class="string">b&#x27;abcefg&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>v[<span class="number">1</span>]</span><br><span class="line"><span class="number">98</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bytes(v[<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line"><span class="string">b&#x27;bce&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="set-集合"><a href="#set-集合" class="headerlink" title="set 集合"></a>set 集合</h1><p><em>set</em>  对象是由具有唯一性的  <a href="https://docs.python.org/zh-cn/3/glossary.html#term-hashable">hashable</a>  对象所组成的无序多项集。 常见的用途包括成员检测、从序列中去除重复项以及数学中的集合类计算，例如<strong>交集、并集、差集与对称差集</strong>等等。</p><p>作为一种无序的多项集，集合并不记录元素位置或插入顺序。 相应地，集合<strong>不支持索引、切片或其他序列类的操作</strong>。</p><p><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#set"><code>set</code></a>  类型是可变的 — 其内容可以使用  <code>add()</code>  和  <code>remove()</code>  这样的方法来改变。 由于是可变类型，它没有哈希值，且不能被用作字典的键或其他集合的元素。 <br>集合可用多种方式来创建:</p><ul><li><p>使用花括号内以逗号分隔元素的方式: <code>&#123;&#39;jack&#39;, &#39;sjoerd&#39;&#125;</code></p></li><li><p>使用集合推导式: <code>&#123;c for c in &#39;abracadabra&#39; if c not in &#39;abc&#39;&#125;</code></p></li><li><p>使用类型构造器: <code>set()</code>, <code>set(&#39;foobar&#39;)</code>, <code>set([&#39;a&#39;, &#39;b&#39;, &#39;foo&#39;])</code></p></li><li><p><code>isdisjoint</code>(<em>other</em>)</p></li></ul><p>如果集合中没有与 <em>other</em> 共有的元素则返回 <code>True</code>。 当且仅当两个集合的交集为空集合时，两者为不相交集合。</p><ul><li><code>issubset</code>(<em>other</em>)<code>set &lt;= other</code></li></ul><p>检测是否集合中的每个元素都在 <em>other</em> 之中。</p><ul><li><code>set &lt; other</code></li></ul><p>检测集合是否为 <em>other</em> 的真子集，即 <code>set &lt;= other and set != other</code>。</p><ul><li><code>issuperset</code>(<em>other</em>)<code>set &gt;= other</code></li></ul><p>检测是否 <em>other</em> 中的每个元素都在集合之中。</p><ul><li><code>set &gt; other</code></li></ul><p>检测集合是否为 <em>other</em> 的真超集，即 <code>set &gt;= other and set != other</code>。</p><ul><li><code>intersection</code>(<em>*others</em>)</li></ul><p><code>set &amp; other &amp; ...</code><br>返回一个新集合，其中包含原集合以及 others 指定的所有集合中共有的元素。</p><ul><li><code>difference</code>(<em>*others</em>)<code>set - other - ...</code></li></ul><p>返回一个新集合，其中包含原集合中在 others 指定的其他集合中不存在的元素。</p><ul><li><code>symmetric_difference</code>(<em>other</em>)<code>set ^ other</code></li></ul><p>返回一个新集合，其中的元素或属于原集合或属于 <em>other</em> 指定的其他集合，但不能同时属于两者。</p><ul><li><code>update</code>(<em>*others</em>)<code>set |= other | ...</code></li></ul><p>更新集合，添加来自 others 中的所有元素。</p><ul><li><code>intersection_update</code>(<em>*others</em>)<code>set &amp;= other &amp; ...</code></li></ul><p>更新集合，只保留其中在所有 others 中也存在的元素。</p><ul><li><code>difference_update</code>(<em>*others</em>)<code>set -= other | ...</code></li></ul><p>更新集合，移除其中也存在于 others 中的元素。</p><ul><li><code>symmetric_difference_update</code>(<em>other</em>)<code>set ^= other</code></li></ul><p>更新集合，只保留存在于集合的一方而非共同存在的元素。</p><ul><li><code>add</code>(<em>elem</em>)<a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#frozenset.add">¶</a></li></ul><p>将元素 <em>elem</em> 添加到集合中。</p><ul><li><code>remove</code>(<em>elem</em>)</li></ul><p>从集合中移除元素 <em>elem_。 如果 _elem</em> 不存在于集合中则会引发 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#KeyError"><code>KeyError</code></a>。</p><ul><li><code>discard</code>(<em>elem</em>)</li></ul><p>如果元素 <em>elem</em> 存在于集合中则将其移除。</p><ul><li><code>pop</code>()</li></ul><p>从集合中移除并返回任意一个元素。 如果集合为空则会引发 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#KeyError"><code>KeyError</code></a>。</p><h1 id="字典-dict"><a href="#字典-dict" class="headerlink" title="字典 dict"></a>字典 dict</h1><p>字典取值常常直接 d[j]了，但是有可能报错，这里有一种更保险的取值方式–<br><code>get</code>(<em>key</em>[, <em>default</em>])<br>如果 <em>key</em> 存在于字典中则返回 <em>key</em> 的值，否则返回 <em>default_。 如果 _default</em> 未给出则默认为 <code>None</code>，因而此方法绝不会引发 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#KeyError"><code>KeyError</code></a>。</p><p>其他操作：</p><ul><li><code>reversed(d)</code></li></ul><p>返回一个逆序获取字典键的迭代器。 这是 <code>reversed(d.keys())</code> 的快捷方式。</p><ul><li><code>setdefault</code>(<em>key</em>[, <em>default</em>])</li></ul><p>如果字典存在键 <em>key</em> ，返回它的值。如果不存在，插入值为 <em>default</em> 的键 <em>key</em> ，并返回 <em>default</em> 。 <em>default</em> 默认为 <code>None</code>。</p><ul><li><code>values</code>()</li></ul><p>返回由字典值组成的一个新视图。</p><ul><li><code>keys</code>()</li></ul><p>返回由字典键组成的一个新视图。</p><p><code>iter(dictview)</code><br>返回字典中的键、值或项（以 <code>(键, 值)</code> 为元素的元组表示）的迭代器。<br>键和值是按插入时的顺序进行迭代的。 这样就允许使用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#zip"><code>zip()</code></a> 来创建 <code>(值, 键)</code> 对: <code>pairs = zip(d.values(), d.keys())</code>。 另一个创建相同列表的方式是 <code>pairs = [(v, k) for (k, v) in d.items()]</code>.</p><h1 id="tuple-元组"><a href="#tuple-元组" class="headerlink" title="tuple-元组"></a>tuple-元组</h1><p>元组是：</p><ul><li>不可变</li><li>有序</li><li>异质</li><li>索引（从零开始）</li><li>带圆括号（可选，但建议）</li><li>在迭代过程中更快，因为它是不可变的</li></ul><p>元组<strong>对于创建</strong>通常包含相关信息（例如员工信息）的<strong>对象</strong>很有用。换句话说，元组可以让我们将相关信息“块”在一起，并将其用作单个事物。</p><h2 id="访问元素"><a href="#访问元素" class="headerlink" title="访问元素"></a>访问元素</h2><ul><li><strong>正索引</strong>从元组的开始开始计数。</li><li><strong>负索引</strong>从元组的末尾开始计数。</li><li>一定<strong>范围的索引</strong>将使用指定的项目创建一个新的元组（称为<strong>Slicing</strong>）。</li><li>范围[m:n]是指从位置 m（_含_）到位置 n（_不含_）。</li><li>使用<strong>双索引</strong>访问嵌套元组的元素。</li></ul><h2 id="创建键值对（命名）元组"><a href="#创建键值对（命名）元组" class="headerlink" title="创建键值对（命名）元组"></a>创建键值对（命名）元组</h2><p>命名元组示例</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line">Record = collections.namedtuple(<span class="string">&#x27;Record&#x27;</span>, [<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;date&#x27;</span>])</span><br><span class="line">R1 = Record(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;My Record&#x27;</span>, <span class="string">&#x27;12/12/2020&#x27;</span>)</span><br><span class="line"><span class="comment">#Accessing using index</span></span><br><span class="line">print(<span class="string">&quot;Record id is:&quot;</span>, R1[<span class="number">0</span>]) <span class="comment"># Record id is: 1</span></span><br><span class="line"><span class="comment"># Accessing using key</span></span><br><span class="line">print(<span class="string">&quot;Record name is:&quot;</span>, R1.name) <span class="comment"># Record name is: My Record</span></span><br></pre></td></tr></table></figure><p>不过创建之后无法改变它们的值了，因为是元组。</p><h1 id="属性判断"><a href="#属性判断" class="headerlink" title="属性判断"></a>属性判断</h1><p>不要在 if 中使用 type 函数判断属性，而应该选择 isinstance()函数，例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt; isinstance(<span class="string">&#x27;11&#x27;</span>,str)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h1 id="map-作用于-list-每一个元素"><a href="#map-作用于-list-每一个元素" class="headerlink" title="map-作用于 list 每一个元素"></a>map-作用于 list 每一个元素</h1><blockquote><p>参考：<a href="https://yangfangs.github.io/2017/08/23/python-map-zip-filter-reduce/">https://yangfangs.github.io/2017/08/23/python-map-zip-filter-reduce/</a></p></blockquote><p>map()是 Python 内置的高阶函数，它接收一个函数 f() 和一个 list，并通过把函数 f 依次作用在 list 的每个元素上，得到一个新的 list 并返回。</p><ol><li>例如 chr 类型转换成 int</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>]</span><br><span class="line">list(map(int,l))</span><br><span class="line">Out[<span class="number">2</span>]: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><ol start="2"><li>编写独立函数作用与 list 中每一个元素：<ul><li>例如对 list 中每一个元素求平方</li></ul></li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> x**<span class="number">2</span></span><br><span class="line">l =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">list(map(f,l))</span><br><span class="line">Out[<span class="number">3</span>]: [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>]</span><br></pre></td></tr></table></figure><ol start="3"><li>使用匿名函数操作：</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">list(map(<span class="keyword">lambda</span> x: x**<span class="number">2</span>, l))</span><br><span class="line">Out[<span class="number">4</span>]: [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>]</span><br></pre></td></tr></table></figure><h2 id="同时操作两个-list-并行非多核运算"><a href="#同时操作两个-list-并行非多核运算" class="headerlink" title="同时操作两个 list(并行非多核运算)"></a>同时操作两个 list(并行非多核运算)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">l &#x3D;[1,2,3,4]</span><br><span class="line">list(map(lambda x,y: x+y,l,l))</span><br><span class="line">Out[5]: [2, 4, 6, 8]</span><br></pre></td></tr></table></figure><blockquote><p>注：python3 和 python2 中 map()的返回值不一样， python2 中直接返回列表，python 需要加 list()转换取值。</p></blockquote><h1 id="filter-筛选函数"><a href="#filter-筛选函数" class="headerlink" title="filter-筛选函数"></a>filter-筛选函数</h1><p>按照 function 函数的规则在列表 sequence 中筛选数据</p><ul><li>用法：filter(function, sequence)</li></ul><h2 id="筛选-list-中符合条件的值"><a href="#筛选-list-中符合条件的值" class="headerlink" title="筛选 list 中符合条件的值"></a>筛选 list 中符合条件的值</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">filter(<span class="keyword">lambda</span> x: x&gt;<span class="number">2</span>, l)</span><br><span class="line">Out[<span class="number">6</span>]: [<span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><h2 id="filter-与-map-返回值不同"><a href="#filter-与-map-返回值不同" class="headerlink" title="filter() 与 map() 返回值不同"></a>filter() 与 map() 返回值不同</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">map(<span class="keyword">lambda</span> x: x&gt;<span class="number">2</span>, l)</span><br><span class="line">Out[<span class="number">8</span>]: [<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">True</span>]</span><br></pre></td></tr></table></figure><h1 id="reduce-——求积累运算"><a href="#reduce-——求积累运算" class="headerlink" title="reduce()——求积累运算"></a>reduce()——求积累运算</h1><p>reduce 函数功能是将 sequence 中数据，按照 function 函数操作，如将列表第一个数与第二个数进行 function 操作，得到的结果和列表中下一个数据进行 function 操作，一直循环下去…</p><ul><li>用法 reduce(function, sequence):</li></ul><h2 id="求积累和"><a href="#求积累和" class="headerlink" title="求积累和"></a>求积累和</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l =[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">reduce(<span class="keyword">lambda</span> x,y: x+y, l)</span><br><span class="line">Out[<span class="number">10</span>]: <span class="number">10</span></span><br></pre></td></tr></table></figure><h1 id="zip-打包函数"><a href="#zip-打包函数" class="headerlink" title="zip()打包函数"></a>zip()打包函数</h1><ul><li><p>zip()是 Python 的一个内建函数，它接受一系列可迭代的对象作为参数，将对象中对应的元素打包成一个个 tuple（元组），然后返回由这些 tuples 组成的 list（列表）。若传入参数的长度不等，则返回 list 的长度和参数中长度最短的对象相同。利用*号操作符，可以将 list unzip（解压）。</p></li><li><p>用法: zip(list,list)</p></li></ul><h2 id="zip-基本用法"><a href="#zip-基本用法" class="headerlink" title="zip()基本用法"></a>zip()基本用法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">l2 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">zip(l1,l2)</span><br><span class="line">Out[<span class="number">12</span>]: [(<span class="number">1</span>, <span class="string">&#x27;a&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;b&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;c&#x27;</span>), (<span class="number">4</span>, <span class="string">&#x27;d&#x27;</span>)]</span><br></pre></td></tr></table></figure><h2 id="使用-逆过程"><a href="#使用-逆过程" class="headerlink" title="使用*逆过程"></a>使用<code>*</code>逆过程</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">l2 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">zip_l1_l2 = zip(l1,l2)</span><br><span class="line">zip(*zip_l1_l2)</span><br><span class="line">Out[<span class="number">17</span>]: [(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>), (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>)]</span><br></pre></td></tr></table></figure><h2 id="zip-构造字典"><a href="#zip-构造字典" class="headerlink" title="zip 构造字典"></a>zip 构造字典</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">l2 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">zip_l1_l2 = zip(l1,l2)</span><br><span class="line">dict(zip_l1_l2)</span><br><span class="line">Out[<span class="number">18</span>]: &#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;d&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>这个操作就可以更加优雅的创造数据结构。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">63</span>]: a = collections.namedtuple(<span class="string">&#x27;stu&#x27;</span>,[<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;sex&#x27;</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">64</span>]: a</span><br><span class="line">Out[<span class="number">64</span>]: __main__.stu</span><br><span class="line"></span><br><span class="line">In [<span class="number">65</span>]: s1 = a(<span class="number">1</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">66</span>]: s1</span><br><span class="line">Out[<span class="number">66</span>]: stu(id=<span class="number">1</span>, name=<span class="string">&#x27;11&#x27;</span>, sex=<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">67</span>]: l1</span><br><span class="line">Out[<span class="number">67</span>]: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">68</span>]: l2 = [s1,s1,s1,s1]</span><br><span class="line"></span><br><span class="line">In [<span class="number">69</span>]: ll = zip(l1,l2)</span><br><span class="line"></span><br><span class="line">In [<span class="number">70</span>]: f = dict(ll)</span><br><span class="line"></span><br><span class="line">In [<span class="number">71</span>]: f</span><br><span class="line">Out[<span class="number">71</span>]:</span><br><span class="line">&#123;<span class="number">1</span>: stu(id=<span class="number">1</span>, name=<span class="string">&#x27;11&#x27;</span>, sex=<span class="string">&#x27;f&#x27;</span>),</span><br><span class="line"> <span class="number">2</span>: stu(id=<span class="number">1</span>, name=<span class="string">&#x27;11&#x27;</span>, sex=<span class="string">&#x27;f&#x27;</span>),</span><br><span class="line"> <span class="number">3</span>: stu(id=<span class="number">1</span>, name=<span class="string">&#x27;11&#x27;</span>, sex=<span class="string">&#x27;f&#x27;</span>),</span><br><span class="line"> <span class="number">4</span>: stu(id=<span class="number">1</span>, name=<span class="string">&#x27;11&#x27;</span>, sex=<span class="string">&#x27;f&#x27;</span>)&#125;</span><br><span class="line"></span><br><span class="line">In [<span class="number">72</span>]: f[<span class="number">1</span>]</span><br><span class="line">Out[<span class="number">72</span>]: stu(id=<span class="number">1</span>, name=<span class="string">&#x27;11&#x27;</span>, sex=<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">73</span>]: f[<span class="number">1</span>].id</span><br><span class="line">Out[<span class="number">73</span>]: <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;一些好用的 python 内置属性、函数、技巧。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/categories/python/"/>
    
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>SecCrpytoExp-2</title>
    <link href="https://www.blog.hackerjerry.top/2020/11/06/SecCrpytoExp-2_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/11/06/SecCrpytoExp-2_new/</id>
    <published>2020-11-06T09:49:24.000Z</published>
    <updated>2020-11-28T13:41:48.874Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="Elgamal-密码"><a href="#Elgamal-密码" class="headerlink" title="Elgamal 密码"></a>Elgamal 密码</h1><p>首先用到了几个强大的库（避免重复造轮子）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br></pre></td></tr></table></figure><p><code>sympy</code>用于计算原根，它是一个强大的符号计算的 python 库。不仅可以像 mathematica 一样进行符号计算，也内置了很多的 OI 实用算法，包括图论、计算几何、数论、多项式等等很多方面。</p><blockquote><p>更多用法可以看这里 <a href="https://2o181o28.github.io/2019/07/14/sympy%E7%9A%84OI%E7%94%A8%E6%B3%95/">https://2o181o28.github.io/2019/07/14/sympy%E7%9A%84OI%E7%94%A8%E6%B3%95/</a></p></blockquote><p><code>Crypto</code>则是更加强大的密码学库<br>然后就是 exp 了</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Author: M@tr1x</span></span><br><span class="line"><span class="string">Date: 2020-11-06 17:15:32</span></span><br><span class="line"><span class="string">LastEditTime: 2020-11-08 12:14:15</span></span><br><span class="line"><span class="string">Description: Elgamal密码加解密程序</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Elgamal</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,p_length</span>):</span></span><br><span class="line">        self.p = number.getPrime(p_length)<span class="comment">#a random prime number with 2 ^ p_length</span></span><br><span class="line">        self.x = random.randint(<span class="number">2</span>,self.p<span class="number">-3</span>)<span class="comment">#private key</span></span><br><span class="line">        self.g = sympy.primitive_root(self.p)<span class="comment">#the smallest primitive root</span></span><br><span class="line">        self.y = int(gmpy2.powmod(self.g,self.x,self.p))<span class="comment">#public key y</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">self,m</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;crypto function</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            m (num): plain decimal message</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            y1,y2: encrypted k&amp;m</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        k = random.randint(<span class="number">1</span>,self.p<span class="number">-2</span>)</span><br><span class="line">        <span class="keyword">while</span> int(gmpy2.gcd(k,self.p<span class="number">-1</span>))!=<span class="number">1</span>:</span><br><span class="line">            k = random.randint(<span class="number">1</span>,self.p<span class="number">-2</span>)</span><br><span class="line">        y1 = gmpy2.powmod(self.g,k,self.p)</span><br><span class="line">        y2  = (m%self.p)*int(gmpy2.powmod(self.y,k,self.p))%self.p</span><br><span class="line">        y1 = int(y1)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> y1,y2</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">self,y1,y2</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;decrypto function</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            y1 (num):</span></span><br><span class="line"><span class="string">            y2 (num):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            m: plain message</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        yi = int(gmpy2.invert(y1,self.p))</span><br><span class="line">        m = int(gmpy2.powmod(yi,self.x,self.p))*(y2%self.p)%self.p</span><br><span class="line">        <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    new_elgamal = Elgamal(<span class="number">50</span>)</span><br><span class="line">    (y1,y2) = new_elgamal.encrypt(<span class="number">9999999</span>)<span class="comment">#encrypt 9999999</span></span><br><span class="line">    print(<span class="string">&quot;y1:&quot;</span>+str(y1))</span><br><span class="line">    print(<span class="string">&quot;y2:&quot;</span>+str(y2))</span><br><span class="line">    m = new_elgamal.decrypt(y1,y2)<span class="comment">#decrypt y1&amp;y2</span></span><br><span class="line">    print(<span class="string">&quot;m:&quot;</span>+str(m))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;Elgamal-密码&quot;&gt;&lt;a href=&quot;#Elgamal-密码&quot; class=&quot;headerlink&quot; title=&quot;Elgamal 密码&quot;&gt;&lt;/a&gt;Elgamal 密码&lt;/h1&gt;&lt;p&gt;首先用到了几个强大的库（避免重复造轮子</summary>
      
    
    
    
    <category term="crypto" scheme="https://www.blog.hackerjerry.top/categories/crypto/"/>
    
    
    <category term="crypto" scheme="https://www.blog.hackerjerry.top/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>RE-Dll-export-table</title>
    <link href="https://www.blog.hackerjerry.top/2020/10/23/RE-Dll-export-table_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/10/23/RE-Dll-export-table_new/</id>
    <published>2020-10-23T09:04:37.000Z</published>
    <updated>2020-11-28T13:42:04.486Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>#</p><p>首先查看 EXPORT Table 的 RVA 是 0x00092250<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-1.png#align=left&display=inline&height=258&margin=%5Bobject%20Object%5D&name=image.png&originHeight=516&originWidth=1086&size=203973&status=done&style=none&width=543" alt="image.png"><br>通过 winhex 验证<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-2.png#align=left&display=inline&height=42&margin=%5Bobject%20Object%5D&name=image.png&originHeight=84&originWidth=671&size=9325&status=done&style=none&width=335.5" alt="image.png">正确<br>由于 0x92250 在 rdata 节中，所以<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-3.png#align=left&display=inline&height=184&margin=%5Bobject%20Object%5D&name=image.png&originHeight=368&originWidth=1225&size=149582&status=done&style=none&width=612.5" alt="image.png"><br>首个 IMAGE_EXPORT_DESCRIPTOR 结构的 RAW=0x92250-0x80000+0x65000=0x77250<br>通过 winhex 跳转到这里<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-4.png#align=left&display=inline&height=244&margin=%5Bobject%20Object%5D&name=image.png&originHeight=332&originWidth=675&size=42132&status=done&style=none&width=497" alt="image.png"><br><strong>1.Name 成员解析</strong><br>  首先解析导出表重要的成员<br>Nmae: 在导出表一行位置处. 存储 0x096116，这是一个 RVA，所以我们要进行 RAW 转换.<br>0x96116-0x80000+0x65000=0x7b116<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-5.png#align=left&display=inline&height=64&margin=%5Bobject%20Object%5D&name=image.png&originHeight=101&originWidth=689&size=15169&status=done&style=none&width=435" alt="image.png">跳转过来，可见这个成员保存的就是自己 DLL 的名称.<br><strong>2.Base 成员解析.   导出函数起始序号</strong><br>  导出函数的序号起始位置. 你 DLL 导出的函数.如果给序号了.那么就从这个序号开始. <br><strong>3.NumberOfFunctions  以及  NumberOfNmaes   函数导出总个数.以及函数以名字导出的个数</strong><br>这个两个成员很简单. 一个就是所有函数导出的个数.一个就是以名字进行导出的个数.  DLL 是可以以序号导出的.<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-6.png#align=left&display=inline&height=70&margin=%5Bobject%20Object%5D&name=image.png&originHeight=96&originWidth=655&size=12020&status=done&style=none&width=476" alt="image.png">可以看出来都为 643 个<br><strong>4.函数地址表</strong><br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-7.png#align=left&display=inline&height=95&margin=%5Bobject%20Object%5D&name=image.png&originHeight=123&originWidth=658&size=16557&status=done&style=none&width=509" alt="image.png"><br>这里同样存的都是 RVA,需要经过计算得到 RAW<br>函数地址表 RAW == 0x77278<br>函数名称表 RAW == 0x78b84<br>函数序号表 RAW == 0x7a490<br>根据 ppt 知道，函数地址表指向一个偏移. 这个偏移存放了函数所有导出个数的函数的地址.<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-8.png#align=left&display=inline&height=394&margin=%5Bobject%20Object%5D&name=image.png&originHeight=788&originWidth=1459&size=295853&status=done&style=none&width=729.5" alt="image.png"><br>例如所有导出函数有 2 个. 那么函数地址表中就有 2 项. 每一个占 4 个字节. 存放的是函数入口地址 RVA.<br>例如第一项 RVA 偏移为 0x0162A0 + ImageBase 就是函数地址.<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-9.png#align=left&display=inline&height=89&margin=%5Bobject%20Object%5D&name=image.png&originHeight=178&originWidth=1062&size=76968&status=done&style=none&width=531" alt="image.png"><br>然后查看 getcurrentThreadId<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-10.png#align=left&display=inline&height=146&margin=%5Bobject%20Object%5D&name=image.png&originHeight=291&originWidth=1105&size=201152&status=done&style=none&width=552.5" alt="image.png"><br>它是第 21f 个函数，计算偏移后的地址为 542*4+0x77278=0x77af0<br>winhex 跳过去看<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-11.png#align=left&display=inline&height=91&margin=%5Bobject%20Object%5D&name=image.png&originHeight=106&originWidth=667&size=13804&status=done&style=none&width=572" alt="image.png"><br><strong>里面存放着函数的 RVA 偏移为 0x011a60，和 peview 中一致</strong><br><strong>若计算具体的函数地址，则为 0x011a60+0x6b800000=0x6b811a60</strong><br>通过 IDA 进行查看，同样验证结果<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-12.png#align=left&display=inline&height=112&margin=%5Bobject%20Object%5D&name=image.png&originHeight=145&originWidth=801&size=21432&status=done&style=none&width=617" alt="image.png"><br>动态加载<br>右键<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-13.png#align=left&display=inline&height=353&margin=%5Bobject%20Object%5D&name=image.png&originHeight=706&originWidth=1043&size=121278&status=done&style=none&width=521.5" alt="image.png"><br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-14.png#align=left&display=inline&height=82&margin=%5Bobject%20Object%5D&name=image.png&originHeight=111&originWidth=686&size=24178&status=done&style=none&width=507" alt="image.png"><br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/RE-Dll-export-table-15.png#align=left&display=inline&height=148&margin=%5Bobject%20Object%5D&name=image.png&originHeight=296&originWidth=855&size=45777&status=done&style=none&width=427.5" alt="image.png"></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.cnblogs.com/gd-luojialin/p/11306189.html">PE 知识复习之 PE 的导出表</a></li><li>【逆向】PE 结构分析和关于 PE 的一些问题及解决 <a href="https://www.shangmayuan.com/a/3289bd534203495c996382ae.html#%E5%AF%BC%E5%87%BA%E8%A1%A8">https://www.shangmayuan.com/a/3289bd534203495c996382ae.html</a></li><li>EAT 表 <a href="https://www.shuzhiduo.com/A/x9J2YK1gz6/">https://www.shuzhiduo.com/A/x9J2YK1gz6/</a></li><li>【逆向】【PE 入门】使用 PEView 分析 PE 文件 <a href="https://blog.csdn.net/qq_43633973/article/details/102378477">https://blog.csdn.net/qq_43633973/article/details/102378477</a></li><li>《逆向学习日记》 No.1 手动计算 RvaToRaw 来查看函数导入表与导出表 <a href="https://www.dazhuanlan.com/2020/01/02/5e0dc9725d3e9/">https://www.dazhuanlan.com/2020/01/02/5e0dc9725d3e9/</a></li><li>基址重定位表 <a href="https://blog.csdn.net/SKI_12/article/details/80636568">https://blog.csdn.net/SKI_12/article/details/80636568</a> <a href="https://zhuanlan.kanxue.com/article-10619.htm">https://zhuanlan.kanxue.com/article-10619.htm</a></li><li>PE 结构体中导出表/导入表解析——初阶 - 看雪学院的文章 - 知乎 <a href="https://zhuanlan.zhihu.com/p/33348352">https://zhuanlan.zhihu.com/p/33348352</a></li></ul><h1 id="用到的工具"><a href="#用到的工具" class="headerlink" title="用到的工具"></a>用到的工具</h1><ul><li>pe_tree <a href="https://github.com/blackberry/pe_tree">https://github.com/blackberry/pe_tree</a></li><li>winhex</li><li>peview</li><li>IDA PRO</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;首先查看 EXPORT Table 的 RVA 是 0x00092250&lt;br&gt;&lt;img src= &quot;/img/loading.gif&quot; data-lazy-src=&quot;https://image.hackerjerry</summary>
      
    
    
    
    <category term="RE" scheme="https://www.blog.hackerjerry.top/categories/RE/"/>
    
    
    <category term="RE" scheme="https://www.blog.hackerjerry.top/tags/RE/"/>
    
    <category term="PEview" scheme="https://www.blog.hackerjerry.top/tags/PEview/"/>
    
  </entry>
  
  <entry>
    <title>Write-in-autumn</title>
    <link href="https://www.blog.hackerjerry.top/2020/10/17/Write-in-autumn_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/10/17/Write-in-autumn_new/</id>
    <published>2020-10-17T11:51:00.000Z</published>
    <updated>2020-11-28T13:40:15.686Z</updated>
    
    <content type="html"><![CDATA[<p>写在西安的第三个秋天。</p><a id="more"></a><h1 id="大三，大三"><a href="#大三，大三" class="headerlink" title="大三，大三"></a>大三，大三</h1><p>转眼，大学生活就过去了一半，我已经是大三的学生了。回想起当初的懵懂无知，如今的我，对学业，对为人处世，对面对挫折，对坚持梦想，又有了新的感悟与理解。</p><p>我没有想过，大学，竟然比高中更累。或许是高中有同行者一同奋斗，我望着他们，不觉得苦罢。</p><p>上了大学，异地恋无疾而终，我在诺大的校园孤身一人。我可能也有朋友，但仅仅是朋友，没有交到可以交心的朋友，悲哀么。可能我习惯了一人，习惯了一个人吃饭，一个人去图书馆，一个人去自习，一个人去跑步。一个人真的很自由，但一个人真的很孤单。</p><p>上了大学，我见识到了很厉害的人，他们的均分很高，他们的竞赛很强。在大学，高的均分意味着你保研的时候能报更好的大学，像我这样天资一般，智商平平的人，只有付出更多的努力才能尽量与他们缩小差距，但你能想象吗，比你优秀的人比你更努力。我们专业第一的羽神，就是这样一个女生。我在我们宿舍应该是最努力的一个人，也仅仅是一天最多学习 2.5+3+4.5 个小时，但她可以做到全天都呆在自习室，真的佩服。</p><p>上了大学，我接触了许多新鲜事物，我参加了不少的竞赛，虽然很多竞赛都没有拿多好的成绩，但在过程中，我认为自己是有所收获的。我认识了很多好老师，他们给予了我很多的帮助，特别是我的科研导师，在我还是小白的时候，带着我们打比赛，写专利，真的非常非常幸运遇到这样的好老师。上了大学，我结识了五湖四海的人，他们性格迥异，爱好不同，虽然只是泛泛之交，但依旧能给生活增添光彩。</p><p>上了大学，竞争更加大了。我第一次听到”卷“这个名词，大概是在大二的时候，那时候我并不理解，但上了大三我才真正体会。评奖学金的时候，信安普通专业前四居然在全院也能排到前四，而且分差并不大。而在其中，我的基础均分是最弱的。其实我不想卷，我不想把大学生活过的比高三还苦，但是我有什么办法。我曾经以为的那么难的课程，羽神轻轻松松 95+，我真的是望其项背。都说分分分，学生的命根。可谁知道我们曾经也是鲜衣怒马的少年，我也想学吉他，弹钢琴，我也想在大学培养兴趣，但现实就是这样赤裸裸的，它告诉你，如果想去更好的学校，你的爱好就要放弃，你只能一心扑在学习上。</p><p>学业，竞赛，科研。我都想抓，但不可能都抓住。我只是个普通人，总要有舍弃，总要有权衡。</p><h1 id="生活？学习？"><a href="#生活？学习？" class="headerlink" title="生活？学习？"></a>生活？学习？</h1><p>西安前一阵子下了半个月的雨，终于晴天，久违的阳光让我恍惚间回到了曾经。</p><p>我好久没有停下脚步看一看这个世界了，这个美好的世界。<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Write-in-autumn-1.png#align=left&display=inline&height=449&margin=%5Bobject%20Object%5D&name=IMG_20201017_125701.jpg&originHeight=4624&originWidth=2080&size=8506344&status=done&style=none&width=202" alt="IMG_20201017_125701.jpg"><br>熹微的阳光透过树梢落到地上，斑驳一片，蓝天刚好。</p><p>我问自己，我们努力是为了什么。不就是为了更好的生活吗？为了更好的感知这个世界，为了更优雅的行走。所以何必要让自己如此焦虑？或许我的危机意识过重，我把结果看得太重。</p><p>这两天午后的阳光很好，慵懒地照在阳台上。所以我都选择回宿舍午休，支一把椅子在阳光下，就这样依着，靠着，眯眼休息。这大抵是一天中除了躺在床上外最美好的时光了。为什么要把自己搞得那么累，为什么要把自己逼得那么紧。</p><p>所以我开始思考，如何生活，如何平衡学习和生活。</p><p>每个人的一天都有 24 小时，除去睡觉的 9 个小时以及吃饭的 3 个小时，我们还剩下 12 个小时可以支配。唯一的最优解就是更加专注，提高处理事务的效率，才能省出更多的时间去休息，出去走走，把它们浪费在无用但美好的事情上。<br>大学还剩两年，谈恋爱对于我来说几乎不太可能。</p><h1 id="做出改变"><a href="#做出改变" class="headerlink" title="做出改变"></a>做出改变</h1><p>前几日，比较幸运的拿了国奖，虽然我并没有觉得生活发生了什么改善，但我突然觉得，我应该做出改变了。</p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>我的均分一直是我的拉跨项。思维没有从高中转变过来。做事没有精益求精，还时常想当然。</p><h2 id="生活习惯"><a href="#生活习惯" class="headerlink" title="生活习惯"></a>生活习惯</h2><h3 id="睡眠"><a href="#睡眠" class="headerlink" title="睡眠"></a>睡眠</h3><p>首先是早睡。</p><p>晚上回到宿舍，总是浪费大量时间在 b 站等无意义的碎片娱乐上，这和宿舍的整体氛围有很大关系，舍友都在玩，都在看视频，都在大声说话，我不能要求他们，所以我也渐渐同化。但如果我想<strong>早起，</strong>我就必须<strong>早睡</strong>。</p><p>还好我们楼终于开始了熄灯制度，修复了不断电的 bug。（然而，信安协会找到了供电系统的 bug，一个未授权访问的漏洞，一通操作我们宿舍晚上不会断电了……）</p><p>我希望可以做到，熄灯即上床，并将手机放在桌子上，用另一个旧手机当闹钟。</p><h3 id="睡前活动"><a href="#睡前活动" class="headerlink" title="睡前活动"></a>睡前活动</h3><p>因为在 11 点半前我要上床，所以晚上回到宿舍后的每一分钟都很重要。</p><p>有以下几项必须完成：</p><ol><li>洗澡吹头发 or 洗脚（20 分种）</li><li>洗脸（8 分钟）</li><li>刷牙+剔牙（非常重要）（10 分钟）</li><li>手机 ipad 充电（顺手）</li><li>收拾出第二天需要穿的衣物（5 分钟）</li><li>借舍友的锅热牛奶，倒入保温杯（6 分钟），给舍友洗锅（3 分钟）</li></ol><p>大概需要一个小时。</p><h3 id="早起"><a href="#早起" class="headerlink" title="早起"></a>早起</h3><p>上了大学，意志力逐渐消退。从大一 7 点起床，到大二 7 点半，到大三 7 点 45（平时第一节没课的话更晚，8：20 是常态），其实这是因为我每天都 12：30 以后才睡，但其实这么晚睡并没有任何益处，我并没有创造更多的价值，反而损害了健康。</p><p>所以<strong>我决定早起，恢复到大一 7 点的状态。</strong></p><blockquote><p>威林克在海豹突击队服役超过 20 年，退役之后还保持着海豹的作息，他的习惯是每天早上 4：45 起床做事。<br>当费里斯问威林克为什么非得早起，威林克回答说早起能让他有一种心理上战胜敌人的感觉。 威林克觉得世界上的某个地方有个敌人，一手拿着冲锋枪一手拿着手榴弹，等着跟他交锋，所以每天早上一睡醒，他就问自己我现在要做什么，才能为将来那个于敌人交战的时刻做好准备？然后他就起来了，开始一天的锻炼和阅读。</p></blockquote><p><strong>早起不是为了多工作一个小时，而是为了用最好的状态开始清醒的 17 个小时。</strong><br>**<br><strong>高效意味着高产出，高产出意味着积累，积累意味着未来无限的可能性。</strong></p><blockquote><p>这里推荐一篇回答<br>如何不痛苦地早起？ - 王振宇的回答 - 知乎 <a href="https://www.zhihu.com/question/22120300/answer/908708574">https://www.zhihu.com/question/22120300/answer/908708574</a></p></blockquote><p>另外，<strong>我想培养起晨跑的习惯。（春天，夏天，初秋）</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Write-in-autumn-2.png#align=left&display=inline&height=261&margin=%5Bobject%20Object%5D&name=image.png&originHeight=522&originWidth=828&size=113127&status=done&style=none&width=414" alt="image.png"></p><p><strong>我想成为自己的主人。</strong></p><h3 id="冥想"><a href="#冥想" class="headerlink" title="冥想"></a>冥想</h3><p>其实我之前坚持过一段时间，但不知道为什么就搁置了。<br>我认为每天晚上的 9 点，是最适合冥想的一段时间。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;写在西安的第三个秋天。&lt;/p&gt;</summary>
    
    
    
    <category term="文艺" scheme="https://www.blog.hackerjerry.top/categories/%E6%96%87%E8%89%BA/"/>
    
    
    <category term="随笔" scheme="https://www.blog.hackerjerry.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="碎碎念" scheme="https://www.blog.hackerjerry.top/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>SCE-Cryptography-Experiment</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/26/SCE-Cryptography-Experiment_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/26/SCE-Cryptography-Experiment_new/</id>
    <published>2020-09-26T08:23:50.000Z</published>
    <updated>2020-11-28T13:39:05.569Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="生成-RSA-大素数对"><a href="#生成-RSA-大素数对" class="headerlink" title="生成 RSA 大素数对"></a>生成 RSA 大素数对</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line">RSAkey = RSA.generate(<span class="number">1024</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">RsaKey(n=135828718287577504794345019580082927233382329800436650769778319130905210891299413615216512376642256926</span></span><br><span class="line"><span class="string">81082083849207511789369113995656114347658628181817364203829151160294408679251739590425386713208320533180799940969738619</span></span><br><span class="line"><span class="string">5247179226323919349310987779260954782675652897977451878557940738099185187754664490831243, e=65537, d=121948850024277284</span></span><br><span class="line"><span class="string">31419291319547857604730482453358702002370807784400357979224037562169979688178632524487768280722147336522673889062734116</span></span><br><span class="line"><span class="string">12091236526264756659745917698038449276833478093929539387457070306648475772351712570431776434737921224077076846006461005</span></span><br><span class="line"><span class="string">1801442191171153628914016094739518761772299602223169, p=106966107287469170015624352521638251586863407906376169924940482</span></span><br><span class="line"><span class="string">70893593178051022233452907429273165871602433433280712262828660157650519133674850464955099769, q=12698294976981883899887</span></span><br><span class="line"><span class="string">05757908736918629112987783691507779835783942064221972829430441724076915068135969878213856988519323444267214248422535888</span></span><br><span class="line"><span class="string">1222134150947, u=748951926994679052549581035821877331925827771100922884099976839588394981271357878319645686189368446921</span></span><br><span class="line"><span class="string">7133192361022681583376512653412786705315289991596596)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>注意这个 Crypto 库一般情况在导入的时候都会出错，有几种情况，我介绍一下我遇到的，就是我之前安装了 pycrypto 这个库，但是这个库最新的一版是 2014 年，已经不兼容了，当我尝试 uninstall 它时，报错<br><code>ERROR: Cannot uninstall &#39;pycrypto&#39;. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.</code><br>这时候，我们必须全局搜索 pycrypto，并手动删除那个文件夹<br>然后在<strong>cmd 下</strong>安装<br><code>pip install pycryptodome --user</code></p><blockquote><p>我也不知道为什么必须在 cmd 下安装，一开始用 powershell 安装的时候我在 Python37 文件夹中找不到它…</p></blockquote><h1 id="Fermat-定理检验素数"><a href="#Fermat-定理检验素数" class="headerlink" title="Fermat 定理检验素数"></a>Fermat 定理检验素数</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FermatPrimalityTest</span>(<span class="params">m,k</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    m:给定奇整数</span></span><br><span class="line"><span class="string">    k:安全参数，重复K次</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> m%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        a = random.randint(<span class="number">2</span>,m<span class="number">-2</span>)</span><br><span class="line">        g = gmpy2.gcd(a,m)</span><br><span class="line">        <span class="keyword">if</span> g==<span class="number">1</span>:</span><br><span class="line">            r = gmpy2.powmod(a,m<span class="number">-1</span>,m)</span><br><span class="line">            <span class="keyword">if</span> r ==<span class="number">1</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;生成-RSA-大素数对&quot;&gt;&lt;a href=&quot;#生成-RSA-大素数对&quot; class=&quot;headerlink&quot; title=&quot;生成 RSA 大素数对&quot;&gt;&lt;/a&gt;生成 RSA 大素数对&lt;/h1&gt;&lt;figure class=&quot;hig</summary>
      
    
    
    
    <category term="crypto" scheme="https://www.blog.hackerjerry.top/categories/crypto/"/>
    
    
    <category term="crypto" scheme="https://www.blog.hackerjerry.top/tags/crypto/"/>
    
    <category term="rsa" scheme="https://www.blog.hackerjerry.top/tags/rsa/"/>
    
  </entry>
  
  <entry>
    <title>Unconstrained-Optimization</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/14/Unconstrained-Optimization_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/14/Unconstrained-Optimization_new/</id>
    <published>2020-09-14T08:50:37.000Z</published>
    <updated>2020-11-28T13:42:20.442Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="无约束优化"><a href="#无约束优化" class="headerlink" title="无约束优化"></a>无约束优化</h1><h2 id="单变量优化-最小值"><a href="#单变量优化-最小值" class="headerlink" title="单变量优化(最小值)"></a>单变量优化(最小值)</h2><h3 id="fminbnd’命令–查找单变量函数在定区间上的最小值"><a href="#fminbnd’命令–查找单变量函数在定区间上的最小值" class="headerlink" title="`fminbnd’命令–查找单变量函数在定区间上的最小值"></a>`fminbnd’命令–查找单变量函数在定区间上的最小值</h3><p><code>x = fminbnd(fun,x1,x2)</code> 返回一个值 x，该值是 fun 中描述的标量值函数在区间 x1 &lt; x &lt; x2 中的局部最小值。<br><code>x = fminbnd(fun,x1,x2,options)</code> 如 options = optimset(‘Display’,’iter’)在常微分方程中有详细的描述<br><code>x = fminbnd(problem)</code><br><code>[x,fval] = fminbnd(___)</code> 返回目标函数在 fun 的解 x 处计算出的值。</p><blockquote><p>即求最小值的位置和函数值</p></blockquote><p>如</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">fun = @<span class="built_in">sin</span>;</span><br><span class="line">[x,fval] = fminbnd(fun,<span class="number">1</span>,<span class="number">2</span>*<span class="built_in">pi</span>)</span><br><span class="line"><span class="comment">%输出</span></span><br><span class="line">x = <span class="number">4.7124</span></span><br><span class="line">fval = <span class="number">-1.0000</span></span><br></pre></td></tr></table></figure><p><code>[x,fval,exitflag] = fminbnd(___)</code><br><code>[x,fval,exitflag,output] = fminbnd(___)</code></p><h2 id="双变量优化-最小值"><a href="#双变量优化-最小值" class="headerlink" title="双变量优化(最小值)"></a>双变量优化(最小值)</h2><h3 id="fminunc信赖域法和拟牛顿法"><a href="#fminunc信赖域法和拟牛顿法" class="headerlink" title="fminunc信赖域法和拟牛顿法"></a><code>fminunc</code>信赖域法和拟牛顿法</h3><p><code>x = fminunc(fun,x0)</code><br><code>x = fminunc(fun,x0,options)</code><br><code>x = fminunc(problem)</code><br><code>[x,fval] = fminunc(___)</code><br><code>[x,fval,exitflag,output] = fminunc(___)</code><br><code>[x,fval,exitflag,output,grad,hessian] = fminunc(___)</code><br>这里看一个<strong>双变量加传参的特殊例子</strong>。求<br>函数文件</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span> = <span class="title">examfminunc</span><span class="params">(x,a,b)</span></span></span><br><span class="line">x = x(<span class="number">1</span>)^<span class="number">2</span>/a+x(<span class="number">2</span>)^<span class="number">2</span>/b;</span><br></pre></td></tr></table></figure><p>源程序<code>x = fminunc(@examfminunc,[1,1],[],2,2)%x=1,y=1是初始值</code></p><blockquote><p>我也不知道这是怎么传进去的参……这个顺序就很迷，但去掉那个[]就会报错无法执行赋值，因为此类型的变量不支持使用点进行索引后期在看书的时候发现那里似乎是 opt 字段，传空数组即不对 opt 进行修改于是我尝试修改成 <code>x = fminunc(@examfminunc,[1,1],&#39;&#39;,2,2)</code>，发现果然也能运行</p></blockquote><h2 id="lsqnonlin-拟合非线性最小二乘系数"><a href="#lsqnonlin-拟合非线性最小二乘系数" class="headerlink" title="lsqnonlin 拟合非线性最小二乘系数"></a><code>lsqnonlin</code> 拟合非线性最小二乘系数</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><code>x = lsqnonlin(fun,x0)</code><br><code>x = lsqnonlin(fun,x0,lb,ub)</code> defines a set of lower and upper bounds on the design variables in x, so that the solution is always in the range . You can fix the solution component x(i) by specifying .<br><code>x = lsqnonlin(fun,x0,lb,ub,options)</code><br>主要用于最小二乘法寻找最优点。（直接把函数值传进去寻找最小值）</p><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Unconstrained-Optimization-1.png#align=left&display=inline&height=88&margin=%5Bobject%20Object%5D&originHeight=88&originWidth=565&size=0&status=done&style=none&width=565"></p><h3 id="示例：飞机定位"><a href="#示例：飞机定位" class="headerlink" title="示例：飞机定位"></a>示例：飞机定位</h3><p>函数文件</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span> = <span class="title">feijidingwei</span><span class="params">(x,x0,y0,theta,sigma,d4,sigma4)</span></span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">3</span></span><br><span class="line">    f(<span class="built_in">i</span>) = (<span class="built_in">atan2</span>(x(<span class="number">1</span>)-x0(<span class="built_in">i</span>),x(<span class="number">2</span>)-y0(<span class="built_in">i</span>))-theta(<span class="built_in">i</span>))/sigma(<span class="built_in">i</span>);<span class="comment">%最小二乘的1~3个参数（注意没有平方，lsqcurvefit函数会加上）</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">f(<span class="number">4</span>) = (<span class="built_in">sqrt</span>((x(<span class="number">1</span>)-x0(<span class="number">4</span>))^<span class="number">2</span>+(x(<span class="number">2</span>)-y0(<span class="number">4</span>))^<span class="number">2</span>)-d4)/sigma4;<span class="comment">%最小二乘的第四个参数</span></span><br><span class="line">主程序</span><br><span class="line">X = [<span class="number">746</span> <span class="number">629</span> <span class="number">1571</span> <span class="number">155</span>];</span><br><span class="line">Y = [<span class="number">1393</span> <span class="number">375</span> <span class="number">259</span> <span class="number">987</span>];</span><br><span class="line">theta = [<span class="number">161.2</span>,<span class="number">45.1</span>,<span class="number">309.0</span><span class="number">-360</span>]*<span class="number">2</span>*<span class="built_in">pi</span>/<span class="number">360</span>;</span><br><span class="line">sigma = [<span class="number">0.8</span>,<span class="number">0.6</span>,<span class="number">1.3</span>]*<span class="number">2</span>*<span class="built_in">pi</span>/<span class="number">360</span>;</span><br><span class="line">d4 = <span class="number">864.3</span>;</span><br><span class="line">sigma4 = <span class="number">2</span>;</span><br><span class="line">x0 = [<span class="number">900</span>,<span class="number">700</span>];<span class="comment">%大约估计的飞机位置</span></span><br><span class="line">[x,norm,res,exit,out] = lsqnonlin(@feijidingwei,x0,[],[],[],X,Y,theta,sigma,d4,sigma4)<span class="comment">%注意这里主初始值就是x0，然后接着三个空数组，然后才能把额外参数传进来</span></span><br><span class="line"><span class="comment">%输出</span></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.0e+02</span> *</span><br><span class="line"></span><br><span class="line">   <span class="number">9.783070295413857</span>   <span class="number">7.239837766517786</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">norm =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.668471174541973</span></span><br></pre></td></tr></table></figure><blockquote><p>lsqcurvefit 也可以最小二乘但是尝试了许多方法它都无法传入更多的参数……遂放弃</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;无约束优化&quot;&gt;&lt;a href=&quot;#无约束优化&quot; class=&quot;headerlink&quot; title=&quot;无约束优化&quot;&gt;&lt;/a&gt;无约束优化&lt;/h1&gt;&lt;h2 id=&quot;单变量优化-最小值&quot;&gt;&lt;a href=&quot;#单变量优化-最小值&quot; cl</summary>
      
    
    
    
    <category term="数学建模" scheme="https://www.blog.hackerjerry.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="matlab" scheme="https://www.blog.hackerjerry.top/tags/matlab/"/>
    
    <category term="无约束优化" scheme="https://www.blog.hackerjerry.top/tags/%E6%97%A0%E7%BA%A6%E6%9D%9F%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Differential-Equations</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/10/Differential-Equations_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/10/Differential-Equations_new/</id>
    <published>2020-09-10T09:04:08.000Z</published>
    <updated>2020-11-28T13:40:57.986Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="非刚性常微分方程"><a href="#非刚性常微分方程" class="headerlink" title="非刚性常微分方程"></a>非刚性常微分方程</h1><p>形如类的方程,反求出 y 的值,并最终画出原函数图像</p><h2 id="ode23-–-求解非刚性微分方程-低阶方法"><a href="#ode23-–-求解非刚性微分方程-低阶方法" class="headerlink" title="ode23 – 求解非刚性微分方程 - 低阶方法"></a>ode23 – 求解非刚性微分方程 - 低阶方法</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><code>[t,y] = ode23(odefun,tspan,y0)</code><br><code>[t,y] = ode23(odefun,tspan,y0,options)</code><br><code>[t,y,te,ye,ie] = ode23(odefun,tspan,y0,options)</code><br><code>sol = ode23(___)</code></p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p><code>[t,y] = ode23(odefun,tspan,y0)</code>（其中 tspan = [t0 tf]）求微分方程组 从 到 的积分，初始条件为 。<strong>解数组 中的每一行都与列向量 中返回的值相对应。</strong>,必须返回矩阵才能一一对应!<br><strong>参数</strong><code>odefun</code><br><strong>要求解的函数，指定为指向待积分函数的句柄。</strong><br>对于标量 t 和列向量 y 来说，函数 dydt = odefun(t,y) 必须返回数据类型为 single 或 double 的列向量 dydt，该列向量对应于 f(t,y)。odefun 必须同时接受输入参数 t 和 y，即使其中一个参数未在函数中使用也是如此。<br>例如，要解算 y′=5y−3，请使用此函数：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dydt</span> = <span class="title">odefun</span><span class="params">(t,y)</span></span></span><br><span class="line">dydt = <span class="number">5</span>*y<span class="number">-3</span>;</span><br></pre></td></tr></table></figure><p>对于方程组，odefun 的输出为向量。向量中的每个元素是一个方程的解。例如，要求解<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-1.svg#card=math&code=y%E2%80%B2_1%3Dy_1%2B2y_2%0A%0A&height=18&width=103"><br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-2.svg#card=math&code=y%E2%80%B2_2%3D3y_1%2B2y_2&height=18&width=112"></p><p>使用函数：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dydt</span> = <span class="title">odefun</span><span class="params">(t,y)</span></span></span><br><span class="line">dydt = <span class="built_in">zeros</span>(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">dydt(<span class="number">1</span>) = y(<span class="number">1</span>)+<span class="number">2</span>*y(<span class="number">2</span>);</span><br><span class="line">dydt(<span class="number">2</span>) = <span class="number">3</span>*y(<span class="number">1</span>)+<span class="number">2</span>*y(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><div class="note important"><p>tspan</p></div><p><strong>积分区间，指定为向量。</strong>tspan 必须至少是一个二元素向量 [t0 tf]，用于指定初始时间和最终时间。要获取 t0 到 tf 之间的特定时间的解，请使用 [t0,t1,t2,…,tf] 形式的长向量。tspan 中的元素必须单调递增或单调递减。<br>求解器在初始时间 tspan(1) 施加由 y0 给出的初始条件，然后求 tspan(1) 到 tspan(end) 的积分：<br>如果 tspan 有两个元素，[t0 tf]，求解器将返回在该区间内的每个内部积分步计算的解。<br>如果 tspan 包含两个以上的元素，[t0,t1,t2,…,tf]，求解器将返回在给定点处计算的解。但是，求解器不会精确步进到 tspan 中指定的每个点。此时，求解器使用自己的内部积分步来计算解，然后在 tspan 中请求的各点处计算解。在指定点处生成的解与在每个内部积分步计算的解具有相同的准确度级别。示例</p><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-3.png#align=left&display=inline&height=279&margin=%5Bobject%20Object%5D&originHeight=279&originWidth=801&size=0&status=done&style=none&width=801"></p><h4 id="对于二阶非刚性-ODE-方程"><a href="#对于二阶非刚性-ODE-方程" class="headerlink" title="对于二阶非刚性 ODE 方程"></a>对于二阶非刚性 ODE 方程</h4><p>如$y_1’’- (1-y_1^2)*y_1’+y_1=0$,这是一个<code>van der Pol </code>方程.<br>二阶方程做一阶变换<br>令$y_2=y_1’$,因此$y_2’=(1-y_1^2)*y_2+y_1$<br>类似的对应关系<img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2020/png/1629942/1599728724217-10c4acb3-9586-46a1-a955-b4fbc0909460.png#align=left&display=inline&height=346&margin=%5Bobject%20Object%5D&originHeight=346&originWidth=744&size=0&status=done&style=none&width=744"><br>具体 matlab 实现</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%vdp1.m文件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dydt</span> = <span class="title">vdp1</span><span class="params">(t,y)</span></span></span><br><span class="line">dydt = [y(<span class="number">2</span>); (<span class="number">1</span>-y(<span class="number">1</span>)^<span class="number">2</span>)*y(<span class="number">2</span>)-y(<span class="number">1</span>)];<span class="comment">%将方程两边作为二维矩阵的两个行向量</span></span><br></pre></td></tr></table></figure><p>使用 ode23 函数、时间区间 [0 20] 和初始值 [2 ; 0]来解算该 ODE。生成的输出即为时间点 t 的列向量和解数组 y。y 中的每一行都与 t 的相应行中返回的时间相对应。y 的第一列与 相对应，第二列与 相对应。</p><blockquote><p>虽然初始值是上下排列,但最后得到的数据是左右排列(一列是对应一个 y,感觉好像转置了)</p></blockquote><p>调用文件</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[t,y] = ode23(@vdp1,[<span class="number">0</span> <span class="number">20</span>],[<span class="number">2</span>; <span class="number">0</span>]);<span class="comment">%使用@文件名可以调用里面的函数(最好文件名和函数名一致)</span></span><br><span class="line"><span class="built_in">plot</span>(t,y(:,<span class="number">1</span>),<span class="string">&#x27;-o&#x27;</span>,t,y(:,<span class="number">2</span>),<span class="string">&#x27;-o&#x27;</span>)<span class="comment">%绘制y1和y2的解图</span></span><br><span class="line">title(<span class="string">&#x27;Solution of van der Pol Equation (\mu = 1) with ODE23&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;Time t&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;Solution y&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;y_1&#x27;</span>,<span class="string">&#x27;y_2&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>注意</strong><br><code>ode23 </code>仅适用于使用两个输入参数（t 和 y）的函数。但是，通过在函数外部定义参数并在指定函数句柄时传递这些参数，可以传入额外参数。</p><h5 id="传入额外参数"><a href="#传入额外参数" class="headerlink" title="传入额外参数"></a>传入额外参数</h5><p>解$y’’=\frac{A}{B}ty$<br>重写令$y_1’=y_2$,因此$y_2’=\frac{A}{B}ty_1$<br>函数文件</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dydt</span> = <span class="title">odefun</span><span class="params">(t,y,a,b)</span></span></span><br><span class="line">dydt = [y(<span class="number">2</span>);(a/b)*t.*y(<span class="number">1</span>)]</span><br></pre></td></tr></table></figure><p>调用文件</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A = <span class="number">1</span>;</span><br><span class="line">B = <span class="number">2</span>;</span><br><span class="line">tspan = [<span class="number">0</span> <span class="number">5</span>];</span><br><span class="line">y0 = [<span class="number">0</span>;<span class="number">0.01</span>];</span><br><span class="line">[t,y] = ode23(@(t,y) odefun(t,y,A,B), tspan, y0);</span><br><span class="line"><span class="built_in">plot</span>(t,y(:,<span class="number">1</span>),<span class="string">&#x27;-o&#x27;</span>,t,y(:,<span class="number">2</span>),<span class="string">&#x27;-.&#x27;</span>)</span><br></pre></td></tr></table></figure><p>或者一个文件试了一下也是可以的</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">odefun = @(t,y,a,b)[y(<span class="number">2</span>);(a/b)*t.*y(<span class="number">1</span>)];</span><br><span class="line">A = <span class="number">1</span>;</span><br><span class="line">B = <span class="number">2</span>;</span><br><span class="line">tspan = [<span class="number">0</span> <span class="number">5</span>];</span><br><span class="line">y0 = [<span class="number">0</span>;<span class="number">0.01</span>];</span><br><span class="line">[t,y] = ode23(@(t,y) odefun(t,y,A,B), tspan, y0);</span><br><span class="line"><span class="built_in">plot</span>(t,y(:,<span class="number">1</span>),<span class="string">&#x27;-o&#x27;</span>,t,y(:,<span class="number">2</span>),<span class="string">&#x27;-.&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-4.png#align=left&display=inline&height=411&margin=%5Bobject%20Object%5D&originHeight=411&originWidth=546&size=0&status=done&style=none&width=546"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><code>ode23</code> 是<code> Bogacki</code> 和 <code>Shampine </code>的显式 <code>Runge-Kutta (2,3)</code> 对的实现。在容差较宽松且刚度适中的情况下，它可能比 <code>ode45</code> 更加有效。<code>ode23 </code>是单步求解器</p><h2 id="ode45-–-求解非刚性微分方程-中阶方法"><a href="#ode45-–-求解非刚性微分方程-中阶方法" class="headerlink" title="ode45 – 求解非刚性微分方程 - 中阶方法"></a>ode45 – 求解非刚性微分方程 - 中阶方法</h2><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><p><code>[t,y] = ode45(odefun,tspan,y0)</code><br><code>[t,y] = ode45(odefun,tspan,y0,options)</code><br><code>[t,y,te,ye,ie] = ode45(odefun,tspan,y0,options)</code><br><code>sol = ode45(___)</code><br><strong>ode45 是一个通用型 ODE 求解器，是解算大多数问题时的首选。但是，对于刚性问题或需要较高准确性的问题，其他 ODE 求解器可能更适合。</strong><br>其实用法和 ode23 几乎一样,只是生成的数据图的数据点更密了.<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-5.png#align=left&display=inline&height=492&margin=%5Bobject%20Object%5D&originHeight=492&originWidth=612&size=0&status=done&style=none&width=612"></p><h1 id="刚性常微分方程"><a href="#刚性常微分方程" class="headerlink" title="刚性常微分方程"></a>刚性常微分方程</h1><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p>所谓刚性方程，就是说存在两(多)重尺度，一个尺度比另外一个尺度大很多。所导致的麻烦就是在计算中很难兼顾两者。例如下面的方程：dx=-100x-100.1ydy=100.1x-100y 两个特征值 lambda_1 = -200.1，lambda_2 = -0.1 所以解表现为 a1_exp(-200.1_X) + a2_exp(-0.1_X)，无论你用什么样的尺度(单一尺度)都不能很好刻画解的行为。一个是快变行为，一个是慢变行为。 所有这样的方程计算时候，稳定性条件比较苛刻。实际情况要比这还复杂得多。<br>对于刚性和非刚性微分方程的区分，可以简单的转变为在将原方程转换为常微分方程组后，进行一个简单的系数判断：<br>例如：</p><p>$$<br>y’’’ - 3y’’ - y’y = 0, y(0) = 0, y’(0) = 0, y’’(0) = -1;<br>$$</p><p>在这里可以设  y1 = y, y2 = y’, y3 = y’’, 有</p><p>$$<br>  y_1’ = y_2,      　y_1(0) = 0,<br>$$</p><p>$$<br>  y_2’ = y_3,       y_2(0) = 1,<br>$$</p><p>$$<br>  y_3’ = 3y_3 + y_2y_1,   y_3(0) = -1,<br>$$</p><p>这里可以简单判断出方程组的右侧系数矩阵值差异不大，得到的特征值差异随之也不大，可以简单判断为非刚性微分方程。<br>MATLAB 中<strong>解非刚性微分方程常用 ode45 ;</strong></p><p>又例如：<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-6.svg#card=math&code=y%27%27%20-%201000%281%20-%20y%5E2%29y%27%20%2B%20y%20%3D%200%2C%20y%280%29%20%3D%202%2C%20y%27%280%29%20%3D%200%3B&height=23&width=348"></p><p>在这里可以设<img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/__latex/0feecf5b95ff7b36da6886a607fb0ec6.svg#card=math&code=y1%20%3D%20y%2C%20y2%20%3D%20y%27&height=20&width=107">, 有</p><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-7.svg#card=math&code=y1%27%20%3D%20y2%2C%20%20%20%20%20%20%20%20%20%20%20y1%280%29%20%3D%202%2C&height=21&width=142"></p><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-8.svg#card=math&code=y2%27%20%3D%201000%281%20-%20y1%5E2%29y2%20-%20y1%2C%20%20y2%280%29%20%3D%200%2C&height=23&width=280"></p><p>这里可以简单判断出方程组的右侧系数矩阵值差异较大，得到的特征值差异随之较大，可以简单判断为刚性微分方程。<br>MATLAB 中<strong>解刚性微分方程常用 ode15s , ode23s , ode23t , ode23tb ;</strong></p><blockquote><p>如果区分不出来就多试试.</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-9.png#align=left&display=inline&height=362&margin=%5Bobject%20Object%5D&originHeight=362&originWidth=704&size=0&status=done&style=none&width=704"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">dy=@(t,y)[y(<span class="number">2</span>);y(<span class="number">3</span>);<span class="number">3</span>*y(<span class="number">3</span>)+y(<span class="number">2</span>)*y(<span class="number">1</span>)];</span><br><span class="line">[T,Y]=ode23s(@(t,y)dy(t,y),[<span class="number">0</span> <span class="number">1</span>],[<span class="number">0</span>;<span class="number">1</span>;<span class="number">-1</span>]);<span class="comment">%函数传参一定要声明句柄,参数前后都要写</span></span><br></pre></td></tr></table></figure><h1 id="解常微分方程符号解"><a href="#解常微分方程符号解" class="headerlink" title="解常微分方程符号解"></a>解常微分方程符号解</h1><p>常微分方程在 Matlab 中按如下规定重新表达： 符号 D 表示对变量的求导。Dy 表示对变量 y 求一阶导数，当需要求变量的 n 阶导 数时，用 Dn 表示，D4y 表示对变量 y 求 4 阶导数。由此，常微分方程 $y’’+2y’= y$ 在 Matlab 中，将写成<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-10.svg#card=math&code=D2y%2B2%2ADy%3Dy&height=18&width=128"></p><h2 id="求解常微分方程的通解"><a href="#求解常微分方程的通解" class="headerlink" title="求解常微分方程的通解"></a>求解常微分方程的通解</h2><p>无初边值条件的常微分方程的解就是该方程的通解。<br><code>dsolve(&#39; diff_equation&#39;，&#39;var&#39;)</code><br>式中 diff_equation 为待解的常微分方程，第 1 种格式将以变量 t 为自变量进行求解， 第 2 种格式则需定义自变量 var。<br>栗子:<br>解<img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/__latex/80ea40cf4ace3937d7e295680fe5eac1.svg#card=math&code=x%5E2%2By%2B%28x-2y%29y%27%3D0&height=23&width=171"><br>程序如下:</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">syms x y</span><br><span class="line">diff_equ=<span class="string">&#x27;x^2+y+(x-2*y)*Dy=0&#x27;</span>;<span class="comment">%字符串形式的变量!注意!</span></span><br><span class="line">dsolve(diff_equ,<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line"><span class="comment">% x/2 + ((4*x^3)/3 + x^2 + C4)^(1/2)/2</span></span><br><span class="line"><span class="comment">% x/2 - ((4*x^3)/3 + x^2 + C4)^(1/2)/2</span></span><br></pre></td></tr></table></figure><h2 id="求解常微分方程的初边值问题"><a href="#求解常微分方程的初边值问题" class="headerlink" title="求解常微分方程的初边值问题"></a>求解常微分方程的初边值问题</h2><p><code>dsolve(&#39;diff_equation&#39;，&#39;condition1，condition2，…&#39;，&#39;var&#39;)</code>其中 condition1，condition2，… 即为微分方程的初边值条件。<br>例如<code>y=dsolve(&#39;D3y-D2y=x&#39;,&#39;y(1)=8,Dy(1)=7,D2y(2)=4&#39;,&#39;x&#39;)</code><br>结果为</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">y =</span><br><span class="line">x*((<span class="built_in">exp</span>(<span class="number">-1</span>)*(<span class="number">19</span>*<span class="built_in">exp</span>(<span class="number">1</span>) - <span class="number">14</span>))/<span class="number">2</span> - <span class="number">1</span>) + <span class="number">7</span>*<span class="built_in">exp</span>(<span class="number">-2</span>)*<span class="built_in">exp</span>(x) - x^<span class="number">2</span>/<span class="number">2</span> - x^<span class="number">3</span>/<span class="number">6</span> + (<span class="built_in">exp</span>(<span class="number">-1</span>)*(<span class="number">19</span>*<span class="built_in">exp</span>(<span class="number">1</span>) - <span class="number">14</span>))/<span class="number">2</span> - (<span class="built_in">exp</span>(<span class="number">-1</span>)*(<span class="number">25</span>*<span class="built_in">exp</span>(<span class="number">1</span>) - <span class="number">21</span>))/<span class="number">3</span> - <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="求解常微分方程组"><a href="#求解常微分方程组" class="headerlink" title="求解常微分方程组"></a>求解常微分方程组</h2><p><code> ``dsolve``(``&#39;diff_equ1，diff_equ2，…&#39;``，``&#39;``var``&#39;``)``%用于求通解</code><br><code> ``dsolve``(``&#39;diff_equ1，diff_equ2，…&#39;``，``&#39;``condition1，condition2，…``&#39;``，``&#39;``var``&#39;``)``%用于求初始值</code><br>例如,求<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-11.svg#card=math&code=%5Cleft%5C%7B%0A%20%20%20%20%5Cbegin%7Barray%7D%7Brcl%7D%0A%20%20%20%20f%27%27%2B3g%3Dsinx%5C%5C%0A%20%20%20%20f%27%2Bg%27%3Dcosx%0A%20%20%20%20%20%20%20%0A%20%20%20%20%5Cend%7Barray%7D%0A%20%20%20%0A%5Cright.&height=45&width=128"></p><p>这个方程组的通解和在初始值为的解.</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">equ1=<span class="string">&#x27;D2f+3*g=sin(x)&#x27;</span>;</span><br><span class="line">equ2=<span class="string">&#x27;Dg+Df=cos(x)&#x27;</span>;</span><br><span class="line">[general_f,general_g]=dsolve(equ1,equ2,<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">[f,g]=dsolve(equ1,equ2,<span class="string">&#x27;Df(2)=0,f(3)=3,g(5)=1&#x27;</span>,<span class="string">&#x27;x&#x27;</span>)</span><br></pre></td></tr></table></figure><p>目前没有覆盖到多变量的常微分方程数值解,也不知道 ode45 传初始值的矩阵究竟用列向量还是行向量(似乎都可以,无论逗号或是分号)</p><h1 id="实战学习"><a href="#实战学习" class="headerlink" title="实战学习"></a>实战学习</h1><h2 id="双变量初始值下的常微分方程组"><a href="#双变量初始值下的常微分方程组" class="headerlink" title="双变量初始值下的常微分方程组"></a>双变量初始值下的常微分方程组</h2><h3 id="伏尔泰拉-Volterra-弱肉强食模型"><a href="#伏尔泰拉-Volterra-弱肉强食模型" class="headerlink" title="伏尔泰拉(Volterra)弱肉强食模型"></a>伏尔泰拉(Volterra)弱肉强食模型</h3><h4 id="问题提出"><a href="#问题提出" class="headerlink" title="问题提出"></a>问题提出</h4><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-12.png#align=left&display=inline&height=551&margin=%5Bobject%20Object%5D&originHeight=551&originWidth=1210&size=0&status=done&style=none&width=1210"></p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>即初值问题</p><p>其中,</p><ul><li><p>r 是食饵独立生存的时候自然增长率</p></li><li><p>a 是由于捕食者存在导致减少的比例系数</p></li><li><p>c 是捕食者独自存在时候的死亡率</p></li><li><p>b 是由于食饵存在导致死亡率减少的比例系数</p></li></ul><blockquote><p>它们均大于 0.</p></blockquote><p>注意多变量的矩阵变换<br>或许必须将 x’,y’放在方程组的一边用于迭代<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-13.png#align=left&display=inline&height=1000&margin=%5Bobject%20Object%5D&originHeight=1000&originWidth=1743&size=0&status=done&style=none&width=1743"><br>但是如果 x’与 y’是乘的关系呢?<br>似乎不用考虑,因为高数里面也没有涉及到<br>函数文件</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dd</span> = <span class="title">shier</span><span class="params">(t,x)</span></span></span><br><span class="line">r = <span class="number">1</span>;</span><br><span class="line">c =<span class="number">0.5</span>;</span><br><span class="line">a = <span class="number">0.1</span>;</span><br><span class="line">b = <span class="number">0.02</span>;</span><br><span class="line">dd = <span class="built_in">diag</span>([r-a*x(<span class="number">2</span>,:),-c+b*x(<span class="number">1</span>,:)])*x;<span class="comment">%把原来的x,y放在一个矩阵里就可以只用一个符号变量进行索引</span></span><br><span class="line"><span class="comment">%对于左边是x&#x27;的,就把x初始值乘进去,然后索引y的初始值,其实如果反过来索引也可以</span></span><br><span class="line">dd返回的是[x&#x27;,y&#x27;]&#x27;,然后交给ode45处理</span><br></pre></td></tr></table></figure><p>调用文件</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">tspan = <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">15</span>;</span><br><span class="line">[t,x] = ode45(@shier,tspan,[<span class="number">25</span>;<span class="number">2</span>]);<span class="comment">%我认为t只是传进来迭代次数,与常微分方程组本身并无关系</span></span><br><span class="line"><span class="built_in">plot</span>(t,x);</span><br></pre></td></tr></table></figure><p>结果<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-14.png#align=left&display=inline&height=484&margin=%5Bobject%20Object%5D&originHeight=484&originWidth=631&size=0&status=done&style=none&width=631"><br>这里甚至可以看出图像具有周期性,那么怎么计算出周期呢?</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">tspan = <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">15</span>;</span><br><span class="line">[t,x] = ode45(@shier,tspan,[<span class="number">25</span>;<span class="number">2</span>]);<span class="comment">%我认为t只是传进来迭代次数,与常微分方程组本身并无关系</span></span><br><span class="line"><span class="comment">%方法一</span></span><br><span class="line"><span class="comment">%a = find((abs(x(1,1)-x(1:length(x),1)))&lt;1);%如果是min的话他只会索引到第一个原值</span></span><br><span class="line">这里</span><br><span class="line"><span class="comment">%方法二</span></span><br><span class="line">a = <span class="built_in">find</span>(x(:,<span class="number">1</span>)==(x(<span class="number">1</span>,<span class="number">1</span>)-<span class="built_in">min</span>(<span class="built_in">abs</span>((x(<span class="number">1</span>,<span class="number">1</span>)-x(<span class="number">2</span>:<span class="built_in">length</span>(x),<span class="number">1</span>))))));<span class="comment">%这里不是加就是减,一定会索引到最小值的,多试两遍就出来了</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line"><span class="comment">%plot(t,x,t(a(2,1),1),x(a(2,1),1),&#x27;*&#x27;);%方法一对应的找数据点方法</span></span><br><span class="line"><span class="built_in">plot</span>(t,x,t(a,<span class="number">1</span>),x(a,<span class="number">1</span>),<span class="string">&#x27;*&#x27;</span>);<span class="comment">%方法二对应的找数据点的方法</span></span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">line([<span class="number">0</span> <span class="number">15</span>],[x(a,<span class="number">1</span>) x(a,<span class="number">1</span>)],<span class="string">&#x27;LineStyle&#x27;</span>,<span class="string">&#x27;--&#x27;</span>);<span class="comment">%画一条水平线</span></span><br><span class="line">line([t(a,<span class="number">1</span>) t(a,<span class="number">1</span>)],[<span class="number">0</span> x(a,<span class="number">1</span>)],<span class="string">&#x27;LineStyle&#x27;</span>,<span class="string">&#x27;--&#x27;</span>);<span class="comment">%画一条竖直线</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x(:,<span class="number">1</span>),x(:,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>效果图<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-15.png#align=left&display=inline&height=478&margin=%5Bobject%20Object%5D&originHeight=478&originWidth=627&size=0&status=done&style=none&width=627"><br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-16.png#align=left&display=inline&height=481&margin=%5Bobject%20Object%5D&originHeight=481&originWidth=610&size=0&status=done&style=none&width=610"><br>其中 dd 参数在传入初始值[25;2]后运算结果(即 t=0.1 时)</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line"> <span class="number">25</span>*r - <span class="number">25</span>*a*y</span><br><span class="line"> <span class="number">2</span>*b*x - <span class="number">2</span>*c</span><br><span class="line"> <span class="comment">%这是一个列向量,有两行,其中y为2,x为25,这里只是为了便于理解</span></span><br></pre></td></tr></table></figure><pre><code>  而结果最终返回的x是一个n*2的矩阵,第一列是x,第二列是y</code></pre><p>结果的数值表示为</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">                   <span class="number">0</span>  <span class="number">25.000000000000000</span>   <span class="number">2.000000000000000</span></span><br><span class="line">   <span class="number">0.100000000000000</span>  <span class="number">27.081808053754724</span>   <span class="number">2.004112695948303</span></span><br><span class="line">   <span class="number">0.200000000000000</span>  <span class="number">29.334409623386446</span>   <span class="number">2.016970388233990</span></span><br><span class="line">   <span class="number">0.300000000000000</span>  <span class="number">31.768915238930827</span>   <span class="number">2.039429632085728</span></span><br><span class="line">   <span class="number">0.400000000000000</span>  <span class="number">34.396069793378309</span>   <span class="number">2.072575255691516</span></span><br><span class="line">   <span class="number">0.500000000000000</span>  <span class="number">37.225819482896881</span>   <span class="number">2.117788767225540</span></span><br><span class="line">   <span class="number">0.600000000000000</span>  <span class="number">40.267311806832083</span>   <span class="number">2.176748354848179</span></span><br><span class="line">   <span class="number">0.700000000000000</span>  <span class="number">43.501170756497132</span>   <span class="number">2.253434244955612</span></span><br><span class="line">   <span class="number">0.800000000000000</span>  <span class="number">46.935996455891825</span>   <span class="number">2.350284334323296</span></span><br><span class="line">   <span class="number">0.900000000000000</span>  <span class="number">50.607214111441841</span>   <span class="number">2.468336939929975</span></span><br><span class="line">   <span class="number">1.000000000000000</span>  <span class="number">54.530132303795753</span>   <span class="number">2.610565196434151</span></span><br><span class="line">   <span class="number">1.100000000000000</span>  <span class="number">58.699942987824969</span>   <span class="number">2.781877056174068</span></span><br><span class="line">   <span class="number">1.200000000000000</span>  <span class="number">63.091721492623776</span>   <span class="number">2.989115289167727</span></span><br><span class="line">   <span class="number">1.300000000000000</span>  <span class="number">67.660426521509294</span>   <span class="number">3.241057483112876</span></span><br><span class="line">   <span class="number">1.400000000000000</span>  <span class="number">72.340900152021618</span>   <span class="number">3.548416043387018</span></span><br><span class="line">   <span class="number">1.500000000000000</span>  <span class="number">77.047867835923512</span>   <span class="number">3.923838193047399</span></span><br><span class="line">   <span class="number">1.600000000000000</span>  <span class="number">81.675938399200817</span>   <span class="number">4.381905972831026</span></span><br><span class="line">   <span class="number">1.700000000000000</span>  <span class="number">86.099604042062211</span>   <span class="number">4.939136241154664</span></span><br><span class="line">   <span class="number">1.800000000000000</span>  <span class="number">90.173240338938967</span>   <span class="number">5.613980674114787</span></span><br><span class="line">   <span class="number">1.900000000000000</span>  <span class="number">93.731106238485580</span>   <span class="number">6.426825765487674</span></span><br><span class="line">   <span class="number">2.000000000000000</span>  <span class="number">96.587344063579224</span>   <span class="number">7.399992826729324</span></span><br><span class="line">   <span class="number">2.100000000000000</span>  <span class="number">98.535979511319994</span>   <span class="number">8.557737986975489</span></span><br><span class="line">   <span class="number">2.200000000000000</span>  <span class="number">99.305464073021838</span>   <span class="number">9.923384989608529</span></span><br><span class="line">   <span class="number">2.300000000000000</span>  <span class="number">98.614325538390403</span>  <span class="number">11.508508167056767</span></span><br><span class="line">   <span class="number">2.400000000000000</span>  <span class="number">96.285088095021379</span>  <span class="number">13.306709884287148</span></span><br><span class="line">   <span class="number">2.500000000000000</span>  <span class="number">92.247162361659704</span>  <span class="number">15.288207079976694</span></span><br><span class="line">   <span class="number">2.600000000000000</span>  <span class="number">86.585268003842529</span>  <span class="number">17.394730789385640</span></span><br><span class="line">   <span class="number">2.700000000000000</span>  <span class="number">79.534876888241484</span>  <span class="number">19.542682224883006</span></span><br><span class="line">   <span class="number">2.800000000000000</span>  <span class="number">71.536355306602971</span>  <span class="number">21.622546215392298</span></span><br><span class="line">   <span class="number">2.900000000000000</span>  <span class="number">63.084804160958107</span>  <span class="number">23.530018889724300</span></span><br><span class="line">   <span class="number">3.000000000000000</span>  <span class="number">54.623560359426598</span>  <span class="number">25.181931216068016</span></span><br><span class="line">   <span class="number">3.100000000000000</span>  <span class="number">46.544096804423660</span>  <span class="number">26.516262459375845</span></span><br><span class="line">   <span class="number">3.200000000000000</span>  <span class="number">39.186022392660291</span>  <span class="number">27.492140181363510</span></span><br><span class="line">   <span class="number">3.300000000000000</span>  <span class="number">32.793221206846198</span>  <span class="number">28.097843791494348</span></span><br><span class="line">   <span class="number">3.400000000000000</span>  <span class="number">27.336823355775415</span>  <span class="number">28.376560995050070</span></span><br><span class="line">   <span class="number">3.500000000000000</span>  <span class="number">22.737483650943837</span>  <span class="number">28.376423948829007</span></span><br><span class="line">   <span class="number">3.600000000000000</span>  <span class="number">18.913395131038023</span>  <span class="number">28.142567798641700</span></span><br><span class="line">   <span class="number">3.700000000000000</span>  <span class="number">15.777073834688206</span>  <span class="number">27.717805173699979</span></span><br><span class="line">   <span class="number">3.800000000000000</span>  <span class="number">13.235358800468109</span>  <span class="number">27.142626186616940</span></span><br><span class="line">   <span class="number">3.900000000000000</span>  <span class="number">11.187311576411814</span>  <span class="number">26.455624312391883</span></span><br><span class="line">   <span class="number">4.000000000000000</span>   <span class="number">9.527792494902240</span>  <span class="number">25.691072088430193</span></span><br><span class="line">   <span class="number">4.100000000000001</span>   <span class="number">8.175847419742645</span>  <span class="number">24.874012401250678</span></span><br><span class="line">   <span class="number">4.200000000000000</span>   <span class="number">7.068391701914113</span>  <span class="number">24.024511571721689</span></span><br><span class="line">   <span class="number">4.300000000000000</span>   <span class="number">6.159197028246341</span>  <span class="number">23.157992057962328</span></span><br><span class="line">   <span class="number">4.400000000000000</span>   <span class="number">5.418516351184799</span>  <span class="number">22.285300010011660</span></span><br><span class="line">   <span class="number">4.500000000000000</span>   <span class="number">4.812949938211244</span>  <span class="number">21.416178920107392</span></span><br><span class="line">   <span class="number">4.600000000000001</span>   <span class="number">4.312378013540997</span>  <span class="number">20.558183397698095</span></span><br><span class="line">   <span class="number">4.700000000000000</span>   <span class="number">3.896728033888424</span>  <span class="number">19.716433768708011</span></span><br><span class="line">   <span class="number">4.800000000000001</span>   <span class="number">3.549963138651240</span>  <span class="number">18.894836312980246</span></span><br><span class="line">   <span class="number">4.900000000000000</span>   <span class="number">3.260082149910534</span>  <span class="number">18.096083264276789</span></span><br><span class="line">   <span class="number">5.000000000000000</span>   <span class="number">3.018079494247696</span>  <span class="number">17.321894302742177</span></span><br><span class="line">   <span class="number">5.100000000000001</span>   <span class="number">2.815390957478957</span>  <span class="number">16.573545734604863</span></span><br><span class="line">   <span class="number">5.200000000000000</span>   <span class="number">2.645975745866385</span>  <span class="number">15.851549329681150</span></span><br><span class="line">   <span class="number">5.300000000000001</span>   <span class="number">2.504682806034744</span>  <span class="number">15.156183855662157</span></span><br><span class="line">   <span class="number">5.400000000000000</span>   <span class="number">2.387154825623396</span>  <span class="number">14.487520111000972</span></span><br><span class="line">   <span class="number">5.500000000000000</span>   <span class="number">2.289828233286297</span>  <span class="number">13.845420924912609</span></span><br><span class="line">   <span class="number">5.600000000000001</span>   <span class="number">2.209933198691999</span>  <span class="number">13.229541157374021</span></span><br><span class="line">   <span class="number">5.700000000000000</span>   <span class="number">2.145493632523649</span>  <span class="number">12.639327699124115</span></span><br><span class="line">   <span class="number">5.800000000000001</span>   <span class="number">2.095302528876663</span>  <span class="number">12.074025260038512</span></span><br><span class="line">   <span class="number">5.900000000000000</span>   <span class="number">2.057819970371494</span>  <span class="number">11.532952029583695</span></span><br><span class="line">   <span class="number">6.000000000000000</span>   <span class="number">2.031734456202639</span>  <span class="number">11.015418711177421</span></span><br><span class="line">   <span class="number">6.100000000000001</span>   <span class="number">2.016223775353870</span>  <span class="number">10.520656535937128</span></span><br><span class="line">   <span class="number">6.200000000000000</span>   <span class="number">2.010602361556739</span>  <span class="number">10.047895063292874</span></span><br><span class="line">   <span class="number">6.300000000000001</span>   <span class="number">2.014321293290578</span>   <span class="number">9.596362180987299</span></span><br><span class="line">   <span class="number">6.400000000000000</span>   <span class="number">2.026968293782502</span>   <span class="number">9.165284105075676</span></span><br><span class="line">   <span class="number">6.500000000000000</span>   <span class="number">2.048267731007400</span>   <span class="number">8.753885379925855</span></span><br><span class="line">   <span class="number">6.600000000000001</span>   <span class="number">2.078080617687949</span>   <span class="number">8.361388878218298</span></span><br><span class="line">   <span class="number">6.700000000000000</span>   <span class="number">2.116388457892334</span>   <span class="number">7.987017842929896</span></span><br><span class="line">   <span class="number">6.800000000000001</span>   <span class="number">2.163225001305634</span>   <span class="number">7.630030231078177</span></span><br><span class="line">   <span class="number">6.900000000000000</span>   <span class="number">2.218783549199125</span>   <span class="number">7.289725741835887</span></span><br><span class="line">   <span class="number">7.000000000000000</span>   <span class="number">2.283347851980680</span>   <span class="number">6.965426060221426</span></span><br><span class="line">   <span class="number">7.100000000000001</span>   <span class="number">2.357279290720927</span>   <span class="number">6.656474302505986</span></span><br><span class="line">   <span class="number">7.200000000000000</span>   <span class="number">2.441016877153240</span>   <span class="number">6.362235016213561</span></span><br><span class="line">   <span class="number">7.300000000000001</span>   <span class="number">2.535077253673752</span>   <span class="number">6.082094180120929</span></span><br><span class="line">   <span class="number">7.400000000000000</span>   <span class="number">2.640054693341341</span>   <span class="number">5.815459204257671</span></span><br><span class="line">   <span class="number">7.500000000000000</span>   <span class="number">2.756621099877643</span>   <span class="number">5.561758929906152</span></span><br><span class="line">   <span class="number">7.600000000000000</span>   <span class="number">2.885526007667043</span>   <span class="number">5.320443629601537</span></span><br><span class="line">   <span class="number">7.699999999999999</span>   <span class="number">3.027596581756677</span>   <span class="number">5.090985007131783</span></span><br><span class="line">   <span class="number">7.800000000000000</span>   <span class="number">3.183737617856438</span>   <span class="number">4.872876197537634</span></span><br><span class="line">   <span class="number">7.899999999999999</span>   <span class="number">3.354931542338962</span>   <span class="number">4.665631767112639</span></span><br><span class="line">   <span class="number">8.000000000000000</span>   <span class="number">3.542377769952171</span>   <span class="number">4.468790794779848</span></span><br><span class="line">   <span class="number">8.100000000000000</span>   <span class="number">3.747750865739365</span>   <span class="number">4.281929919898753</span></span><br><span class="line">   <span class="number">8.199999999999999</span>   <span class="number">3.972287358592226</span>   <span class="number">4.104642734922401</span></span><br><span class="line">   <span class="number">8.300000000000001</span>   <span class="number">4.217388158593900</span>   <span class="number">3.936541934626040</span></span><br><span class="line">   <span class="number">8.399999999999999</span>   <span class="number">4.484692559397574</span>   <span class="number">3.777260394101559</span></span><br><span class="line">   <span class="number">8.500000000000000</span>   <span class="number">4.776078238226527</span>   <span class="number">3.626451168757456</span></span><br><span class="line">   <span class="number">8.600000000000000</span>   <span class="number">5.093661255874061</span>   <span class="number">3.483787494318877</span></span><br><span class="line">   <span class="number">8.699999999999999</span>   <span class="number">5.439796056703555</span>   <span class="number">3.348962786827587</span></span><br><span class="line">   <span class="number">8.800000000000001</span>   <span class="number">5.817075468648450</span>   <span class="number">3.221690642641979</span></span><br><span class="line">   <span class="number">8.899999999999999</span>   <span class="number">6.228330703212222</span>   <span class="number">3.101704838437082</span></span><br><span class="line">   <span class="number">9.000000000000000</span>   <span class="number">6.676631355468448</span>   <span class="number">2.988759331204541</span></span><br><span class="line">   <span class="number">9.100000000000000</span>   <span class="number">7.165285404060722</span>   <span class="number">2.882628258252642</span></span><br><span class="line">   <span class="number">9.199999999999999</span>   <span class="number">7.697839211202703</span>   <span class="number">2.783105937206295</span></span><br><span class="line">   <span class="number">9.300000000000001</span>   <span class="number">8.278077522678160</span>   <span class="number">2.690006866007034</span></span><br><span class="line">   <span class="number">9.399999999999999</span>   <span class="number">8.910023467840816</span>   <span class="number">2.603165722913034</span></span><br><span class="line">   <span class="number">9.500000000000000</span>   <span class="number">9.597978929632328</span>   <span class="number">2.522479626174848</span></span><br><span class="line">   <span class="number">9.600000000000000</span>  <span class="number">10.346846934533836</span>   <span class="number">2.447948500050266</span></span><br><span class="line">   <span class="number">9.699999999999999</span>  <span class="number">11.162039893459859</span>   <span class="number">2.379385045866726</span></span><br><span class="line">   <span class="number">9.800000000000001</span>  <span class="number">12.049420139992524</span>   <span class="number">2.316643469274441</span></span><br><span class="line">   <span class="number">9.899999999999999</span>  <span class="number">13.015307238019034</span>   <span class="number">2.259644421438928</span></span><br><span class="line">  <span class="number">10.000000000000000</span>  <span class="number">14.066477981731850</span>   <span class="number">2.208374999040992</span></span><br><span class="line">  <span class="number">10.100000000000000</span>  <span class="number">15.210166395628448</span>   <span class="number">2.162888744276744</span></span><br><span class="line">  <span class="number">10.199999999999999</span>  <span class="number">16.454063734511507</span>   <span class="number">2.123305644857589</span></span><br><span class="line">  <span class="number">10.300000000000001</span>  <span class="number">17.806318483488852</span>   <span class="number">2.089812134010228</span></span><br><span class="line">  <span class="number">10.399999999999999</span>  <span class="number">19.275536357973380</span>   <span class="number">2.062661090476664</span></span><br><span class="line">  <span class="number">10.500000000000000</span>  <span class="number">20.870780303683247</span>   <span class="number">2.042171838514192</span></span><br><span class="line">  <span class="number">10.600000000000000</span>  <span class="number">22.601570496641628</span>   <span class="number">2.028730147895408</span></span><br><span class="line">  <span class="number">10.699999999999999</span>  <span class="number">24.477884343176854</span>   <span class="number">2.022788233908206</span></span><br><span class="line">  <span class="number">10.800000000000001</span>  <span class="number">26.510156479922557</span>   <span class="number">2.024864757355776</span></span><br><span class="line">  <span class="number">10.899999999999999</span>  <span class="number">28.709278773817164</span>   <span class="number">2.035544824556605</span></span><br><span class="line">  <span class="number">11.000000000000000</span>  <span class="number">31.084367983721659</span>   <span class="number">2.055829025420224</span></span><br><span class="line">  <span class="number">11.100000000000000</span>  <span class="number">33.641600133885817</span>   <span class="number">2.087482853795129</span></span><br><span class="line">  <span class="number">11.199999999999999</span>  <span class="number">36.398209815499314</span>   <span class="number">2.130849364961110</span></span><br><span class="line">  <span class="number">11.300000000000001</span>  <span class="number">39.367967703938106</span>   <span class="number">2.186873814289113</span></span><br><span class="line">  <span class="number">11.400000000000000</span>  <span class="number">42.559757627422172</span>   <span class="number">2.257313701026955</span></span><br><span class="line">  <span class="number">11.500000000000000</span>  <span class="number">45.977576567015859</span>   <span class="number">2.344738768299329</span></span><br><span class="line">  <span class="number">11.600000000000000</span>  <span class="number">49.620534656627697</span>   <span class="number">2.452531003107799</span></span><br><span class="line">  <span class="number">11.699999999999999</span>  <span class="number">53.482855183010443</span>   <span class="number">2.584884636330803</span></span><br><span class="line">  <span class="number">11.800000000000001</span>  <span class="number">57.553874585761008</span>   <span class="number">2.746806142723651</span></span><br><span class="line">  <span class="number">11.900000000000000</span>  <span class="number">61.818042457320516</span>   <span class="number">2.944114240918524</span></span><br><span class="line">  <span class="number">12.000000000000000</span>  <span class="number">66.254921542974230</span>   <span class="number">3.183439893424474</span></span><br><span class="line">  <span class="number">12.100000000000000</span>  <span class="number">70.842835987138443</span>   <span class="number">3.469191596026587</span></span><br><span class="line">  <span class="number">12.199999999999999</span>  <span class="number">75.522162277682469</span>   <span class="number">3.812925452239469</span></span><br><span class="line">  <span class="number">12.300000000000001</span>  <span class="number">80.190042341363892</span>   <span class="number">4.234758224058336</span></span><br><span class="line">  <span class="number">12.400000000000000</span>  <span class="number">84.721311371072218</span>   <span class="number">4.754536876029922</span></span><br><span class="line">  <span class="number">12.500000000000000</span>  <span class="number">88.968565157515215</span>   <span class="number">5.391807215404708</span></span><br><span class="line">  <span class="number">12.600000000000000</span>  <span class="number">92.762160089218654</span>   <span class="number">6.165813892136889</span></span><br><span class="line">  <span class="number">12.699999999999999</span>  <span class="number">95.910213152526353</span>   <span class="number">7.095500398884376</span></span><br><span class="line">  <span class="number">12.800000000000001</span>  <span class="number">98.198601931600223</span>   <span class="number">8.199509071008816</span></span><br><span class="line">  <span class="number">12.900000000000000</span>  <span class="number">99.390964608420120</span>   <span class="number">9.496181086575533</span></span><br><span class="line">  <span class="number">13.000000000000000</span>  <span class="number">99.228699962784120</span>  <span class="number">11.003556466353615</span></span><br><span class="line">  <span class="number">13.100000000000000</span>  <span class="number">97.436046146590030</span>  <span class="number">12.738369650117397</span></span><br><span class="line">  <span class="number">13.199999999999999</span>  <span class="number">93.897248393422203</span>  <span class="number">14.679124234884609</span></span><br><span class="line">  <span class="number">13.300000000000001</span>  <span class="number">88.688453695875353</span>  <span class="number">16.763830256803850</span></span><br><span class="line">  <span class="number">13.400000000000000</span>  <span class="number">82.012934272797054</span>  <span class="number">18.915104969188761</span></span><br><span class="line">  <span class="number">13.500000000000000</span>  <span class="number">74.220377956306322</span>  <span class="number">21.037723489086446</span></span><br><span class="line">  <span class="number">13.600000000000000</span>  <span class="number">65.797111775025812</span>  <span class="number">23.020131785390436</span></span><br><span class="line">  <span class="number">13.699999999999999</span>  <span class="number">57.253976641417438</span>  <span class="number">24.761724756250914</span></span><br><span class="line">  <span class="number">13.800000000000001</span>  <span class="number">49.023767724601868</span>  <span class="number">26.194780217083739</span></span><br><span class="line">  <span class="number">13.900000000000000</span>  <span class="number">41.434244003664332</span>  <span class="number">27.279068723563903</span></span><br><span class="line">  <span class="number">14.000000000000000</span>  <span class="number">34.706174448093314</span>  <span class="number">28.001620983792861</span></span><br><span class="line">  <span class="number">14.100000000000000</span>  <span class="number">28.935101031065749</span>  <span class="number">28.380190468466417</span></span><br><span class="line">  <span class="number">14.199999999999999</span>  <span class="number">24.065998570034740</span>  <span class="number">28.461020682665570</span></span><br><span class="line">  <span class="number">14.300000000000001</span>  <span class="number">20.010527449455722</span>  <span class="number">28.291941938864412</span></span><br><span class="line">  <span class="number">14.400000000000000</span>  <span class="number">16.675929778091504</span>  <span class="number">27.918123986722730</span></span><br><span class="line">  <span class="number">14.500000000000000</span>  <span class="number">13.965024013772720</span>  <span class="number">27.382080322488665</span></span><br><span class="line">  <span class="number">14.600000000000000</span>  <span class="number">11.774235192175343</span>  <span class="number">26.723934672852753</span></span><br><span class="line">  <span class="number">14.699999999999999</span>   <span class="number">9.998177418711006</span>  <span class="number">25.978837203372350</span></span><br><span class="line">  <span class="number">14.800000000000001</span>   <span class="number">8.554008385420849</span>  <span class="number">25.173646553167053</span></span><br><span class="line">  <span class="number">14.900000000000000</span>   <span class="number">7.376179856212027</span>  <span class="number">24.330003419116061</span></span><br><span class="line">  <span class="number">15.000000000000000</span>   <span class="number">6.415769580325549</span>  <span class="number">23.464512074444599</span></span><br></pre></td></tr></table></figure><h2 id="火箭升空模型"><a href="#火箭升空模型" class="headerlink" title="火箭升空模型"></a>火箭升空模型</h2><p>火箭模型复现之后发现与课本数据有少许误差,我认为是 matlab 版本以及计算精度造成的差异<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Differential-Equations-17.png#align=left&display=inline&height=766&margin=%5Bobject%20Object%5D&originHeight=766&originWidth=850&size=0&status=done&style=none&width=850"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">ts1 = <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">60</span>;</span><br><span class="line">ts2 = <span class="number">60</span>:<span class="number">0.1</span>:<span class="number">71.5</span>;</span><br><span class="line">[t1,x1] = ode45(@(t,y)huojian1(t,y),ts1,[<span class="number">0</span>,<span class="number">0</span>]);<span class="comment">%第一阶段</span></span><br><span class="line">[t2,x2] = ode45(@(t,y)huojian2(t,y),ts2,[x1(<span class="built_in">length</span>(x1),<span class="number">1</span>),x1(<span class="built_in">length</span>(x1),<span class="number">2</span>)]);<span class="comment">%第二阶段</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(t1,x1(:,<span class="number">1</span>),t2,x2(:,<span class="number">1</span>));<span class="comment">%速度图</span></span><br><span class="line"><span class="comment">%[t2,x2] = ode45(@huojian2,t2,[0 0]);</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"><span class="comment">%画高度图</span></span><br><span class="line"><span class="built_in">plot</span>(t1,x1(:,<span class="number">2</span>),t2,x2(:,<span class="number">2</span>));</span><br><span class="line"><span class="comment">%画加速度图</span></span><br><span class="line">a1 =diff(x1(:,<span class="number">1</span>));</span><br><span class="line">s1 = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">60</span>,<span class="number">600</span>)&#x27;;<span class="comment">%由于前向差分的缘故数据点与横坐标差了1,因此做一个数据拟合</span></span><br><span class="line">s2 = <span class="built_in">linspace</span>(<span class="number">60</span>,<span class="number">71.5</span>,<span class="number">115</span>)&#x27;;</span><br><span class="line">a11 = spline(s1,a1,t1);</span><br><span class="line">a2 = diff(x2(:,<span class="number">1</span>));</span><br><span class="line">a22 = spline(s2,a2,t2);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">plot</span>(t1,a11,t2,a22);grid on;</span><br><span class="line">两阶段微分方程组</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dx</span> = <span class="title">huojian1</span><span class="params">(t,x)</span></span></span><br><span class="line"><span class="comment">%阶段一</span></span><br><span class="line">M = <span class="number">1400</span>;m = <span class="number">18</span>;F = <span class="number">32000</span>;k = <span class="number">0.4</span>;g = <span class="number">9.8</span>;</span><br><span class="line">dx = [(F-k*x(<span class="number">1</span>,<span class="number">1</span>)*x(<span class="number">1</span>,<span class="number">1</span>))/(M-m*t)-g;x(<span class="number">1</span>,<span class="number">1</span>)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dx</span> =<span class="title">huojian2</span><span class="params">(t,x)</span></span></span><br><span class="line"><span class="comment">%阶段二</span></span><br><span class="line">k = <span class="number">0.4</span>;g = <span class="number">9.8</span>;M0=<span class="number">320</span>;</span><br><span class="line">dx = [(-k*x(<span class="number">1</span>)*x(<span class="number">1</span>))/M0-g;x(<span class="number">1</span>)];</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_29831163/article/details/89702947">相关 Blog</a><br>参考网址:<a href="https://blog.csdn.net/qq_29831163/article/details/89703911">https://blog.csdn.net/qq_29831163/article/details/89703911</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;非刚性常微分方程&quot;&gt;&lt;a href=&quot;#非刚性常微分方程&quot; class=&quot;headerlink&quot; title=&quot;非刚性常微分方程&quot;&gt;&lt;/a&gt;非刚性常微分方程&lt;/h1&gt;&lt;p&gt;形如类的方程,反求出 y 的值,并最终画出原函数图像&lt;</summary>
      
    
    
    
    <category term="数学建模" scheme="https://www.blog.hackerjerry.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="微分方程" scheme="https://www.blog.hackerjerry.top/tags/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Solving-Nonlinear-equations-and-equations</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/10/Solving-Nonlinear-equations-and-equations_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/10/Solving-Nonlinear-equations-and-equations_new/</id>
    <published>2020-09-10T09:01:53.000Z</published>
    <updated>2020-11-28T13:40:02.614Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="解非线性方程和方程组"><a href="#解非线性方程和方程组" class="headerlink" title="解非线性方程和方程组"></a>解非线性方程和方程组</h1><h2 id="fzero-命令解三次方程"><a href="#fzero-命令解三次方程" class="headerlink" title="fzero 命令解三次方程"></a>fzero 命令解三次方程</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>语法<code>x = fzero(fun,x0)</code>, starts at x0 and tries to solve the equations fun(x) = 0(尝试求出 fun(x) = 0 的点 x。此解是 fun(x) 变号的位置 ) - fzero 无法求函数（例如 x^2）的根。<br><code>x = fzero(fun,x0,options)</code>使用 options 修改求解过程。</p><blockquote><p>例如 options = optimset(‘PlotFcns’,{@optimplotx,@optimplotfval});<br>Display 显示级别：</p><ul><li>‘off’ 不显示输出。</li></ul></blockquote><blockquote><ul><li>‘iter’ 在每次迭代时显示输出。</li></ul></blockquote><blockquote><ul><li>‘final’ 仅显示最终输出。</li></ul></blockquote><blockquote><ul><li>‘notify’（默认值）仅在函数未收敛时显示输出。</li></ul></blockquote><p><code>x = fzero(problem)</code>对 problem 指定的求根问题求解。<br><code>[x,fval,exitflag,output] = fzero(___)</code>返回详细结构体<br>例如<code>fzero(inline(&#39;x^3-2*x-5&#39;),0)</code></p><h2 id="fsovle-函数"><a href="#fsovle-函数" class="headerlink" title="fsovle 函数"></a>fsovle 函数</h2><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><p><code>x = fsolve(fun,x0)``x = fsolve(fun,x0,options)``x = fsolve(problem)``[x,fval] = fsolve(___)``[x,fval,exitflag,output] = fsolve(___)``[x,fval,exitflag,output,jacobian] = fsolve(___)</code><br>大同小异</p><h3 id="一个简单的例子"><a href="#一个简单的例子" class="headerlink" title="一个简单的例子"></a>一个简单的例子</h3><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Solving-Nonlinear-equations-and-equations-1.png#align=left&display=inline&height=675&margin=%5Bobject%20Object%5D&originHeight=675&originWidth=806&size=0&status=done&style=none&width=806"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;解非线性方程和方程组&quot;&gt;&lt;a href=&quot;#解非线性方程和方程组&quot; class=&quot;headerlink&quot; title=&quot;解非线性方程和方程组&quot;&gt;&lt;/a&gt;解非线性方程和方程组&lt;/h1&gt;&lt;h2 id=&quot;fzero-命令解三次方程&quot;</summary>
      
    
    
    
    <category term="数学建模" scheme="https://www.blog.hackerjerry.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="matlab" scheme="https://www.blog.hackerjerry.top/tags/matlab/"/>
    
    <category term="非线性方程" scheme="https://www.blog.hackerjerry.top/tags/%E9%9D%9E%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Integer-programming</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/10/Integer-programming_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/10/Integer-programming_new/</id>
    <published>2020-09-10T08:55:09.000Z</published>
    <updated>2020-11-28T13:40:34.066Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="整数规划"><a href="#整数规划" class="headerlink" title="整数规划"></a>整数规划</h1><h2 id="线性规划-LP-问题"><a href="#线性规划-LP-问题" class="headerlink" title="线性规划 LP 问题"></a>线性规划 LP 问题</h2><blockquote><p>各变量可以是小数来逼近最值</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">max 5*x1+8*x2;</span><br><span class="line">x1+x2&lt;6;</span><br><span class="line">5*x1+9*x2&lt;&#x3D;45;</span><br><span class="line">end</span><br><span class="line">输出</span><br><span class="line"> Objective value:             41.25000</span><br><span class="line"> X1        2.250000            0.000000</span><br><span class="line"> X2        3.750000            0.000000</span><br></pre></td></tr></table></figure><h2 id="整数规划-IP-松弛问题"><a href="#整数规划-IP-松弛问题" class="headerlink" title="整数规划 IP 松弛问题"></a>整数规划 IP 松弛问题</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">col&#x2F;1,2&#x2F;;</span><br><span class="line">hh(col):x;</span><br><span class="line">endsets</span><br><span class="line">MAX &#x3D; 5*x(1)+8*x(2);</span><br><span class="line">x(1)+x(2)&lt;6;</span><br><span class="line">5*x(1)+9*x(2)&lt;&#x3D;45;</span><br><span class="line">@for(col(j):@gin(x(j)));!这句话是限制变量为整数（gin）;</span><br><span class="line">END</span><br><span class="line">输出</span><br><span class="line">Objective value:                              40.00000</span><br><span class="line">Variable           Value        Reduced Cost</span><br><span class="line">X( 1)        0.000000           -5.000000</span><br><span class="line">X( 2)        5.000000           -8.000000</span><br></pre></td></tr></table></figure><h2 id="动态规划–最短路径"><a href="#动态规划–最短路径" class="headerlink" title="动态规划–最短路径"></a>动态规划–最短路径</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">citles&#x2F;1..9&#x2F;:L;</span><br><span class="line">roads(citles,citles)&#x2F;</span><br><span class="line">9,6,9,7,9,8</span><br><span class="line">6,4,6,5,7,4,7,5,8,4,8,5</span><br><span class="line">4,2,4,3,5,2,5,3</span><br><span class="line">2,1,3,1&#x2F;:D;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">D&#x3D;</span><br><span class="line">6 3 3</span><br><span class="line">6 5 8 6 7 4</span><br><span class="line">6 7 8 9</span><br><span class="line">5 6;</span><br><span class="line">enddata</span><br><span class="line">L(1)&#x3D;0;</span><br><span class="line">@for(citles(i)|i#GT#1:</span><br><span class="line">L(i) &#x3D; @min(roads(i,j):D(i,j)+L(j)));</span><br><span class="line">end</span><br><span class="line">输出</span><br><span class="line"> Variable           Value</span><br><span class="line">    L( 1)        0.000000</span><br><span class="line">    L( 2)        5.000000</span><br><span class="line">    L( 3)        6.000000</span><br><span class="line">    L( 4)        11.00000</span><br><span class="line">    L( 5)        13.00000</span><br><span class="line">    L( 6)        17.00000</span><br><span class="line">    L( 7)        19.00000</span><br><span class="line">    L( 8)        17.00000</span><br><span class="line">    L( 9)        20.00000</span><br><span class="line">D( 9, 6)        6.000000</span><br><span class="line">D( 9, 7)        3.000000</span><br><span class="line">D( 9, 8)        3.000000</span><br><span class="line">D( 6, 4)        6.000000</span><br><span class="line">D( 6, 5)        5.000000</span><br><span class="line">D( 7, 4)        8.000000</span><br><span class="line">D( 7, 5)        6.000000</span><br><span class="line">D( 8, 4)        7.000000</span><br><span class="line">D( 8, 5)        4.000000</span><br><span class="line">D( 4, 2)        6.000000</span><br><span class="line">D( 4, 3)        7.000000</span><br><span class="line">D( 5, 2)        8.000000</span><br><span class="line">D( 5, 3)        9.000000</span><br><span class="line">D( 2, 1)        5.000000</span><br><span class="line">D( 3, 1)        6.000000</span><br></pre></td></tr></table></figure><ol><li>所有函数均以@开头</li><li>citles 表示从 1~9 组成的集合，属性 L(i)表示最优行驶路线长</li><li>集合循环语句#GT#表示逻辑关系大于</li><li>L(i) = @min(roads(i,j):D(i,j)+L(j)))即为动态规划基本方程</li></ol><h2 id="选课模型–0-1-规划"><a href="#选课模型–0-1-规划" class="headerlink" title="选课模型–0-1 规划"></a>选课模型–0-1 规划</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">Shuliang&#x2F;1..18&#x2F;:m;</span><br><span class="line">Xuanke(Shuliang):x;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">m &#x3D; 5,5,4,4,3,3,3,2,3,3,3,2,2,2,2,1,1,1;</span><br><span class="line">enddata</span><br><span class="line">min&#x3D;@sum(Xuanke(i):x(i));</span><br><span class="line">@for(Xuanke(k):@bin(x(k)));</span><br><span class="line">@sum(Xuanke(i):m(i)*x(i))&gt;&#x3D;18;</span><br><span class="line">@sum(Xuanke(j)|j#ge#9#and#j#le#18:m(j)*x(j))&lt;&#x3D;@sum(Xuanke(i):m(i)*x(i))&#x2F;3;!j大于9小于18，i的范围为1~18</span><br><span class="line">@sum(Xuanke(j)|j#ge#9#and#j#le#18:m(j)*x(j))&gt;&#x3D;@sum(Xuanke(i):m(i)*x(i))&#x2F;6;</span><br><span class="line">x(1)&gt;&#x3D;x(5);</span><br><span class="line">x(2)&gt;&#x3D;x(7);</span><br><span class="line">x(8)&gt;&#x3D;x(9);</span><br><span class="line">x(6)&gt;&#x3D;x(10);</span><br><span class="line">x(4)&gt;&#x3D;x(11);</span><br><span class="line">x(5)&gt;&#x3D;x(12);</span><br><span class="line">x(7)&gt;&#x3D;x(13);</span><br><span class="line">x(6)&gt;&#x3D;x(14);</span><br><span class="line">end</span><br><span class="line">输出</span><br><span class="line">Objective value:                              5.000000</span><br><span class="line">X( 1)        1.000000            1.000000</span><br><span class="line">X( 2)        1.000000            1.000000</span><br><span class="line">X( 3)        0.000000            1.000000</span><br><span class="line">X( 4)        1.000000            1.000000</span><br><span class="line">X( 5)        0.000000            1.000000</span><br><span class="line">X( 6)        0.000000            1.000000</span><br><span class="line">X( 7)        0.000000            1.000000</span><br><span class="line">X( 8)        0.000000            1.000000</span><br><span class="line">X( 9)        0.000000            1.000000</span><br><span class="line">X( 10)        0.000000            1.000000</span><br><span class="line">X( 11)        1.000000            1.000000</span><br><span class="line">X( 12)        0.000000            1.000000</span><br><span class="line">X( 13)        0.000000            1.000000</span><br><span class="line">X( 14)        0.000000            1.000000</span><br><span class="line">X( 15)        1.000000            1.000000</span><br><span class="line">X( 16)        0.000000            1.000000</span><br><span class="line">X( 17)        0.000000            1.000000</span><br><span class="line">X( 18)        0.000000            1.000000</span><br></pre></td></tr></table></figure><p>由此得出选课方案，一共选 5 门，为 x 矩阵中为 1 的变量。<br>这里发现了 Lingo 的一个非常棒的检查代码的功能！<img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2020/png/1629942/1599728163727-676d1a88-4879-4aef-aa34-4c66cf99f470.png#align=left&display=inline&height=523&margin=%5Bobject%20Object%5D&originHeight=523&originWidth=1014&size=0&status=done&style=none&width=1014">就是模型编译！它可以直接把代码翻译成数学公式，如图<img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2020/png/1629942/1599728164253-96254c1f-96d1-44bc-a9c1-919c9ef00301.png#align=left&display=inline&height=636&margin=%5Bobject%20Object%5D&originHeight=636&originWidth=795&size=0&status=done&style=none&width=795"> 简直神器！！这样就可以看看翻译成的式子是不是自己想要的从而检查代码哪里写错了！点赞 👍</p><h2 id="连续规划-–石油购买"><a href="#连续规划-–石油购买" class="headerlink" title="连续规划 –石油购买"></a>连续规划 –石油购买</h2><p>这里遇到一种新情况，即分段规划，比如：当购买量不超过 500 吨时，单价 10000 元；当购买量超过 500 吨但不超过 1000 吨，超过的部分 8000 元，当超过 1000 吨但不超过 1500 吨，超过的部分 6000 元。<br>这里有多种方法可以实现。<br><strong>第一种–巧用 if 语句</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">buy&#x2F;1,2,3&#x2F;:r;</span><br><span class="line">nums&#x2F;1,2&#x2F;;</span><br><span class="line">goods(nums):x;</span><br><span class="line">endsets</span><br><span class="line">max &#x3D; 4800*x(1)+5600*x(2)-10000*r(1)-8000*r(2)-6000*r(3);</span><br><span class="line">0.5*x(1)+0.6*x(2)&lt;&#x3D;500+r(1)+r(2)+r(3);</span><br><span class="line">0.5*x(1)+0.4*x(2)&lt;&#x3D;1000;</span><br><span class="line">r(1)&lt;&#x3D;500;</span><br><span class="line">r(3)&lt;&#x3D;500;</span><br><span class="line">r(2)&lt;&#x3D;500;</span><br><span class="line">r(2)&#x3D;@if(r(1)#lt#500,0,r(2));!由于@if语句第一个是判断条件，第二个是为真时的值，第三个是为假的值，而这里必须是个数而不能表示成&lt;&#x3D;500，因此让它等于自身;</span><br><span class="line">r(3)&#x3D;@if(r(2)#lt#500,0,r(3));</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><strong>第二种–引入 0-1 变量，转换成线性约束</strong><br>这里约定，为第一阶段购买原油吨，为第二阶段，为第三阶段,表示是否购买.<br>核心代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x1-500*y1&lt;&#x3D;0;</span><br><span class="line">x2-500*y2&lt;&#x3D;0;</span><br><span class="line">x3-500*y3&lt;&#x3D;0;</span><br><span class="line">x1-500*y2&gt;&#x3D;0;</span><br><span class="line">x2-500*y3&gt;&#x3D;0;</span><br><span class="line">@bin(y1);</span><br><span class="line">@bin(y3);</span><br><span class="line">@bin(y2);</span><br><span class="line">得到方案</span><br><span class="line">Variable           Value        Reduced Cost</span><br><span class="line">R( 1)        500.0000            0.000000</span><br><span class="line">R( 2)        500.0000            0.000000</span><br><span class="line">R( 3)        0.000000            6000.000</span><br><span class="line">X( 1)        0.000000            2200.000</span><br><span class="line">X( 2)        2500.000            0.000000</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;整数规划&quot;&gt;&lt;a href=&quot;#整数规划&quot; class=&quot;headerlink&quot; title=&quot;整数规划&quot;&gt;&lt;/a&gt;整数规划&lt;/h1&gt;&lt;h2 id=&quot;线性规划-LP-问题&quot;&gt;&lt;a href=&quot;#线性规划-LP-问题&quot; clas</summary>
      
    
    
    
    <category term="数学建模" scheme="https://www.blog.hackerjerry.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="lingo" scheme="https://www.blog.hackerjerry.top/tags/lingo/"/>
    
    <category term="整数规划" scheme="https://www.blog.hackerjerry.top/tags/%E6%95%B4%E6%95%B0%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Constraint-Optimization</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/10/Constraint-Optimization_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/10/Constraint-Optimization_new/</id>
    <published>2020-09-10T08:51:09.000Z</published>
    <updated>2020-11-28T13:40:41.330Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="约束优化"><a href="#约束优化" class="headerlink" title="约束优化"></a>约束优化</h1><p>matlab 有几种命令可以求解</p><ul><li><p><code>linprog</code>求一次线性规划</p></li><li><p><code>quadprog</code>求二次规划问题</p></li></ul><blockquote><p>书上的方法是将二次规划问题改写成极小化标准形式，获得二次型黑塞矩阵（我没看懂），留一个坑<br>黑塞矩阵：是一个多元函数的二阶偏导数构成的方阵，描述了函数的局部曲率。</p></blockquote><p>一些概念重温<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Constraint-Optimization-1.png#align=left&display=inline&height=240&margin=%5Bobject%20Object%5D&originHeight=240&originWidth=553&size=0&status=done&style=none&width=553"><br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Constraint-Optimization-2.png#align=left&display=inline&height=705&margin=%5Bobject%20Object%5D&originHeight=705&originWidth=930&size=0&status=done&style=none&width=930"><br>黑塞矩阵说白了应该就是对每个变量分别求两次偏导得到的对称正定矩阵。<br><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Constraint-Optimization-3.png#align=left&display=inline&height=336&margin=%5Bobject%20Object%5D&originHeight=336&originWidth=734&size=0&status=done&style=none&width=734"></p><h2 id="linprog语法"><a href="#linprog语法" class="headerlink" title="linprog语法"></a><code>linprog</code>语法</h2><p><code>x = linprog(f,A,b)``x = linprog(f,A,b,Aeq,beq)``x = linprog(f,A,b,Aeq,beq,lb,ub)``x = linprog(f,A,b,Aeq,beq,lb,ub,options)``x = linprog(problem)``[x,fval] = linprog(___)``[x,fval,exitflag,output] = linprog(___)``[x,fval,exitflag,output,lambda] = linprog(___)</code></p><h3 id="详细描述"><a href="#详细描述" class="headerlink" title="详细描述"></a>详细描述</h3><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Constraint-Optimization-4.png#align=left&display=inline&height=220&margin=%5Bobject%20Object%5D&originHeight=220&originWidth=527&size=0&status=done&style=none&width=527"></p><h3 id="生产销售规划"><a href="#生产销售规划" class="headerlink" title="生产销售规划"></a>生产销售规划</h3><p>%可以直接把系数及约束条件都直接用矩阵表示而不是再写一个函数<br>c = [12 8 22-1.5/0.8 16-1.5/0.75];<br>A = [1/3 1/4 1/2.4 1/3;4 2 6/0.8 16/3;1 0 1/0.8 0];<br>b = [50;480;100];<br>v1 = [0,0,0,0];<br>[x,fval] = linprog(-c,A,b,[],[],v1);<br>对应的式子就不写了…不过在设变量的时候尽量设多一点，否则有些量之间存在因果关系的在约束的时候有可能考虑不周。<br>灵敏度分析，则 LINGO 还会输出以下结果：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">RANGES IN WHICH THE BASIS IS UNCHANGED:</span><br><span class="line"></span><br><span class="line"> OBJCOEFFICIENTRANGES  VARIABLE      CURRENT                ALLOWABLE          ALLOWABLE</span><br><span class="line"></span><br><span class="line">                     COEF           INCREASE         DECREASE</span><br><span class="line"></span><br><span class="line">       X1           <span class="number">72.000000</span>         <span class="number">24.000000</span>            <span class="number">8.000000</span></span><br><span class="line"></span><br><span class="line">       X2           <span class="number">64.000000</span>          <span class="number">8.000000</span>           <span class="number">16.000000</span></span><br><span class="line"></span><br><span class="line">                           RIGHTHANDSIDERANGES</span><br><span class="line"></span><br><span class="line">      ROW        CURRENT        ALLOWABLE       ALLOWABLE</span><br><span class="line"></span><br><span class="line">                     RHS            INCREASE         DECREASE</span><br><span class="line"></span><br><span class="line">        <span class="number">2</span>            <span class="number">50.000000</span>         <span class="number">10.000000</span>          <span class="number">6.666667</span></span><br><span class="line"></span><br><span class="line">        <span class="number">3</span>          <span class="number">480.000000</span>         <span class="number">53.333332</span>          <span class="number">80.000000</span></span><br><span class="line"></span><br><span class="line">        <span class="number">4</span>          <span class="number">100.000000</span>         INFINITY          <span class="number">40.000000</span></span><br></pre></td></tr></table></figure><p>以上显示的是当前最优基（矩阵）保持不变的充分条件（RANGES IN WHICH THE BASIS IS UNCHANGED），包括目标函数中决策变量应的系数的变化范围（OBJ COEFFICIENT RANGES）和约束的右端项的变化范围（RIGHTHAND SIDE RANGES）两部分。<br>前一部分的输出行<br><code>X1 72.000000 24.000000 8.000000</code><br>表示决策变量 X1 当前在目标函数中对应的系数为 72，允许增加 24 和减少 8。也就是说，当该系数在区间[64，96]上变化时（假设其它条件均不变），当前最优基矩阵保持不变。对 X2 对应的输出行也可以类似地解释。由于此时约束没有任何改变，所以最优基矩阵保持不变意味着最优解不变（当然，由于目标函数中的系数发生变化，最优值还是会变的）。<br>后一部分的输出行<br><code>X2 50.000000 10.000000 6.666667</code><br>表示约束 2 当前右端项为 50，允许增加 10 和减少 6.666667。也就是说，当该系数在区间[43.333333，60]上变化时（假设其它条件均不变），当前最优基矩阵保持不变。对约束 3、约束 4 对应的输出行也可以类似地解释。由于此时约束已经改变，虽然最优基矩阵保持不变，最优解和最优值还是会变的。但是，由于最优基矩阵保持不变，所以前面的“DUAL PRICES”给出的约束的影子价格此时仍然是有效的。<br>题目的后几问是更细致的投资问题，答案使用了 Lagrange 乘子，这里我并不了解，先挖一个坑</p><h2 id="quadprog语法"><a href="#quadprog语法" class="headerlink" title="quadprog语法"></a><code>quadprog</code>语法</h2><p><code>x = quadprog(H,f)``x = quadprog(H,f,A,b)``x = quadprog(H,f,A,b,Aeq,beq)``x = quadprog(H,f,A,b,Aeq,beq,lb,ub)``x = quadprog(H,f,A,b,Aeq,beq,lb,ub,x0)</code></p><ul><li><p>H 是目标函数 Hesse 矩阵</p></li><li><p>f 是目标函数线性项系数列向量 <strong>（线性项即单变量一次项）</strong></p></li><li><p>A 是不等式约束系数矩阵（不等式都要化成<strong>左边 x 项常数</strong>）</p></li><li><p>b 是不等式约束列向量</p></li><li><p>Aeq 是等式约束系数矩阵，如</p></li><li><p>beq 是等式约束列向量</p></li><li><p>lb 是 Lower bounds, specified as a real vector or real array. If the number of elements in x0 is equal to the number of elements in lb, then lb specifies that for all i.<strong>即下界列向量</strong></p></li><li><p>ub 是<strong>上界列向量</strong></p></li></ul><p><code>x = quadprog(H,f,A,b,Aeq,beq,lb,ub,x0,options)``x = quadprog(problem)``[x,fval] = quadprog(___)``[x,fval,exitflag,output] = quadprog(___)``[x,fval,exitflag,output,lambda] = quadprog(___)</code></p><h2 id="实战–水库供水–Lingo-初探"><a href="#实战–水库供水–Lingo-初探" class="headerlink" title="实战–水库供水–Lingo 初探"></a>实战–水库供水–Lingo 初探</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">title TRanWater;</span><br><span class="line">sets:</span><br><span class="line">demand/<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>/:a,d;!四个小区，其实意味着a,d的范围是从<span class="number">1</span>到<span class="number">4</span></span><br><span class="line">supply/<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>/:b;!三个供应站</span><br><span class="line">link(supply,demand):c,x;!这个意味着c和x是二维数组，即c(<span class="built_in">i</span>,<span class="built_in">j</span>)和x(<span class="built_in">i</span>,<span class="built_in">j</span>),其中<span class="built_in">i</span>是supply的范围<span class="number">1</span>~<span class="number">3</span>，<span class="built_in">j</span>是demand范围<span class="number">1</span>~<span class="number">4</span></span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">!demand;</span><br><span class="line">a = <span class="number">30</span>,<span class="number">70</span>,<span class="number">10</span>,<span class="number">10</span>;!基本用水;</span><br><span class="line">d = <span class="number">80</span>,<span class="number">140</span>,<span class="number">30</span>,<span class="number">50</span>;!最多用水;</span><br><span class="line">!supply;</span><br><span class="line">b = <span class="number">100</span>,<span class="number">120</span>,<span class="number">100</span>;<span class="comment">%供应能力</span></span><br><span class="line">c = <span class="number">160</span>,<span class="number">130</span>,<span class="number">220</span>,<span class="number">170</span></span><br><span class="line">     <span class="number">140</span>,<span class="number">130</span>,<span class="number">190</span>,<span class="number">150</span></span><br><span class="line">     <span class="number">190</span>,<span class="number">200</span>,<span class="number">230</span>,<span class="number">100000</span>;!管理费;</span><br><span class="line">enddata</span><br><span class="line">[obj]<span class="built_in">max</span> = @sum(link(<span class="built_in">i</span>,<span class="built_in">j</span>):<span class="number">450</span>*x(<span class="built_in">i</span>,<span class="built_in">j</span>)-c(<span class="built_in">i</span>,<span class="built_in">j</span>)*x(<span class="built_in">i</span>,<span class="built_in">j</span>));!没搞懂这句话！！！！！;</span><br><span class="line">@FOR(demand(<span class="built_in">j</span>):[DEMAND_CONmin]@sum(supply(<span class="built_in">i</span>):x(<span class="built_in">i</span>,<span class="built_in">j</span>))&gt;=a(<span class="built_in">j</span>););!约束条件一</span><br><span class="line">@FOR(demand(<span class="built_in">j</span>):[DEMAND_CONmax]@sum(supply(<span class="built_in">i</span>):x(<span class="built_in">i</span>,<span class="built_in">j</span>))&lt;=d(<span class="built_in">j</span>););</span><br><span class="line">@FOR(supply(<span class="built_in">i</span>):[SUPPLY_CON]@sum(demand(<span class="built_in">j</span>):x(<span class="built_in">i</span>,<span class="built_in">j</span>))&lt;=b(<span class="built_in">i</span>););</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">输出</span><br><span class="line">Global optimal solution found.</span><br><span class="line">Objective value:                              <span class="number">88700.00</span></span><br><span class="line">X( <span class="number">1</span>, <span class="number">1</span>)        <span class="number">0.000000</span>            <span class="number">20.00000</span></span><br><span class="line">X( <span class="number">1</span>, <span class="number">2</span>)        <span class="number">100.0000</span>            <span class="number">0.000000</span></span><br><span class="line">X( <span class="number">1</span>, <span class="number">3</span>)        <span class="number">0.000000</span>            <span class="number">40.00000</span></span><br><span class="line">X( <span class="number">1</span>, <span class="number">4</span>)        <span class="number">0.000000</span>            <span class="number">20.00000</span></span><br><span class="line">X( <span class="number">2</span>, <span class="number">1</span>)        <span class="number">30.00000</span>            <span class="number">0.000000</span></span><br><span class="line">X( <span class="number">2</span>, <span class="number">2</span>)        <span class="number">40.00000</span>            <span class="number">0.000000</span></span><br><span class="line">X( <span class="number">2</span>, <span class="number">3</span>)        <span class="number">0.000000</span>            <span class="number">10.00000</span></span><br><span class="line">X( <span class="number">2</span>, <span class="number">4</span>)        <span class="number">50.00000</span>            <span class="number">0.000000</span></span><br><span class="line">X( <span class="number">3</span>, <span class="number">1</span>)        <span class="number">50.00000</span>            <span class="number">0.000000</span></span><br><span class="line">X( <span class="number">3</span>, <span class="number">2</span>)        <span class="number">0.000000</span>            <span class="number">20.00000</span></span><br><span class="line">X( <span class="number">3</span>, <span class="number">3</span>)        <span class="number">30.00000</span>            <span class="number">0.000000</span></span><br><span class="line">X( <span class="number">3</span>, <span class="number">4</span>)        <span class="number">0.000000</span>            <span class="number">99800.004444</span></span><br></pre></td></tr></table></figure><h2 id="实战-2–圈地模型"><a href="#实战-2–圈地模型" class="headerlink" title="实战 2–圈地模型"></a>实战 2–圈地模型</h2><p>果然 lingo 求解多变量线性规划简单。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">Max = <span class="number">0.09</span>*(L1*L2+L3*L4);</span><br><span class="line"><span class="number">0.09</span>*L1*L2&gt;=<span class="number">1000</span>;</span><br><span class="line"><span class="number">0.09</span>*L3*L4&gt;=<span class="number">1000</span>;</span><br><span class="line">h1&gt;=<span class="number">20</span>;</span><br><span class="line">h2&gt;=<span class="number">20</span>;</span><br><span class="line"><span class="number">2</span>*(h1*L1+h1*L2+h2*L3+h2*L4)&lt;=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">完全直译即可。输出</span><br><span class="line">Variable           Value        Reduced Cost</span><br><span class="line">L1        <span class="number">1144.591</span>            <span class="number">0.000000</span></span><br><span class="line">L2        <span class="number">1144.591</span>            <span class="number">0.000000</span></span><br><span class="line">L3        <span class="number">105.4093</span>            <span class="number">0.000000</span></span><br><span class="line">L4        <span class="number">105.4093</span>            <span class="number">0.000000</span></span><br><span class="line">H1        <span class="number">20.00000</span>            <span class="number">0.000000</span></span><br><span class="line">H2        <span class="number">20.00000</span>            <span class="number">0.000000</span></span><br><span class="line"></span><br><span class="line">Row    Slack or Surplus      Dual Price</span><br><span class="line"><span class="number">1</span>        <span class="number">118907.9</span>            <span class="number">1.000000</span></span><br><span class="line"><span class="number">2</span>        <span class="number">116907.9</span>            <span class="number">0.000000</span></span><br><span class="line"><span class="number">3</span>        <span class="number">0.000000</span>           <span class="number">-9.858541</span></span><br><span class="line"><span class="number">4</span>        <span class="number">0.000000</span>           <span class="number">-11790.79</span></span><br><span class="line"><span class="number">5</span>        <span class="number">0.000000</span>           <span class="number">-1085.854</span></span><br><span class="line"><span class="number">6</span>        <span class="number">0.000000</span>            <span class="number">2.575329</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;约束优化&quot;&gt;&lt;a href=&quot;#约束优化&quot; class=&quot;headerlink&quot; title=&quot;约束优化&quot;&gt;&lt;/a&gt;约束优化&lt;/h1&gt;&lt;p&gt;matlab 有几种命令可以求解&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;linp</summary>
      
    
    
    
    <category term="数学建模" scheme="https://www.blog.hackerjerry.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="约束优化" scheme="https://www.blog.hackerjerry.top/tags/%E7%BA%A6%E6%9D%9F%E4%BC%98%E5%8C%96/"/>
    
    <category term="lingo" scheme="https://www.blog.hackerjerry.top/tags/lingo/"/>
    
  </entry>
  
  <entry>
    <title>Experience-in-Mathematical-Modeling</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/10/Experience-in-Mathematical-Modeling_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/10/Experience-in-Mathematical-Modeling_new/</id>
    <published>2020-09-10T08:49:00.000Z</published>
    <updated>2020-11-28T13:40:41.330Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="52f72c86c31c76c8e2d3180930d69a8f1bda25ac5a72905d321562d351aac231"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="数学建模" scheme="https://www.blog.hackerjerry.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数模经验" scheme="https://www.blog.hackerjerry.top/tags/%E6%95%B0%E6%A8%A1%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>FAQ-and-their-solutions</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/09/FAQ-and-their-solutions_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/09/FAQ-and-their-solutions_new/</id>
    <published>2020-09-09T06:52:59.000Z</published>
    <updated>2020-11-28T13:42:21.134Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="e4d6f8e3ec472cd7fb5abe4d94d1aedd640b68f0811eb03816c52f06c90f40c9"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="数学建模" scheme="https://www.blog.hackerjerry.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数模" scheme="https://www.blog.hackerjerry.top/tags/%E6%95%B0%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>Sklearn-Draws-in-authority-Examples</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/08/Sklearn-Draws-in-authority-Examples_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/08/Sklearn-Draws-in-authority-Examples_new/</id>
    <published>2020-09-08T12:45:25.000Z</published>
    <updated>2020-11-28T13:40:01.698Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="16c38c54a7f124320ad4993931a52bb132e2ab2c533e76cc47e73bf8529c13ab"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/categories/python/"/>
    
    
    <category term="sklearn" scheme="https://www.blog.hackerjerry.top/tags/sklearn/"/>
    
    <category term="绘图" scheme="https://www.blog.hackerjerry.top/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="评价指标" scheme="https://www.blog.hackerjerry.top/tags/%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/"/>
    
  </entry>
  
  <entry>
    <title>Beautiful-Powerful-Sentences</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/08/Beautiful-Powerful-Sentences_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/08/Beautiful-Powerful-Sentences_new/</id>
    <published>2020-09-08T09:49:37.000Z</published>
    <updated>2020-11-28T13:39:00.777Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>从现在起，我开始谨慎地选择我的生活，<br>我不再轻易让自己迷失在各种诱惑里。<br>我心中已经听到来自远方的呼唤，<br>再不需要回过头去关心身后的种种是非与议论。<br>我已无暇顾及过去，我要向前走。</p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>人最终决定着自己的命运。<br>在天赋和环境内，他成为什么是自己决定的结果。<br>人不是简单的活着，而是时时需求对自己的前途做出思考，<br>决定下一刻自己会成为什么样的人。<br>每个人都有随时改变自己决定的自由。</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>其实你今天经历的，并无特例，所有人都曾经历过。<br>今天的马云、李彦宏、俞敏洪都曾是和你一样的青年，<br>站在人生路口，困惑、孤独，但是充满梦想与希望。<br>不要让害怕本身阻碍了你前进的步伐，不要放大自己的弱点。</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>你不必非常出色，只要在很长，很长的时间内保持比别人聪明一点点就够了。<br>–芒格</p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>《乌合之众》中有一个观点：“群体不善于推理，却急于采取行动。”<br>前几天的西外喊楼事件，确实，校方做法让学生忍无可忍，但随即西安众多二本院校相继“暴乱”，引以为傲谓之“起义”，谬也，谬也。</p><h3 id="6"><a href="#6" class="headerlink" title="6"></a>6</h3><p><img src= "/img/loading.gif" data-lazy-src="https://image.hackerjerry.top/Beautiful-Powerful-Sentences-1.png#align=left&display=inline&height=544&margin=%5Bobject%20Object%5D&name=image.png&originHeight=680&originWidth=350&size=239725&status=done&style=none&width=280" alt="image.png"></p><h3 id="7"><a href="#7" class="headerlink" title="7"></a>7</h3><p>有一个原则你们一定要记住，因为兴趣和感情相聚的人，最好不要牵扯利益；因为利益相识的人，最好也不要谈感情。</p><h3 id="8"><a href="#8" class="headerlink" title="8"></a>8</h3><p>《琅琊榜》里萧景睿说过一句话：“我之所以这么待你，是因为我愿意。若能以此换回同样的诚心，固然可喜。若是没有，我也没有什么可后悔的。”<br>你觉得别人应该对你的善意抱有感动，大概是因为你的善意感动了自己，也希望它能感动别人。可是当它并不能感动到别人的时候，也不需要太难过，毕竟它还是感动着你自己。 善意的累积，必定会换到真心，就算不能，也一定会让你心里熨贴，交到知己。<br>–转自知乎</p><h3 id="9"><a href="#9" class="headerlink" title="9"></a>9</h3><p>你要知道什么是自己想要的，知道什么是不可逆转的，知道用什么方式实现梦想，知道用什么心情面对苦难。</p><p>人就在转瞬之间感悟，进退得失，不离不弃也就都有了答案。</p><p>我不知道命运会把我带向何方，<br>但是我一直会用善良维护左右。</p><h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><p>我愿探索不同的视角，<br>永远追逐善良，美好和爱</p><h3 id="11"><a href="#11" class="headerlink" title="11"></a>11</h3><p>生活虽然可能荆棘满地，但仍然不能阻止你一路高歌。</p><h3 id="12"><a href="#12" class="headerlink" title="12"></a>12</h3><p>愿你我一路繁花似锦，山水相拥，青山为伴。</p><h3 id="13"><a href="#13" class="headerlink" title="13"></a>13</h3><p>把酒祝东风，且共从容。</p><h3 id="14"><a href="#14" class="headerlink" title="14"></a>14</h3><p>纵身跃入岁月的长河，从中去寻找自己的意义。</p><h3 id="15"><a href="#15" class="headerlink" title="15"></a>15</h3><p>所有人都祝你快乐，我只愿你，遍历山河，觉得人间值得。</p><h3 id="16"><a href="#16" class="headerlink" title="16"></a>16</h3><p>月色微醺，比是比不过太阳。<br>不过，<br>只要照得亮前路。就耽误不了你的行程。</p><h3 id="17"><a href="#17" class="headerlink" title="17"></a>17</h3><p>春水碧于天，画船听雨眠。</p><h3 id="18"><a href="#18" class="headerlink" title="18"></a>18</h3><p>那些真正喜欢的人和事，都值得我们去坚持。</p><h3 id="19"><a href="#19" class="headerlink" title="19"></a>19</h3><p>今夕何夕，见此良人。</p><h3 id="20"><a href="#20" class="headerlink" title="20"></a>20</h3><p>即使是为了专门的目的读书，也要在读书时抛掉其他功利性的想法，沉浸于获得知识的愉悦中。因为结果我们无法决定，但是过程中获得的知识与体验是肯定的。</p><h3 id="21"><a href="#21" class="headerlink" title="21"></a>21</h3><p>在这条路上行走过的足迹，那些坚持梦想为梦想而呼吸的曾经，探索的光芒永远印刻在心里，变成一种理想温暖依旧永垂不朽。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h3 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h3&gt;&lt;p&gt;从现在起，我开始谨慎地选择我的生活，&lt;br&gt;我不再轻易让自己迷失在各种诱惑里。&lt;br&gt;我心中已经听到来自远方的</summary>
      
    
    
    
    <category term="文艺" scheme="https://www.blog.hackerjerry.top/categories/%E6%96%87%E8%89%BA/"/>
    
    
    <category term="文艺" scheme="https://www.blog.hackerjerry.top/tags/%E6%96%87%E8%89%BA/"/>
    
    <category term="句子" scheme="https://www.blog.hackerjerry.top/tags/%E5%8F%A5%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>Summary-of-common-python-operations-2</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/08/Summary-of-common-python-operations-2_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/08/Summary-of-common-python-operations-2_new/</id>
    <published>2020-09-08T07:04:17.000Z</published>
    <updated>2020-11-28T13:39:52.409Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="272a75a5ac34b4021b422560f4001a0fea3ae5d12de497da7391beeb3d7f6582"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="数学建模" scheme="https://www.blog.hackerjerry.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数模" scheme="https://www.blog.hackerjerry.top/tags/%E6%95%B0%E6%A8%A1/"/>
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/tags/python/"/>
    
    <category term="绘图" scheme="https://www.blog.hackerjerry.top/tags/%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>python-draw-map</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/06/python-draw-map_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/06/python-draw-map_new/</id>
    <published>2020-09-06T07:19:44.000Z</published>
    <updated>2020-11-28T13:39:52.409Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="相关示例"><a href="#相关示例" class="headerlink" title="相关示例"></a>相关示例</h1><p><a href="https://blog.csdn.net/weixin_43820992/article/details/86725737?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.channel_param&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.channel_param">地图代码</a><br><a href="https://www.analyticsvidhya.com/blog/2020/06/guide-geospatial-analysis-folium-python/">时间热力图</a><br>官方示例 <a href="https://nbviewer.jupyter.org/github/python-visualization/folium/blob/master/examples/Heatmap.ipynb">https://nbviewer.jupyter.org/github/python-visualization/folium/blob/master/examples/Heatmap.ipynb</a></p><h1 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h1><p><a href="http://datav.aliyun.com/tools/atlas/#%E2%AA%AB=31.80289258670676&lng=104.2822265625&zoom=4">http://datav.aliyun.com/tools/atlas/#⪫=31.80289258670676&amp;lng=104.2822265625&amp;zoom=4</a><br>直接下载</p>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;相关示例&quot;&gt;&lt;a href=&quot;#相关示例&quot; class=&quot;headerlink&quot; title=&quot;相关示例&quot;&gt;&lt;/a&gt;相关示例&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_43820</summary>
      
    
    
    
    <category term="绘图" scheme="https://www.blog.hackerjerry.top/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/tags/python/"/>
    
    <category term="地图" scheme="https://www.blog.hackerjerry.top/tags/%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms-of-codes-in-Mathematical-Modeling</title>
    <link href="https://www.blog.hackerjerry.top/2020/09/03/Algorithms-of-codes-in-Mathematical-Modeling_new/"/>
    <id>https://www.blog.hackerjerry.top/2020/09/03/Algorithms-of-codes-in-Mathematical-Modeling_new/</id>
    <published>2020-09-03T13:02:11.000Z</published>
    <updated>2020-11-28T13:41:48.874Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="8bd0775cdeda7d1266b7d644fd14edec8b7fbab1d35e70fdf2956cbcad0f6686"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="数学建模" scheme="https://www.blog.hackerjerry.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数模" scheme="https://www.blog.hackerjerry.top/tags/%E6%95%B0%E6%A8%A1/"/>
    
    <category term="python" scheme="https://www.blog.hackerjerry.top/tags/python/"/>
    
  </entry>
  
</feed>
