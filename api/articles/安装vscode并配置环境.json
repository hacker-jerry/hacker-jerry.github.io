{"title":"安装vscode并配置环境","slug":"安装vscode并配置环境","date":"2022-02-05T12:02:48.000Z","updated":"2022-02-07T09:07:48.309Z","comments":true,"path":"api/articles/安装vscode并配置环境.json","realPath":null,"excerpt":null,"covers":["https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062567837-7eabd8ef-0de2-48a2-bd86-51c453d4ec92.png#crop=0&crop=0&crop=1&crop=1&id=sXGWi&originHeight=732&originWidth=498&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=","https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568171-ad7d9ec1-3b43-4aaf-8f32-8d81736d8237.png#crop=0&crop=0&crop=1&crop=1&id=Xv4Dp&originHeight=828&originWidth=1648&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=","https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568360-b580675d-4637-4d64-ab60-6067751dd9dd.png#crop=0&crop=0&crop=1&crop=1&id=gMnzj&originHeight=596&originWidth=1014&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title="],"cover":"https://image.hackerjerry.top/uPic/KHGHer.jpg","content":"<h1 id=\"c-c\"><a href=\"#c-c\" class=\"headerlink\" title=\"c/c++\"></a>c/c++</h1><p>参考：</p>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35926606/article/details/116018953\">https://blog.csdn.net/qq_35926606/article/details/116018953</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45596100/article/details/121114828\">https://blog.csdn.net/qq_45596100/article/details/121114828</a></li>\n<li><a href=\"https://blog.csdn.net/IAMoldpan/article/details/119978907\">https://blog.csdn.net/IAMoldpan/article/details/119978907</a></li>\n</ul>\n<p>首先是下载几个插件。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062567837-7eabd8ef-0de2-48a2-bd86-51c453d4ec92.png#crop=0&crop=0&crop=1&crop=1&id=sXGWi&originHeight=732&originWidth=498&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>然后，codeLLDB 会要求下载一个 package，直接在 vscode 里下载巨慢无比，我就去 github 直接下载了，然后这样子安装：<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062567944-adec4fb5-ebcc-4b87-a61d-4fd206b046bc.png#crop=0&crop=0&crop=1&crop=1&id=Tp5Tj&originHeight=564&originWidth=838&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>然后新建 cpp 文件。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568040-07844546-5aad-4dc8-9e1b-fe5ff042570d.png#crop=0&crop=0&crop=1&crop=1&id=BMoSM&originHeight=666&originWidth=2110&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"></p>\n<h2 id=\"1-配置-tasks-json-文件\"><a href=\"#1-配置-tasks-json-文件\" class=\"headerlink\" title=\"1.配置 tasks.json 文件\"></a>1.配置 tasks.json 文件</h2><p>首先，点击顶部菜单栏中的终端—配置默认生成任务—C/C++ clang++，此时会生成一个 tasks.json 文件，这个文件是默认生成的，需要修改其中的 args 选项，添加一个”-std=c++17”,，修改如下：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JSON\">&quot;args&quot;: [<br>  &quot;-fdiagnostics-color=always&quot;,<br>  &quot;-g&quot;,<br>  &quot;$&#123;file&#125;&quot;,<br>  &quot;-std=c++17&quot;,<br>  &quot;-o&quot;,<br>  <span class=\"hljs-string\">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span><br>]<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-配置-c-cpp-properties-json-文件\"><a href=\"#2-配置-c-cpp-properties-json-文件\" class=\"headerlink\" title=\"2.配置 c_cpp_properties.json 文件\"></a>2.配置 c_cpp_properties.json 文件</h2><p>使用组合键 shift+command+p 调出 C/C++:编辑配置（json），此时会自动生成一个 c_cpp_properties.json 文件。<br>修改编译器为 clang++：<br>将”compilerPath”: “/usr/bin/clang”,修改为”compilerPath”: “/usr/bin/clang++”,<br>修改 C 标准为 C17：<br>将”cppStandard”: “c98”,修改为”cppStandard”: “c17”,</p>\n<blockquote>\n<p>注意，上面那个组合键和番茄 todo 的专注快捷键冲突了，但是它不会报错。。。我按了好几遍都没出来差点怀疑人生。</p>\n</blockquote>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568171-ad7d9ec1-3b43-4aaf-8f32-8d81736d8237.png#crop=0&crop=0&crop=1&crop=1&id=Xv4Dp&originHeight=828&originWidth=1648&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>然后配置完成后，点击顶部菜单栏中的终端—运行生成任务，此时会生成一个二进制文件，右键这个二进制文件，点击在终端中打开，键入./你的二进制文件名，即可看到输出结果。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568265-38fff787-0188-46dc-864e-6090f8f7d417.png#crop=0&crop=0&crop=1&crop=1&id=y5JKm&originHeight=406&originWidth=952&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"></p>\n<h2 id=\"3-Debug-调试\"><a href=\"#3-Debug-调试\" class=\"headerlink\" title=\"3.Debug 调试\"></a>3.Debug 调试</h2><p>点击顶部菜单栏中的运行—添加配置—C++(GDB/LLDB)—clang++ 生成活动文件，会生成一个 launch.json 文件。<br>在文件中将”type”: “cppdbg”,修改为”type”: “lldb”,<br>到此，所有配置工作均完成。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568360-b580675d-4637-4d64-ab60-6067751dd9dd.png#crop=0&crop=0&crop=1&crop=1&id=gMnzj&originHeight=596&originWidth=1014&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>大功告成。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568431-e7291774-4e92-4f01-88a2-ce6d2745cc2e.png#crop=0&crop=0&crop=1&crop=1&id=MR86D&originHeight=1580&originWidth=2184&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>然后设置了一下，可以让 vscode 调试的时候调用外部的 terminal，试了一下感觉没啥用，就换回去了。</p>\n","more":"<h1 id=\"c-c\"><a href=\"#c-c\" class=\"headerlink\" title=\"c/c++\"></a>c/c++</h1><p>参考：</p>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35926606/article/details/116018953\">https://blog.csdn.net/qq_35926606/article/details/116018953</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45596100/article/details/121114828\">https://blog.csdn.net/qq_45596100/article/details/121114828</a></li>\n<li><a href=\"https://blog.csdn.net/IAMoldpan/article/details/119978907\">https://blog.csdn.net/IAMoldpan/article/details/119978907</a></li>\n</ul>\n<p>首先是下载几个插件。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062567837-7eabd8ef-0de2-48a2-bd86-51c453d4ec92.png#crop=0&crop=0&crop=1&crop=1&id=sXGWi&originHeight=732&originWidth=498&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>然后，codeLLDB 会要求下载一个 package，直接在 vscode 里下载巨慢无比，我就去 github 直接下载了，然后这样子安装：<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062567944-adec4fb5-ebcc-4b87-a61d-4fd206b046bc.png#crop=0&crop=0&crop=1&crop=1&id=Tp5Tj&originHeight=564&originWidth=838&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>然后新建 cpp 文件。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568040-07844546-5aad-4dc8-9e1b-fe5ff042570d.png#crop=0&crop=0&crop=1&crop=1&id=BMoSM&originHeight=666&originWidth=2110&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"></p>\n<h2 id=\"1-配置-tasks-json-文件\"><a href=\"#1-配置-tasks-json-文件\" class=\"headerlink\" title=\"1.配置 tasks.json 文件\"></a>1.配置 tasks.json 文件</h2><p>首先，点击顶部菜单栏中的终端—配置默认生成任务—C/C++ clang++，此时会生成一个 tasks.json 文件，这个文件是默认生成的，需要修改其中的 args 选项，添加一个”-std=c++17”,，修改如下：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JSON\">&quot;args&quot;: [<br>  &quot;-fdiagnostics-color=always&quot;,<br>  &quot;-g&quot;,<br>  &quot;$&#123;file&#125;&quot;,<br>  &quot;-std=c++17&quot;,<br>  &quot;-o&quot;,<br>  <span class=\"hljs-string\">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span><br>]<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-配置-c-cpp-properties-json-文件\"><a href=\"#2-配置-c-cpp-properties-json-文件\" class=\"headerlink\" title=\"2.配置 c_cpp_properties.json 文件\"></a>2.配置 c_cpp_properties.json 文件</h2><p>使用组合键 shift+command+p 调出 C/C++:编辑配置（json），此时会自动生成一个 c_cpp_properties.json 文件。<br>修改编译器为 clang++：<br>将”compilerPath”: “/usr/bin/clang”,修改为”compilerPath”: “/usr/bin/clang++”,<br>修改 C 标准为 C17：<br>将”cppStandard”: “c98”,修改为”cppStandard”: “c17”,</p>\n<blockquote>\n<p>注意，上面那个组合键和番茄 todo 的专注快捷键冲突了，但是它不会报错。。。我按了好几遍都没出来差点怀疑人生。</p>\n</blockquote>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568171-ad7d9ec1-3b43-4aaf-8f32-8d81736d8237.png#crop=0&crop=0&crop=1&crop=1&id=Xv4Dp&originHeight=828&originWidth=1648&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>然后配置完成后，点击顶部菜单栏中的终端—运行生成任务，此时会生成一个二进制文件，右键这个二进制文件，点击在终端中打开，键入./你的二进制文件名，即可看到输出结果。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568265-38fff787-0188-46dc-864e-6090f8f7d417.png#crop=0&crop=0&crop=1&crop=1&id=y5JKm&originHeight=406&originWidth=952&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"></p>\n<h2 id=\"3-Debug-调试\"><a href=\"#3-Debug-调试\" class=\"headerlink\" title=\"3.Debug 调试\"></a>3.Debug 调试</h2><p>点击顶部菜单栏中的运行—添加配置—C++(GDB/LLDB)—clang++ 生成活动文件，会生成一个 launch.json 文件。<br>在文件中将”type”: “cppdbg”,修改为”type”: “lldb”,<br>到此，所有配置工作均完成。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568360-b580675d-4637-4d64-ab60-6067751dd9dd.png#crop=0&crop=0&crop=1&crop=1&id=gMnzj&originHeight=596&originWidth=1014&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>大功告成。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1629942/1644062568431-e7291774-4e92-4f01-88a2-ce6d2745cc2e.png#crop=0&crop=0&crop=1&crop=1&id=MR86D&originHeight=1580&originWidth=2184&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&status=done&style=none&title=\"><br>然后设置了一下，可以让 vscode 调试的时候调用外部的 terminal，试了一下感觉没啥用，就换回去了。</p>\n","categories":[{"name":"mac","path":"api/categories/mac.json"},{"name":"m1","path":"api/categories/m1.json"}],"tags":[{"name":"踩坑教程","path":"api/tags/踩坑教程.json"}]}