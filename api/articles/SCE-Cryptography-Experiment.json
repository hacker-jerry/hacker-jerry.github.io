{"title":"SCE-Cryptography-Experiment","slug":"SCE-Cryptography-Experiment","date":"2020-09-26T08:23:50.000Z","updated":"2023-04-17T11:59:12.718Z","comments":true,"path":"api/articles/SCE-Cryptography-Experiment.json","realPath":null,"excerpt":null,"covers":null,"cover":"https://image.hackerjerry.top/topImg-1.png","content":"<a id=\"more\"></a>\n\n<h1 id=\"生成-RSA-大素数对\"><a href=\"#生成-RSA-大素数对\" class=\"headerlink\" title=\"生成 RSA 大素数对\"></a>生成 RSA 大素数对</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">from</span> Crypto.PublicKey <span class=\"hljs-keyword\">import</span> RSA<br>RSAkey = RSA.generate(<span class=\"hljs-number\">1024</span>)<br><span class=\"hljs-string\">&quot;&quot;&quot;</span><br><span class=\"hljs-string\">RsaKey(n=135828718287577504794345019580082927233382329800436650769778319130905210891299413615216512376642256926</span><br><span class=\"hljs-string\">81082083849207511789369113995656114347658628181817364203829151160294408679251739590425386713208320533180799940969738619</span><br><span class=\"hljs-string\">5247179226323919349310987779260954782675652897977451878557940738099185187754664490831243, e=65537, d=121948850024277284</span><br><span class=\"hljs-string\">31419291319547857604730482453358702002370807784400357979224037562169979688178632524487768280722147336522673889062734116</span><br><span class=\"hljs-string\">12091236526264756659745917698038449276833478093929539387457070306648475772351712570431776434737921224077076846006461005</span><br><span class=\"hljs-string\">1801442191171153628914016094739518761772299602223169, p=106966107287469170015624352521638251586863407906376169924940482</span><br><span class=\"hljs-string\">70893593178051022233452907429273165871602433433280712262828660157650519133674850464955099769, q=12698294976981883899887</span><br><span class=\"hljs-string\">05757908736918629112987783691507779835783942064221972829430441724076915068135969878213856988519323444267214248422535888</span><br><span class=\"hljs-string\">1222134150947, u=748951926994679052549581035821877331925827771100922884099976839588394981271357878319645686189368446921</span><br><span class=\"hljs-string\">7133192361022681583376512653412786705315289991596596)</span><br><span class=\"hljs-string\">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>注意这个 Crypto 库一般情况在导入的时候都会出错，有几种情况，我介绍一下我遇到的，就是我之前安装了 pycrypto 这个库，但是这个库最新的一版是 2014 年，已经不兼容了，当我尝试 uninstall 它时，报错<br><code>ERROR: Cannot uninstall &#39;pycrypto&#39;. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.</code><br>这时候，我们必须全局搜索 pycrypto，并手动删除那个文件夹<br>然后在<strong>cmd 下</strong>安装<br><code>pip install pycryptodome --user</code></p>\n<blockquote>\n<p>我也不知道为什么必须在 cmd 下安装，一开始用 powershell 安装的时候我在 Python37 文件夹中找不到它…</p>\n</blockquote>\n<h1 id=\"Fermat-定理检验素数\"><a href=\"#Fermat-定理检验素数\" class=\"headerlink\" title=\"Fermat 定理检验素数\"></a>Fermat 定理检验素数</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">FermatPrimalityTest</span>(<span class=\"hljs-params\">m,k</span>):</span><br>    <span class=\"hljs-string\">&quot;&quot;&quot;</span><br><span class=\"hljs-string\">    m:给定奇整数</span><br><span class=\"hljs-string\">    k:安全参数，重复K次</span><br><span class=\"hljs-string\">    &quot;&quot;&quot;</span><br><br>    <span class=\"hljs-keyword\">if</span> m%<span class=\"hljs-number\">2</span>==<span class=\"hljs-number\">0</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(k):<br>        a = random.randint(<span class=\"hljs-number\">2</span>,m<span class=\"hljs-number\">-2</span>)<br>        g = gmpy2.gcd(a,m)<br>        <span class=\"hljs-keyword\">if</span> g==<span class=\"hljs-number\">1</span>:<br>            r = gmpy2.powmod(a,m<span class=\"hljs-number\">-1</span>,m)<br>            <span class=\"hljs-keyword\">if</span> r ==<span class=\"hljs-number\">1</span>:<br>                <span class=\"hljs-keyword\">continue</span><br>            <span class=\"hljs-keyword\">else</span>:<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>        <span class=\"hljs-keyword\">else</span>:<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br></code></pre></td></tr></table></figure>\n","more":"<h1 id=\"生成-RSA-大素数对\"><a href=\"#生成-RSA-大素数对\" class=\"headerlink\" title=\"生成 RSA 大素数对\"></a>生成 RSA 大素数对</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">from</span> Crypto.PublicKey <span class=\"hljs-keyword\">import</span> RSA<br>RSAkey = RSA.generate(<span class=\"hljs-number\">1024</span>)<br><span class=\"hljs-string\">&quot;&quot;&quot;</span><br><span class=\"hljs-string\">RsaKey(n=135828718287577504794345019580082927233382329800436650769778319130905210891299413615216512376642256926</span><br><span class=\"hljs-string\">81082083849207511789369113995656114347658628181817364203829151160294408679251739590425386713208320533180799940969738619</span><br><span class=\"hljs-string\">5247179226323919349310987779260954782675652897977451878557940738099185187754664490831243, e=65537, d=121948850024277284</span><br><span class=\"hljs-string\">31419291319547857604730482453358702002370807784400357979224037562169979688178632524487768280722147336522673889062734116</span><br><span class=\"hljs-string\">12091236526264756659745917698038449276833478093929539387457070306648475772351712570431776434737921224077076846006461005</span><br><span class=\"hljs-string\">1801442191171153628914016094739518761772299602223169, p=106966107287469170015624352521638251586863407906376169924940482</span><br><span class=\"hljs-string\">70893593178051022233452907429273165871602433433280712262828660157650519133674850464955099769, q=12698294976981883899887</span><br><span class=\"hljs-string\">05757908736918629112987783691507779835783942064221972829430441724076915068135969878213856988519323444267214248422535888</span><br><span class=\"hljs-string\">1222134150947, u=748951926994679052549581035821877331925827771100922884099976839588394981271357878319645686189368446921</span><br><span class=\"hljs-string\">7133192361022681583376512653412786705315289991596596)</span><br><span class=\"hljs-string\">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>注意这个 Crypto 库一般情况在导入的时候都会出错，有几种情况，我介绍一下我遇到的，就是我之前安装了 pycrypto 这个库，但是这个库最新的一版是 2014 年，已经不兼容了，当我尝试 uninstall 它时，报错<br><code>ERROR: Cannot uninstall &#39;pycrypto&#39;. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.</code><br>这时候，我们必须全局搜索 pycrypto，并手动删除那个文件夹<br>然后在<strong>cmd 下</strong>安装<br><code>pip install pycryptodome --user</code></p>\n<blockquote>\n<p>我也不知道为什么必须在 cmd 下安装，一开始用 powershell 安装的时候我在 Python37 文件夹中找不到它…</p>\n</blockquote>\n<h1 id=\"Fermat-定理检验素数\"><a href=\"#Fermat-定理检验素数\" class=\"headerlink\" title=\"Fermat 定理检验素数\"></a>Fermat 定理检验素数</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">FermatPrimalityTest</span>(<span class=\"hljs-params\">m,k</span>):</span><br>    <span class=\"hljs-string\">&quot;&quot;&quot;</span><br><span class=\"hljs-string\">    m:给定奇整数</span><br><span class=\"hljs-string\">    k:安全参数，重复K次</span><br><span class=\"hljs-string\">    &quot;&quot;&quot;</span><br><br>    <span class=\"hljs-keyword\">if</span> m%<span class=\"hljs-number\">2</span>==<span class=\"hljs-number\">0</span>:<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(k):<br>        a = random.randint(<span class=\"hljs-number\">2</span>,m<span class=\"hljs-number\">-2</span>)<br>        g = gmpy2.gcd(a,m)<br>        <span class=\"hljs-keyword\">if</span> g==<span class=\"hljs-number\">1</span>:<br>            r = gmpy2.powmod(a,m<span class=\"hljs-number\">-1</span>,m)<br>            <span class=\"hljs-keyword\">if</span> r ==<span class=\"hljs-number\">1</span>:<br>                <span class=\"hljs-keyword\">continue</span><br>            <span class=\"hljs-keyword\">else</span>:<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>        <span class=\"hljs-keyword\">else</span>:<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br></code></pre></td></tr></table></figure>","categories":[{"name":"crypto","path":"api/categories/crypto.json"}],"tags":[{"name":"crypto","path":"api/tags/crypto.json"},{"name":"rsa","path":"api/tags/rsa.json"}]}