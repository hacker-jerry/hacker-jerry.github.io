{"title":"SPECTRE-Coding","slug":"SPECTRE-Coding","date":"2021-04-11T09:46:39.000Z","updated":"2022-02-12T12:57:44.633Z","comments":true,"path":"api/articles/SPECTRE-Coding.json","realPath":null,"excerpt":"虽然这个 paper 可能不是个能 work 的（有很多地方比较牵强，不稳定，且无任何项目声明实现了它），但既然老师要求了，只好硬着头皮上了。","covers":["https://cdn.nlark.com/yuque/0/2021/png/2911566/1617631667837-57aa55fc-fa97-4d7c-9fad-03d5e2294519.png#height=790&id=CCHi2&originHeight=790&originWidth=930&originalType=binary%E2%88%B6=1&status=done&style=none&width=930"],"cover":"https://cdn.nlark.com/yuque/0/2021/png/2911566/1617631667837-57aa55fc-fa97-4d7c-9fad-03d5e2294519.png#height=790&id=CCHi2&originHeight=790&originWidth=930&originalType=binary%E2%88%B6=1&status=done&style=none&width=930","content":"<p>虽然这个 paper 可能不是个能 work 的（有很多地方比较牵强，不稳定，且无任何项目声明实现了它），但既然老师要求了，只好硬着头皮上了。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"借鉴\"><a href=\"#借鉴\" class=\"headerlink\" title=\"借鉴\"></a>借鉴</h1><p>根据经验，我决定先学习一下现有项目中各种共识协议的编写。<br>pow-原理很简单，就是工作量证明，故不用看。<br>pos-选举人制度，具体原理还是可以了解一下的。</p>\n<h2 id=\"pos–账本共识\"><a href=\"#pos–账本共识\" class=\"headerlink\" title=\"pos–账本共识\"></a>pos–账本共识</h2><p>切记，PoS 不是一种确定的定义（算法)，而是一种概念，因此对于不同的平台来说，可以有不同的 PoS 实现。<br>以太坊使用 GHOST，贪婪最重可观察子树协议，作为其分叉选择规则。在 GHOST 协议中，获得投票数最高的分叉将被选为链头（将每个分叉区块及其各自子区块的所有票数计入考虑）。<br>与最长链规则相比， <strong>GHOST 的优点在于能够在网络延迟较高时降低攻击效率，同时最小化链重组的深度</strong>。原因是即使攻击者能够高效地在其分叉链上继续产生区块，尝试使该链成为最长链，GHOST 也会选择另一条票数更高的分叉链。</p>\n<h2 id=\"pow–挖矿共识\"><a href=\"#pow–挖矿共识\" class=\"headerlink\" title=\"pow–挖矿共识\"></a>pow–挖矿共识</h2><p><a href=\"https://www.yuque.com/docs/share/f47edbdb-8ca4-411b-b78c-1f0ea772ac2c#O7vbh\">https://www.yuque.com/docs/share/f47edbdb-8ca4-411b-b78c-1f0ea772ac2c#O7vbh</a><br>挖矿可以设计一个动态调整难度的函数<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/2911566/1617631667837-57aa55fc-fa97-4d7c-9fad-03d5e2294519.png#height=790&id=CCHi2&originHeight=790&originWidth=930&originalType=binary%E2%88%B6=1&status=done&style=none&width=930\"><br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/2911566/1617631703569-6b340ff4-4b60-4a6c-8799-e4c81acdec7c.png#height=448&id=Lw1nX&originHeight=448&originWidth=836&originalType=binary%E2%88%B6=1&status=done&style=none&width=836\"></p>\n<h1 id=\"SPECTRE\"><a href=\"#SPECTRE\" class=\"headerlink\" title=\"SPECTRE\"></a>SPECTRE</h1><p>根据它的伪代码我写了一个 demo,看起来还不错。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">Vote</span><span class=\"hljs-params\">(node1 *dag.Blocknode, node2 *dag.Blocknode, graph *Graph)</span> <span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>, <span class=\"hljs-keyword\">int</span>)</span></span> &#123;<br>\tvoteOfnode1 := <span class=\"hljs-number\">0</span><br>\tvoteOfnode2 := <span class=\"hljs-number\">0</span><br><br>\t<span class=\"hljs-comment\">//遍历全局图</span><br>\tGraph := graph<br>\t<span class=\"hljs-comment\">//这里graph一开始要传dag.Graph这个全局图，之后可以传past集或者future集</span><br>\t<span class=\"hljs-keyword\">for</span> k, z := <span class=\"hljs-keyword\">range</span> Graph.nodes &#123;<br>\t\t_, ok1 := Graph.getFuture(node1)[k]<br>\t\t_, ok2 := Graph.getFuture(node2)[k]<br>\t\t<span class=\"hljs-keyword\">if</span> ok1 &amp;&amp; !ok2 &#123;<br>\t\t\tvoteOfnode1 += <span class=\"hljs-number\">1</span><br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> !ok1 &amp;&amp; ok2 &#123;<br>\t\t\tvoteOfnode2 += <span class=\"hljs-number\">1</span><br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ok1 &amp;&amp; ok2 &#123;<br>\t\t\t<span class=\"hljs-comment\">//取决于past(z)的投票结果</span><br>\t\t\ttem1, tem2 := Vote(node1, node2, Graph.getPast(z))<br>\t\t\t<span class=\"hljs-keyword\">if</span> tem1 &gt; tem2 &#123;<br>\t\t\t\tvoteOfnode1 += <span class=\"hljs-number\">1</span><br>\t\t\t&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\tvoteOfnode2 += <span class=\"hljs-number\">1</span><br>\t\t\t&#125;<br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> !ok1 &amp;&amp; !ok2 &#123;<br>\t\t\t<span class=\"hljs-comment\">//z的投票结果取决于future(z)的投票结果</span><br>\t\t\ttem1, tem2 := Vote(node1, node2, getFutureToGraph(Graph.getFuture(z)))<br>\t\t\t<span class=\"hljs-keyword\">if</span> tem1 &gt; tem2 &#123;<br>\t\t\t\tvoteOfnode1 += <span class=\"hljs-number\">1</span><br>\t\t\t&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\tvoteOfnode2 += <span class=\"hljs-number\">1</span><br>\t\t\t&#125;<br><br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> z == node1 &#123;<br>\t\t\tvoteOfnode1 += <span class=\"hljs-number\">1</span><br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> z == node2 &#123;<br>\t\t\tvoteOfnode2 += <span class=\"hljs-number\">1</span><br>\t\t&#125;<br><br>\t&#125;<br><br>\t<span class=\"hljs-keyword\">return</span> voteOfnode1, voteOfnode2<br>&#125;<br><br></code></pre></td></tr></table></figure>\n","more":"<h1 id=\"借鉴\"><a href=\"#借鉴\" class=\"headerlink\" title=\"借鉴\"></a>借鉴</h1><p>根据经验，我决定先学习一下现有项目中各种共识协议的编写。<br>pow-原理很简单，就是工作量证明，故不用看。<br>pos-选举人制度，具体原理还是可以了解一下的。</p>\n<h2 id=\"pos–账本共识\"><a href=\"#pos–账本共识\" class=\"headerlink\" title=\"pos–账本共识\"></a>pos–账本共识</h2><p>切记，PoS 不是一种确定的定义（算法)，而是一种概念，因此对于不同的平台来说，可以有不同的 PoS 实现。<br>以太坊使用 GHOST，贪婪最重可观察子树协议，作为其分叉选择规则。在 GHOST 协议中，获得投票数最高的分叉将被选为链头（将每个分叉区块及其各自子区块的所有票数计入考虑）。<br>与最长链规则相比， <strong>GHOST 的优点在于能够在网络延迟较高时降低攻击效率，同时最小化链重组的深度</strong>。原因是即使攻击者能够高效地在其分叉链上继续产生区块，尝试使该链成为最长链，GHOST 也会选择另一条票数更高的分叉链。</p>\n<h2 id=\"pow–挖矿共识\"><a href=\"#pow–挖矿共识\" class=\"headerlink\" title=\"pow–挖矿共识\"></a>pow–挖矿共识</h2><p><a href=\"https://www.yuque.com/docs/share/f47edbdb-8ca4-411b-b78c-1f0ea772ac2c#O7vbh\">https://www.yuque.com/docs/share/f47edbdb-8ca4-411b-b78c-1f0ea772ac2c#O7vbh</a><br>挖矿可以设计一个动态调整难度的函数<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/2911566/1617631667837-57aa55fc-fa97-4d7c-9fad-03d5e2294519.png#height=790&id=CCHi2&originHeight=790&originWidth=930&originalType=binary%E2%88%B6=1&status=done&style=none&width=930\"><br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/2911566/1617631703569-6b340ff4-4b60-4a6c-8799-e4c81acdec7c.png#height=448&id=Lw1nX&originHeight=448&originWidth=836&originalType=binary%E2%88%B6=1&status=done&style=none&width=836\"></p>\n<h1 id=\"SPECTRE\"><a href=\"#SPECTRE\" class=\"headerlink\" title=\"SPECTRE\"></a>SPECTRE</h1><p>根据它的伪代码我写了一个 demo,看起来还不错。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">Vote</span><span class=\"hljs-params\">(node1 *dag.Blocknode, node2 *dag.Blocknode, graph *Graph)</span> <span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>, <span class=\"hljs-keyword\">int</span>)</span></span> &#123;<br>\tvoteOfnode1 := <span class=\"hljs-number\">0</span><br>\tvoteOfnode2 := <span class=\"hljs-number\">0</span><br><br>\t<span class=\"hljs-comment\">//遍历全局图</span><br>\tGraph := graph<br>\t<span class=\"hljs-comment\">//这里graph一开始要传dag.Graph这个全局图，之后可以传past集或者future集</span><br>\t<span class=\"hljs-keyword\">for</span> k, z := <span class=\"hljs-keyword\">range</span> Graph.nodes &#123;<br>\t\t_, ok1 := Graph.getFuture(node1)[k]<br>\t\t_, ok2 := Graph.getFuture(node2)[k]<br>\t\t<span class=\"hljs-keyword\">if</span> ok1 &amp;&amp; !ok2 &#123;<br>\t\t\tvoteOfnode1 += <span class=\"hljs-number\">1</span><br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> !ok1 &amp;&amp; ok2 &#123;<br>\t\t\tvoteOfnode2 += <span class=\"hljs-number\">1</span><br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ok1 &amp;&amp; ok2 &#123;<br>\t\t\t<span class=\"hljs-comment\">//取决于past(z)的投票结果</span><br>\t\t\ttem1, tem2 := Vote(node1, node2, Graph.getPast(z))<br>\t\t\t<span class=\"hljs-keyword\">if</span> tem1 &gt; tem2 &#123;<br>\t\t\t\tvoteOfnode1 += <span class=\"hljs-number\">1</span><br>\t\t\t&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\tvoteOfnode2 += <span class=\"hljs-number\">1</span><br>\t\t\t&#125;<br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> !ok1 &amp;&amp; !ok2 &#123;<br>\t\t\t<span class=\"hljs-comment\">//z的投票结果取决于future(z)的投票结果</span><br>\t\t\ttem1, tem2 := Vote(node1, node2, getFutureToGraph(Graph.getFuture(z)))<br>\t\t\t<span class=\"hljs-keyword\">if</span> tem1 &gt; tem2 &#123;<br>\t\t\t\tvoteOfnode1 += <span class=\"hljs-number\">1</span><br>\t\t\t&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\tvoteOfnode2 += <span class=\"hljs-number\">1</span><br>\t\t\t&#125;<br><br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> z == node1 &#123;<br>\t\t\tvoteOfnode1 += <span class=\"hljs-number\">1</span><br>\t\t&#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> z == node2 &#123;<br>\t\t\tvoteOfnode2 += <span class=\"hljs-number\">1</span><br>\t\t&#125;<br><br>\t&#125;<br><br>\t<span class=\"hljs-keyword\">return</span> voteOfnode1, voteOfnode2<br>&#125;<br><br></code></pre></td></tr></table></figure>","categories":[],"tags":[]}