{"title":"Bugs-in-python","slug":"Bugs-in-python","date":"2020-11-28T08:07:24.000Z","updated":"2022-02-07T08:59:30.081Z","comments":true,"path":"api/articles/Bugs-in-python.json","realPath":null,"excerpt":"记录在编写 python 程序中遇到的 bug 们。","covers":null,"cover":"https://image.hackerjerry.top/topImg-1.png","content":"<p>记录在编写 python 程序中遇到的 bug 们。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"跨目录调用模块\"><a href=\"#跨目录调用模块\" class=\"headerlink\" title=\"跨目录调用模块\"></a>跨目录调用模块</h1><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">project</span><br>├── <span class=\"hljs-selector-tag\">package1</span><br>│   ├── __<span class=\"hljs-selector-tag\">init__</span><span class=\"hljs-selector-class\">.py</span><br>│   ├── <span class=\"hljs-selector-tag\">module_11</span><span class=\"hljs-selector-class\">.py</span><br>│   └── <span class=\"hljs-selector-tag\">module_12</span><span class=\"hljs-selector-class\">.py</span><br>├── <span class=\"hljs-selector-tag\">package2</span><br>│   ├── __<span class=\"hljs-selector-tag\">init_</span><span class=\"hljs-selector-class\">.py</span><br>│   ├── <span class=\"hljs-selector-tag\">module_21</span><span class=\"hljs-selector-class\">.py</span><br>│   └── <span class=\"hljs-selector-tag\">module_22</span><span class=\"hljs-selector-class\">.py</span><br>├── <span class=\"hljs-selector-tag\">main</span><span class=\"hljs-selector-class\">.py</span><br>└── <span class=\"hljs-selector-tag\">tool</span><span class=\"hljs-selector-class\">.py</span><br></code></pre></td></tr></table></figure>\n\n<p>对于这样一个目录结构的项目，我们需要知道：<br>Python 解析器对<strong>模块位置的搜索顺序</strong>：</p>\n<ol>\n<li><strong>当前目录</strong>。</li>\n<li>PYTHONPATH 的每个目录。</li>\n<li>查看 Python 安装时的默认包路径。例如：<code>/usr/lib64/python2.6/site-packages</code>。<blockquote>\n<p>可以通过查询<code>sys.path</code>查看模块搜索路径。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"在子包（package-中引入根目录\"><a href=\"#在子包（package-中引入根目录\" class=\"headerlink\" title=\"在子包（package)中引入根目录\"></a>在子包（package)中引入根目录</h2><ul>\n<li><p>将项目的根目录加到 PYTHONPATH 变量中</p>\n</li>\n<li><p>sys.path.append(“..”)</p>\n</li>\n</ul>\n<h2 id=\"同级模块（module）引用\"><a href=\"#同级模块（module）引用\" class=\"headerlink\" title=\"同级模块（module）引用\"></a>同级模块（module）引用</h2><p><code>module_11.py</code>文件导入 module_12.py 模块</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> module_12<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"导入下级模块\"><a href=\"#导入下级模块\" class=\"headerlink\" title=\"导入下级模块\"></a>导入下级模块</h2><p><code>main.py</code>文件导入<code>module_12.py</code>模块</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">from</span> package<span class=\"hljs-number\">1</span> import module_<span class=\"hljs-number\">12</span><br><span class=\"hljs-comment\"># 或者</span><br><span class=\"hljs-attribute\">import</span> package<span class=\"hljs-number\">1</span>.module_<span class=\"hljs-number\">12</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"导入上级模块\"><a href=\"#导入上级模块\" class=\"headerlink\" title=\"  导入上级模块\"></a>  导入上级模块</h2><p><code>module_11.py</code>导入上级目录的<code>tool.py</code>模块</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xl\"><span class=\"hljs-keyword\">import</span> sys<br>sys.<span class=\"hljs-built_in\">path</span>.append(<span class=\"hljs-string\">&quot;..&quot;</span>)<br><span class=\"hljs-keyword\">import</span> tool<br></code></pre></td></tr></table></figure>\n\n<p>相当于通过<code>sys.path.append(&quot;..&quot;)</code>进入上级目录，然后类似导入<code>同级目录</code>模块的方式导入。</p>\n<h2 id=\"导入跨包下级模块\"><a href=\"#导入跨包下级模块\" class=\"headerlink\" title=\"导入跨包下级模块\"></a>导入跨包下级模块</h2><p><code>module_11.py</code>导入<code>package2</code>包的<code>module_21.py</code>模块</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xl\"><span class=\"hljs-keyword\">import</span> sys<br>sys.<span class=\"hljs-built_in\">path</span>.append(<span class=\"hljs-string\">&quot;..&quot;</span>)<br>from package2 <span class=\"hljs-keyword\">import</span> module_21<br></code></pre></td></tr></table></figure>\n\n<p>相当于通过<code>sys.path.append(&quot;..&quot;)</code>进入上级目录，然后类似导入<code>下级目录</code>模块的方式导入。</p>\n<blockquote>\n<p>参考：<a href=\"https://www.huweihuang.com/python-notes/package/package-module.html\">https://www.huweihuang.com/python-notes/package/package-module.html</a></p>\n</blockquote>\n","more":"<h1 id=\"跨目录调用模块\"><a href=\"#跨目录调用模块\" class=\"headerlink\" title=\"跨目录调用模块\"></a>跨目录调用模块</h1><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">project</span><br>├── <span class=\"hljs-selector-tag\">package1</span><br>│   ├── __<span class=\"hljs-selector-tag\">init__</span><span class=\"hljs-selector-class\">.py</span><br>│   ├── <span class=\"hljs-selector-tag\">module_11</span><span class=\"hljs-selector-class\">.py</span><br>│   └── <span class=\"hljs-selector-tag\">module_12</span><span class=\"hljs-selector-class\">.py</span><br>├── <span class=\"hljs-selector-tag\">package2</span><br>│   ├── __<span class=\"hljs-selector-tag\">init_</span><span class=\"hljs-selector-class\">.py</span><br>│   ├── <span class=\"hljs-selector-tag\">module_21</span><span class=\"hljs-selector-class\">.py</span><br>│   └── <span class=\"hljs-selector-tag\">module_22</span><span class=\"hljs-selector-class\">.py</span><br>├── <span class=\"hljs-selector-tag\">main</span><span class=\"hljs-selector-class\">.py</span><br>└── <span class=\"hljs-selector-tag\">tool</span><span class=\"hljs-selector-class\">.py</span><br></code></pre></td></tr></table></figure>\n\n<p>对于这样一个目录结构的项目，我们需要知道：<br>Python 解析器对<strong>模块位置的搜索顺序</strong>：</p>\n<ol>\n<li><strong>当前目录</strong>。</li>\n<li>PYTHONPATH 的每个目录。</li>\n<li>查看 Python 安装时的默认包路径。例如：<code>/usr/lib64/python2.6/site-packages</code>。<blockquote>\n<p>可以通过查询<code>sys.path</code>查看模块搜索路径。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"在子包（package-中引入根目录\"><a href=\"#在子包（package-中引入根目录\" class=\"headerlink\" title=\"在子包（package)中引入根目录\"></a>在子包（package)中引入根目录</h2><ul>\n<li><p>将项目的根目录加到 PYTHONPATH 变量中</p>\n</li>\n<li><p>sys.path.append(“..”)</p>\n</li>\n</ul>\n<h2 id=\"同级模块（module）引用\"><a href=\"#同级模块（module）引用\" class=\"headerlink\" title=\"同级模块（module）引用\"></a>同级模块（module）引用</h2><p><code>module_11.py</code>文件导入 module_12.py 模块</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> module_12<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"导入下级模块\"><a href=\"#导入下级模块\" class=\"headerlink\" title=\"导入下级模块\"></a>导入下级模块</h2><p><code>main.py</code>文件导入<code>module_12.py</code>模块</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">from</span> package<span class=\"hljs-number\">1</span> import module_<span class=\"hljs-number\">12</span><br><span class=\"hljs-comment\"># 或者</span><br><span class=\"hljs-attribute\">import</span> package<span class=\"hljs-number\">1</span>.module_<span class=\"hljs-number\">12</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"导入上级模块\"><a href=\"#导入上级模块\" class=\"headerlink\" title=\"  导入上级模块\"></a>  导入上级模块</h2><p><code>module_11.py</code>导入上级目录的<code>tool.py</code>模块</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xl\"><span class=\"hljs-keyword\">import</span> sys<br>sys.<span class=\"hljs-built_in\">path</span>.append(<span class=\"hljs-string\">&quot;..&quot;</span>)<br><span class=\"hljs-keyword\">import</span> tool<br></code></pre></td></tr></table></figure>\n\n<p>相当于通过<code>sys.path.append(&quot;..&quot;)</code>进入上级目录，然后类似导入<code>同级目录</code>模块的方式导入。</p>\n<h2 id=\"导入跨包下级模块\"><a href=\"#导入跨包下级模块\" class=\"headerlink\" title=\"导入跨包下级模块\"></a>导入跨包下级模块</h2><p><code>module_11.py</code>导入<code>package2</code>包的<code>module_21.py</code>模块</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xl\"><span class=\"hljs-keyword\">import</span> sys<br>sys.<span class=\"hljs-built_in\">path</span>.append(<span class=\"hljs-string\">&quot;..&quot;</span>)<br>from package2 <span class=\"hljs-keyword\">import</span> module_21<br></code></pre></td></tr></table></figure>\n\n<p>相当于通过<code>sys.path.append(&quot;..&quot;)</code>进入上级目录，然后类似导入<code>下级目录</code>模块的方式导入。</p>\n<blockquote>\n<p>参考：<a href=\"https://www.huweihuang.com/python-notes/package/package-module.html\">https://www.huweihuang.com/python-notes/package/package-module.html</a></p>\n</blockquote>","categories":[{"name":"python","path":"api/categories/python.json"}],"tags":[{"name":"python","path":"api/tags/python.json"}]}