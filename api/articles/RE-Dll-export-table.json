{"title":"RE-Dll-export-table","slug":"RE-Dll-export-table","date":"2020-10-23T09:04:37.000Z","updated":"2022-04-09T03:33:23.659Z","comments":true,"path":"api/articles/RE-Dll-export-table.json","realPath":null,"excerpt":null,"covers":["https://cdn.nlark.com/yuque/0/2020/png/1629942/1603444028068-ad438e4c-b122-42c7-ba5a-83c7ae4806d3.png#align=left&display=inline&height=258&margin=%5Bobject%20Object%5D&name=image.png&originHeight=516&originWidth=1086&size=203973&status=done&style=none&width=543"],"cover":"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603444028068-ad438e4c-b122-42c7-ba5a-83c7ae4806d3.png#align=left&display=inline&height=258&margin=%5Bobject%20Object%5D&name=image.png&originHeight=516&originWidth=1086&size=203973&status=done&style=none&width=543","content":"<a id=\"more\"></a>\n\n<p>#</p>\n<p>首先查看 EXPORT Table 的 RVA 是 0x00092250<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603444028068-ad438e4c-b122-42c7-ba5a-83c7ae4806d3.png#align=left&display=inline&height=258&margin=%5Bobject%20Object%5D&name=image.png&originHeight=516&originWidth=1086&size=203973&status=done&style=none&width=543\" alt=\"image.png\"><br>通过 winhex 验证<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603455279383-e976a9de-52f5-4102-8d74-45043d758e3f.png#align=left&display=inline&height=42&margin=%5Bobject%20Object%5D&name=image.png&originHeight=84&originWidth=671&size=9325&status=done&style=none&width=335.5\" alt=\"image.png\">正确<br>由于 0x92250 在 rdata 节中，所以<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603454081145-461ecd86-9d4b-4c6e-a33a-ef01d8fb30ad.png#align=left&display=inline&height=184&margin=%5Bobject%20Object%5D&name=image.png&originHeight=368&originWidth=1225&size=149582&status=done&style=none&width=612.5\" alt=\"image.png\"><br>首个 IMAGE_EXPORT_DESCRIPTOR 结构的 RAW=0x92250-0x80000+0x65000=0x77250<br>通过 winhex 跳转到这里<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603455598523-412c90f9-3d12-42c3-8f93-6a7daff2e1ea.png#align=left&display=inline&height=244&margin=%5Bobject%20Object%5D&name=image.png&originHeight=332&originWidth=675&size=42132&status=done&style=none&width=497\" alt=\"image.png\"><br><strong>1.Name 成员解析</strong><br>  首先解析导出表重要的成员<br>Nmae: 在导出表一行位置处. 存储 0x096116，这是一个 RVA，所以我们要进行 RAW 转换.<br>0x96116-0x80000+0x65000=0x7b116<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603455769163-2bf16888-d47a-4ee6-a24f-f8d8e086fb25.png#align=left&display=inline&height=64&margin=%5Bobject%20Object%5D&name=image.png&originHeight=101&originWidth=689&size=15169&status=done&style=none&width=435\" alt=\"image.png\">跳转过来，可见这个成员保存的就是自己 DLL 的名称.<br><strong>2.Base 成员解析.   导出函数起始序号</strong><br>  导出函数的序号起始位置. 你 DLL 导出的函数.如果给序号了.那么就从这个序号开始. <br><strong>3.NumberOfFunctions  以及  NumberOfNmaes   函数导出总个数.以及函数以名字导出的个数</strong><br>这个两个成员很简单. 一个就是所有函数导出的个数.一个就是以名字进行导出的个数.  DLL 是可以以序号导出的.<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603455964496-2dc24080-c9d9-4e4f-95aa-958acff9f512.png#align=left&display=inline&height=70&margin=%5Bobject%20Object%5D&name=image.png&originHeight=96&originWidth=655&size=12020&status=done&style=none&width=476\" alt=\"image.png\">可以看出来都为 643 个<br><strong>4.函数地址表</strong><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603456041293-30e90886-2079-4009-8e49-eb43eaa1cbf8.png#align=left&display=inline&height=95&margin=%5Bobject%20Object%5D&name=image.png&originHeight=123&originWidth=658&size=16557&status=done&style=none&width=509\" alt=\"image.png\"><br>这里同样存的都是 RVA,需要经过计算得到 RAW<br>函数地址表 RAW == 0x77278<br>函数名称表 RAW == 0x78b84<br>函数序号表 RAW == 0x7a490<br>根据 ppt 知道，函数地址表指向一个偏移. 这个偏移存放了函数所有导出个数的函数的地址.<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603457781909-79fb89ae-6fb3-4532-be89-a5bce99a3411.png#align=left&display=inline&height=394&margin=%5Bobject%20Object%5D&name=image.png&originHeight=788&originWidth=1459&size=295853&status=done&style=none&width=729.5\" alt=\"image.png\"><br>例如所有导出函数有 2 个. 那么函数地址表中就有 2 项. 每一个占 4 个字节. 存放的是函数入口地址 RVA.<br>例如第一项 RVA 偏移为 0x0162A0 + ImageBase 就是函数地址.<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603457868779-48d9359e-6ae8-4e8c-ad2b-0a059b565a45.png#align=left&display=inline&height=89&margin=%5Bobject%20Object%5D&name=image.png&originHeight=178&originWidth=1062&size=76968&status=done&style=none&width=531\" alt=\"image.png\"><br>然后查看 getcurrentThreadId<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603456717020-230b1785-0618-43c4-a281-3f3b4ed9e41b.png#align=left&display=inline&height=146&margin=%5Bobject%20Object%5D&name=image.png&originHeight=291&originWidth=1105&size=201152&status=done&style=none&width=552.5\" alt=\"image.png\"><br>它是第 21f 个函数，计算偏移后的地址为 542*4+0x77278=0x77af0<br>winhex 跳过去看<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603457008523-72f609a4-c086-4c82-ae80-eb6e0bad17d7.png#align=left&display=inline&height=91&margin=%5Bobject%20Object%5D&name=image.png&originHeight=106&originWidth=667&size=13804&status=done&style=none&width=572\" alt=\"image.png\"><br><strong>里面存放着函数的 RVA 偏移为 0x011a60，和 peview 中一致</strong><br><strong>若计算具体的函数地址，则为 0x011a60+0x6b800000=0x6b811a60</strong><br>通过 IDA 进行查看，同样验证结果<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603452637541-3486e214-c493-4d87-9da6-ef459fe49f44.png#align=left&display=inline&height=112&margin=%5Bobject%20Object%5D&name=image.png&originHeight=145&originWidth=801&size=21432&status=done&style=none&width=617\" alt=\"image.png\"><br>动态加载<br>右键<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603461691144-416e3b0c-743f-4e5f-ad1d-3f446552aaa1.png#align=left&display=inline&height=353&margin=%5Bobject%20Object%5D&name=image.png&originHeight=706&originWidth=1043&size=121278&status=done&style=none&width=521.5\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603461291428-76543e86-2237-4b0f-a9c1-efb3407c8a9d.png#align=left&display=inline&height=82&margin=%5Bobject%20Object%5D&name=image.png&originHeight=111&originWidth=686&size=24178&status=done&style=none&width=507\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603460931535-b6415e24-9185-4dcb-80b4-57351eff24d3.png#align=left&display=inline&height=148&margin=%5Bobject%20Object%5D&name=image.png&originHeight=296&originWidth=855&size=45777&status=done&style=none&width=427.5\" alt=\"image.png\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.cnblogs.com/gd-luojialin/p/11306189.html\">PE 知识复习之 PE 的导出表</a></li>\n<li>【逆向】PE 结构分析和关于 PE 的一些问题及解决 <a href=\"https://www.shangmayuan.com/a/3289bd534203495c996382ae.html#%E5%AF%BC%E5%87%BA%E8%A1%A8\">https://www.shangmayuan.com/a/3289bd534203495c996382ae.html</a></li>\n<li>EAT 表 <a href=\"https://www.shuzhiduo.com/A/x9J2YK1gz6/\">https://www.shuzhiduo.com/A/x9J2YK1gz6/</a></li>\n<li>【逆向】【PE 入门】使用 PEView 分析 PE 文件 <a href=\"https://blog.csdn.net/qq_43633973/article/details/102378477\">https://blog.csdn.net/qq_43633973/article/details/102378477</a></li>\n<li>《逆向学习日记》 No.1 手动计算 RvaToRaw 来查看函数导入表与导出表 <a href=\"https://www.dazhuanlan.com/2020/01/02/5e0dc9725d3e9/\">https://www.dazhuanlan.com/2020/01/02/5e0dc9725d3e9/</a></li>\n<li>基址重定位表 <a href=\"https://blog.csdn.net/SKI_12/article/details/80636568\">https://blog.csdn.net/SKI_12/article/details/80636568</a> <a href=\"https://zhuanlan.kanxue.com/article-10619.htm\">https://zhuanlan.kanxue.com/article-10619.htm</a></li>\n<li>PE 结构体中导出表/导入表解析——初阶 - 看雪学院的文章 - 知乎 <a href=\"https://zhuanlan.zhihu.com/p/33348352\">https://zhuanlan.zhihu.com/p/33348352</a></li>\n</ul>\n<h1 id=\"用到的工具\"><a href=\"#用到的工具\" class=\"headerlink\" title=\"用到的工具\"></a>用到的工具</h1><ul>\n<li>pe_tree <a href=\"https://github.com/blackberry/pe_tree\">https://github.com/blackberry/pe_tree</a></li>\n<li>winhex</li>\n<li>peview</li>\n<li>IDA PRO</li>\n</ul>\n","more":"<p>#</p>\n<p>首先查看 EXPORT Table 的 RVA 是 0x00092250<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603444028068-ad438e4c-b122-42c7-ba5a-83c7ae4806d3.png#align=left&display=inline&height=258&margin=%5Bobject%20Object%5D&name=image.png&originHeight=516&originWidth=1086&size=203973&status=done&style=none&width=543\" alt=\"image.png\"><br>通过 winhex 验证<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603455279383-e976a9de-52f5-4102-8d74-45043d758e3f.png#align=left&display=inline&height=42&margin=%5Bobject%20Object%5D&name=image.png&originHeight=84&originWidth=671&size=9325&status=done&style=none&width=335.5\" alt=\"image.png\">正确<br>由于 0x92250 在 rdata 节中，所以<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603454081145-461ecd86-9d4b-4c6e-a33a-ef01d8fb30ad.png#align=left&display=inline&height=184&margin=%5Bobject%20Object%5D&name=image.png&originHeight=368&originWidth=1225&size=149582&status=done&style=none&width=612.5\" alt=\"image.png\"><br>首个 IMAGE_EXPORT_DESCRIPTOR 结构的 RAW=0x92250-0x80000+0x65000=0x77250<br>通过 winhex 跳转到这里<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603455598523-412c90f9-3d12-42c3-8f93-6a7daff2e1ea.png#align=left&display=inline&height=244&margin=%5Bobject%20Object%5D&name=image.png&originHeight=332&originWidth=675&size=42132&status=done&style=none&width=497\" alt=\"image.png\"><br><strong>1.Name 成员解析</strong><br>  首先解析导出表重要的成员<br>Nmae: 在导出表一行位置处. 存储 0x096116，这是一个 RVA，所以我们要进行 RAW 转换.<br>0x96116-0x80000+0x65000=0x7b116<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603455769163-2bf16888-d47a-4ee6-a24f-f8d8e086fb25.png#align=left&display=inline&height=64&margin=%5Bobject%20Object%5D&name=image.png&originHeight=101&originWidth=689&size=15169&status=done&style=none&width=435\" alt=\"image.png\">跳转过来，可见这个成员保存的就是自己 DLL 的名称.<br><strong>2.Base 成员解析.   导出函数起始序号</strong><br>  导出函数的序号起始位置. 你 DLL 导出的函数.如果给序号了.那么就从这个序号开始. <br><strong>3.NumberOfFunctions  以及  NumberOfNmaes   函数导出总个数.以及函数以名字导出的个数</strong><br>这个两个成员很简单. 一个就是所有函数导出的个数.一个就是以名字进行导出的个数.  DLL 是可以以序号导出的.<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603455964496-2dc24080-c9d9-4e4f-95aa-958acff9f512.png#align=left&display=inline&height=70&margin=%5Bobject%20Object%5D&name=image.png&originHeight=96&originWidth=655&size=12020&status=done&style=none&width=476\" alt=\"image.png\">可以看出来都为 643 个<br><strong>4.函数地址表</strong><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603456041293-30e90886-2079-4009-8e49-eb43eaa1cbf8.png#align=left&display=inline&height=95&margin=%5Bobject%20Object%5D&name=image.png&originHeight=123&originWidth=658&size=16557&status=done&style=none&width=509\" alt=\"image.png\"><br>这里同样存的都是 RVA,需要经过计算得到 RAW<br>函数地址表 RAW == 0x77278<br>函数名称表 RAW == 0x78b84<br>函数序号表 RAW == 0x7a490<br>根据 ppt 知道，函数地址表指向一个偏移. 这个偏移存放了函数所有导出个数的函数的地址.<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603457781909-79fb89ae-6fb3-4532-be89-a5bce99a3411.png#align=left&display=inline&height=394&margin=%5Bobject%20Object%5D&name=image.png&originHeight=788&originWidth=1459&size=295853&status=done&style=none&width=729.5\" alt=\"image.png\"><br>例如所有导出函数有 2 个. 那么函数地址表中就有 2 项. 每一个占 4 个字节. 存放的是函数入口地址 RVA.<br>例如第一项 RVA 偏移为 0x0162A0 + ImageBase 就是函数地址.<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603457868779-48d9359e-6ae8-4e8c-ad2b-0a059b565a45.png#align=left&display=inline&height=89&margin=%5Bobject%20Object%5D&name=image.png&originHeight=178&originWidth=1062&size=76968&status=done&style=none&width=531\" alt=\"image.png\"><br>然后查看 getcurrentThreadId<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603456717020-230b1785-0618-43c4-a281-3f3b4ed9e41b.png#align=left&display=inline&height=146&margin=%5Bobject%20Object%5D&name=image.png&originHeight=291&originWidth=1105&size=201152&status=done&style=none&width=552.5\" alt=\"image.png\"><br>它是第 21f 个函数，计算偏移后的地址为 542*4+0x77278=0x77af0<br>winhex 跳过去看<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603457008523-72f609a4-c086-4c82-ae80-eb6e0bad17d7.png#align=left&display=inline&height=91&margin=%5Bobject%20Object%5D&name=image.png&originHeight=106&originWidth=667&size=13804&status=done&style=none&width=572\" alt=\"image.png\"><br><strong>里面存放着函数的 RVA 偏移为 0x011a60，和 peview 中一致</strong><br><strong>若计算具体的函数地址，则为 0x011a60+0x6b800000=0x6b811a60</strong><br>通过 IDA 进行查看，同样验证结果<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603452637541-3486e214-c493-4d87-9da6-ef459fe49f44.png#align=left&display=inline&height=112&margin=%5Bobject%20Object%5D&name=image.png&originHeight=145&originWidth=801&size=21432&status=done&style=none&width=617\" alt=\"image.png\"><br>动态加载<br>右键<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603461691144-416e3b0c-743f-4e5f-ad1d-3f446552aaa1.png#align=left&display=inline&height=353&margin=%5Bobject%20Object%5D&name=image.png&originHeight=706&originWidth=1043&size=121278&status=done&style=none&width=521.5\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603461291428-76543e86-2237-4b0f-a9c1-efb3407c8a9d.png#align=left&display=inline&height=82&margin=%5Bobject%20Object%5D&name=image.png&originHeight=111&originWidth=686&size=24178&status=done&style=none&width=507\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/1629942/1603460931535-b6415e24-9185-4dcb-80b4-57351eff24d3.png#align=left&display=inline&height=148&margin=%5Bobject%20Object%5D&name=image.png&originHeight=296&originWidth=855&size=45777&status=done&style=none&width=427.5\" alt=\"image.png\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://www.cnblogs.com/gd-luojialin/p/11306189.html\">PE 知识复习之 PE 的导出表</a></li>\n<li>【逆向】PE 结构分析和关于 PE 的一些问题及解决 <a href=\"https://www.shangmayuan.com/a/3289bd534203495c996382ae.html#%E5%AF%BC%E5%87%BA%E8%A1%A8\">https://www.shangmayuan.com/a/3289bd534203495c996382ae.html</a></li>\n<li>EAT 表 <a href=\"https://www.shuzhiduo.com/A/x9J2YK1gz6/\">https://www.shuzhiduo.com/A/x9J2YK1gz6/</a></li>\n<li>【逆向】【PE 入门】使用 PEView 分析 PE 文件 <a href=\"https://blog.csdn.net/qq_43633973/article/details/102378477\">https://blog.csdn.net/qq_43633973/article/details/102378477</a></li>\n<li>《逆向学习日记》 No.1 手动计算 RvaToRaw 来查看函数导入表与导出表 <a href=\"https://www.dazhuanlan.com/2020/01/02/5e0dc9725d3e9/\">https://www.dazhuanlan.com/2020/01/02/5e0dc9725d3e9/</a></li>\n<li>基址重定位表 <a href=\"https://blog.csdn.net/SKI_12/article/details/80636568\">https://blog.csdn.net/SKI_12/article/details/80636568</a> <a href=\"https://zhuanlan.kanxue.com/article-10619.htm\">https://zhuanlan.kanxue.com/article-10619.htm</a></li>\n<li>PE 结构体中导出表/导入表解析——初阶 - 看雪学院的文章 - 知乎 <a href=\"https://zhuanlan.zhihu.com/p/33348352\">https://zhuanlan.zhihu.com/p/33348352</a></li>\n</ul>\n<h1 id=\"用到的工具\"><a href=\"#用到的工具\" class=\"headerlink\" title=\"用到的工具\"></a>用到的工具</h1><ul>\n<li>pe_tree <a href=\"https://github.com/blackberry/pe_tree\">https://github.com/blackberry/pe_tree</a></li>\n<li>winhex</li>\n<li>peview</li>\n<li>IDA PRO</li>\n</ul>","categories":[{"name":"RE","path":"api/categories/RE.json"}],"tags":[{"name":"RE","path":"api/tags/RE.json"},{"name":"PEview","path":"api/tags/PEview.json"}]}